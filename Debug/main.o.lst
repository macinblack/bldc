   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "main.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.NVIC_EnableIRQ,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	NVIC_EnableIRQ:
  25              	.LFB108:
  26              	 .file 1 "D:\\Naukowe\\BLDC_workspace\\PWM_from_ex/Libraries/CMSIS/Include/core_cm4.h"
   1:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /**************************************************************************//**
   2:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  * @file     core_cm4.h
   3:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  * @version  V4.20
   5:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  * @date     20. August 2015
   6:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
   7:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
   9:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    All rights reserved.
  10:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    Redistribution and use in source and binary forms, with or without
  11:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    modification, are permitted provided that the following conditions are met:
  12:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    - Redistributions of source code must retain the above copyright
  13:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****      notice, this list of conditions and the following disclaimer.
  14:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    - Redistributions in binary form must reproduce the above copyright
  15:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****      notice, this list of conditions and the following disclaimer in the
  16:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****      documentation and/or other materials provided with the distribution.
  17:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****      to endorse or promote products derived from this software without
  19:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****      specific prior written permission.
  20:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    *
  21:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    ---------------------------------------------------------------------------*/
  33:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
  34:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
  35:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #if   defined ( __ICCARM__ )
  36:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #elif (__ARMCC_VERSION >= 6010050)
  38:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  39:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #endif
  40:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
  41:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  42:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_GENERIC
  43:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
  44:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #include <stdint.h>
  45:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
  46:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
  47:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
  48:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #endif
  49:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
  50:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  51:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  52:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
  53:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  54:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  55:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
  56:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  57:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****      Unions are used for effective representation of core registers.
  58:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
  59:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  60:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****      Function-like macros are used to allow more efficient code.
  61:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
  62:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
  63:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
  64:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
  65:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  *                 CMSIS definitions
  66:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
  67:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup Cortex_M4
  68:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   @{
  69:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
  70:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
  71:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /*  CMSIS CM4 definitions */
  72:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  73:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (0x14U)                                      /*!< [15:0]  CMSIS H
  74:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  75:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  76:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
  77:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define __CORTEX_M                (0x04U)                                      /*!< Cortex-M Core *
  78:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
  79:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
  80:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #if   defined ( __CC_ARM )
  81:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  82:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  83:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static __inline
  84:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
  85:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __GNUC__ )
  86:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  87:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  88:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
  89:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
  90:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __ICCARM__ )
  91:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  92:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
  93:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
  94:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
  95:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TMS470__ )
  96:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
  97:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
  98:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
  99:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TASKING__ )
 100:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 101:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 102:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
 103:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 104:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __CSMC__ )
 105:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __packed
 106:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 107:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 108:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static inline
 109:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 110:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #elif (__ARMCC_VERSION >= 6010050)
 111:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
 112:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
 113:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define __STATIC_INLINE  static __inline
 114:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 115:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #else
 116:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #error Unknown compiler
 117:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #endif
 118:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 119:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
 120:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 121:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** */
 122:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #if defined ( __CC_ARM )
 123:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TARGET_FPU_VFP
 124:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 125:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 126:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #else
 127:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 128:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 129:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 130:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #else
 131:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 132:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 133:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 134:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __GNUC__ )
 135:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 136:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 137:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 138:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #else
 139:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 140:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 141:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 142:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #else
 143:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 144:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 145:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 146:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __ICCARM__ )
 147:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARMVFP__
 148:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 149:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 150:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #else
 151:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 152:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 153:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 154:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #else
 155:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 156:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 157:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 158:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TMS470__ )
 159:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 160:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 161:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 162:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #else
 163:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 164:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 165:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 166:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #else
 167:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 168:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 169:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 170:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TASKING__ )
 171:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __FPU_VFP__
 172:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 173:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 174:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #else
 175:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 176:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 177:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 178:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #else
 179:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 180:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 181:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 182:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __CSMC__ )
 183:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 184:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1U)
 185:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 186:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #else
 187:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 188:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 189:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 190:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #else
 191:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 192:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 193:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 194:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #elif (__ARMCC_VERSION >= 6010050)
 195:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARM_PCS_VFP
 196:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #if (__FPU_PRESENT == 1)
 197:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 198:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #else
 199:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 200:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 201:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 202:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #else
 203:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 204:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 205:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 206:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #endif
 207:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 208:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 209:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 210:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #include "core_cmSimd.h"                 /* Compiler specific SIMD Intrinsics */
 211:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 212:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 213:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** }
 214:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #endif
 215:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 216:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 217:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 218:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CMSIS_GENERIC
 219:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 220:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 221:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 222:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 223:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 224:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
 225:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #endif
 226:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 227:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* check device defines and use defaults */
 228:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 229:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __CM4_REV
 230:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #define __CM4_REV               0x0000U
 231:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 232:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 233:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 234:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __FPU_PRESENT
 235:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_PRESENT             0U
 236:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 237:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 238:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 239:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __MPU_PRESENT
 240:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #define __MPU_PRESENT             0U
 241:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 242:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 243:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 244:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 245:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #define __NVIC_PRIO_BITS          4U
 246:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 247:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 248:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 249:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 250:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 251:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 252:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 253:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #endif
 254:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 255:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 256:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /**
 257:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 258:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 259:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 260:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \li to specify the access to peripheral variables.
 261:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 262:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** */
 263:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 264:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 265:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #else
 266:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 267:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #endif
 268:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 269:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 270:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 271:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* following defines should be used for structure members */
 272:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 273:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 274:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 275:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 276:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group Cortex_M4 */
 277:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 278:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 279:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 280:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
 281:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  *                 Register Abstraction
 282:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   Core Register contain:
 283:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register
 284:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Register
 285:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   - Core SCB Register
 286:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Register
 287:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Register
 288:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   - Core MPU Register
 289:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   - Core FPU Register
 290:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
 291:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \defgroup CMSIS_core_register Defines and Type Definitions
 292:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \brief Type definitions and defines for Cortex-M processor based devices.
 293:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** */
 294:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 295:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup    CMSIS_core_register
 296:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup   CMSIS_CORE  Status and Control Registers
 297:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \brief  Core Register type definitions.
 298:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   @{
 299:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
 300:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 301:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Union type to access the Application Program Status Register (APSR).
 302:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
 303:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 304:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** {
 305:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   struct
 306:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   {
 307:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 308:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 309:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 310:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 311:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 312:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 313:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 314:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 315:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 316:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 317:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** } APSR_Type;
 318:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 319:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* APSR Register Definitions */
 320:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 321:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 322:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 323:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 324:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 325:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 326:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 327:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 328:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 329:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 330:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 331:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 332:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 333:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 334:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 335:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 336:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 337:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 338:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 339:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Union type to access the Interrupt Program Status Register (IPSR).
 340:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
 341:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 342:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** {
 343:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   struct
 344:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   {
 345:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 346:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 347:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 348:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 349:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** } IPSR_Type;
 350:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 351:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* IPSR Register Definitions */
 352:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 353:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 354:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 355:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 356:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 357:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
 358:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 359:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** {
 360:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   struct
 361:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   {
 362:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 363:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved */
 364:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 365:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 366:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 367:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 368:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 369:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 370:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 371:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 372:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 373:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 374:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 375:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** } xPSR_Type;
 376:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 377:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* xPSR Register Definitions */
 378:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 379:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 380:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 381:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 382:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 383:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 384:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 385:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 386:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 387:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 388:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 389:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 390:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 391:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 392:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 393:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 394:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 395:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 396:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 397:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 398:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 399:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 400:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 401:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 402:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 403:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 404:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 405:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 406:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Union type to access the Control Registers (CONTROL).
 407:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
 408:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 409:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** {
 410:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   struct
 411:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   {
 412:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 413:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 414:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 415:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 416:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 417:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 418:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** } CONTROL_Type;
 419:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 420:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* CONTROL Register Definitions */
 421:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 422:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 423:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 424:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 425:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 426:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 427:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 428:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 429:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 430:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CORE */
 431:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 432:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 433:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup    CMSIS_core_register
 434:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 435:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Type definitions for the NVIC Registers
 436:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   @{
 437:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
 438:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 439:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 440:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
 441:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 442:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** {
 443:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 444:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[24U];
 445:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 446:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RSERVED1[24U];
 447:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 448:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[24U];
 449:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 450:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[24U];
 451:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 452:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[56U];
 453:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 454:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[644U];
 455:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 456:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** }  NVIC_Type;
 457:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 458:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 459:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 460:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 461:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 462:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_NVIC */
 463:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 464:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 465:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup  CMSIS_core_register
 466:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_SCB     System Control Block (SCB)
 467:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Type definitions for the System Control Block Registers
 468:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   @{
 469:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
 470:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 471:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Structure type to access the System Control Block (SCB).
 472:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
 473:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 474:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** {
 475:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 476:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 477:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 478:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 479:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 480:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 481:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 482:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 483:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 484:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 485:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 486:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 487:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 488:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 489:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 490:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 491:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 492:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 493:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 494:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[5U];
 495:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 496:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** } SCB_Type;
 497:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 498:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* SCB CPUID Register Definitions */
 499:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 500:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 501:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 502:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 503:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 504:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 505:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 506:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 507:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 508:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 509:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 510:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 511:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 512:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 513:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 514:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 515:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 516:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 517:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 518:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 519:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 520:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 521:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 522:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 523:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 524:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 525:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 526:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 527:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 528:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 529:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 530:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 531:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 532:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 533:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 534:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 535:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 536:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 537:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 538:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 539:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 540:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 541:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 542:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 543:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 544:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 545:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 546:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 547:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 548:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 549:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 550:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 551:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 552:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 553:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 554:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 555:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 556:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 557:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 558:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 559:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 560:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 561:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 562:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 563:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 564:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 565:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 566:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 567:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 568:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 569:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 570:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 571:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Control Register Definitions */
 572:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 573:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 574:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 575:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 576:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 577:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 578:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 579:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 580:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 581:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configuration Control Register Definitions */
 582:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 583:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 584:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 585:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 586:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 587:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 588:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 589:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 590:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 591:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 592:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 593:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 594:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 595:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 596:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 597:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 598:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 599:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 600:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 601:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 602:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 603:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 604:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 605:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 606:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 607:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 608:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 609:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 610:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 611:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 612:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 613:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 614:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 615:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 616:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 617:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 618:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 619:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 620:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 621:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 622:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 623:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 624:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 625:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 626:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 627:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 628:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 629:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 630:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 631:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 632:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 633:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 634:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 635:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 636:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 637:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 638:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 639:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 640:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 641:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 642:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 643:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configurable Fault Status Registers Definitions */
 644:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 645:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 646:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 647:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 648:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 649:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 650:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 651:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 652:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 653:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Hard Fault Status Registers Definitions */
 654:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 655:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 656:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 657:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 658:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 659:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 660:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 661:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 662:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 663:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 664:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 665:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 666:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 667:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 668:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 669:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 670:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 671:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 672:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 673:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 674:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 675:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 676:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 677:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 678:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 679:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCB */
 680:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 681:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 682:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup  CMSIS_core_register
 683:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 684:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Type definitions for the System Control and ID Register not in the SCB
 685:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   @{
 686:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
 687:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 688:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Structure type to access the System Control and ID Register not in the SCB.
 689:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
 690:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 691:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** {
 692:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 693:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 694:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 695:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** } SCnSCB_Type;
 696:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 697:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 698:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 699:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 700:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 701:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* Auxiliary Control Register Definitions */
 702:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 703:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 704:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 705:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 706:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 707:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 708:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 709:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 710:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 711:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 712:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 713:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 714:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 715:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 716:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 717:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 718:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 719:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 720:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup  CMSIS_core_register
 721:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 722:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Type definitions for the System Timer Registers.
 723:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   @{
 724:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
 725:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 726:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Structure type to access the System Timer (SysTick).
 727:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
 728:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 729:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** {
 730:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 731:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 732:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 733:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 734:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** } SysTick_Type;
 735:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 736:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Control / Status Register Definitions */
 737:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 738:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 739:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 740:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 741:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 742:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 743:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 744:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 745:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 746:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 747:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 748:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 749:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Reload Register Definitions */
 750:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 751:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 752:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 753:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Current Register Definitions */
 754:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 755:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 756:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 757:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Calibration Register Definitions */
 758:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 759:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 760:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 761:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 762:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 763:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 764:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 765:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 766:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 767:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SysTick */
 768:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 769:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 770:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup  CMSIS_core_register
 771:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 772:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Type definitions for the Instrumentation Trace Macrocell (ITM)
 773:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   @{
 774:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
 775:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 776:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 777:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
 778:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 779:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** {
 780:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __OM  union
 781:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   {
 782:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 783:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 784:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 785:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 786:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[864U];
 787:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 788:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[15U];
 789:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 790:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[15U];
 791:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 792:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[29U];
 793:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 794:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 795:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 796:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[43U];
 797:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 798:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 799:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[6U];
 800:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 801:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 802:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 803:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 804:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 805:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 806:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 807:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 808:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 809:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 810:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 811:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 812:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** } ITM_Type;
 813:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 814:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 815:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 816:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 817:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 818:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Control Register Definitions */
 819:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 820:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 821:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 822:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 823:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 824:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 825:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 826:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 827:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 828:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 829:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 830:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 831:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 832:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 833:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 834:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 835:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 836:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 837:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 838:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 839:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 840:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 841:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 842:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 843:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 844:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 845:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 846:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Write Register Definitions */
 847:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 848:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 849:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 850:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Read Register Definitions */
 851:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 852:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 853:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 854:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 855:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 856:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 857:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 858:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Lock Status Register Definitions */
 859:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 860:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 861:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 862:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 863:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 864:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 865:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 866:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 867:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 868:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 869:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 870:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 871:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup  CMSIS_core_register
 872:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 873:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Type definitions for the Data Watchpoint and Trace (DWT)
 874:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   @{
 875:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
 876:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 877:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 878:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
 879:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 880:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** {
 881:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 882:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 883:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 884:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 885:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 886:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 887:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 888:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 889:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 890:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 891:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 892:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 893:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 894:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 895:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 896:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[1U];
 897:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 898:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 899:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 900:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[1U];
 901:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 902:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 903:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 904:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** } DWT_Type;
 905:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 906:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Control Register Definitions */
 907:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 908:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 909:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 910:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 911:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 912:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 913:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 914:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 915:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 916:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 917:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 918:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 919:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 920:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 921:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 922:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 923:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 924:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 925:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 926:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 927:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 928:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 929:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 930:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 931:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 932:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 933:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 934:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 935:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 936:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 937:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 938:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 939:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 940:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 941:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 942:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 943:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 944:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 945:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 946:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 947:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 948:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 949:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 950:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 951:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 952:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 953:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 954:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 955:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 956:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 957:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 958:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 959:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 960:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 961:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* DWT CPI Count Register Definitions */
 962:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 963:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 964:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 965:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 966:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 967:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 968:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 969:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Sleep Count Register Definitions */
 970:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 971:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 972:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 973:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* DWT LSU Count Register Definitions */
 974:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 975:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 976:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 977:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 978:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 979:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 980:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 981:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Mask Register Definitions */
 982:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 983:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 984:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 985:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Function Register Definitions */
 986:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 987:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 988:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 989:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 990:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 991:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 992:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 993:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 994:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 995:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 996:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 997:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
 998:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 999:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1000:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1001:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1002:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1003:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1004:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1005:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1006:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1007:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1008:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1009:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1010:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1011:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1012:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1013:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1014:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1015:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1016:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup  CMSIS_core_register
1017:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1018:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Type definitions for the Trace Port Interface (TPI)
1019:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   @{
1020:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
1021:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1022:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Structure type to access the Trace Port Interface Register (TPI).
1023:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
1024:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1025:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** {
1026:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1027:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1028:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[2U];
1029:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1030:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[55U];
1031:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1032:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[131U];
1033:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1034:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1035:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1036:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[759U];
1037:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1038:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1039:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1040:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[1U];
1041:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1042:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1043:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1044:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[39U];
1045:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1046:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1047:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED7[8U];
1048:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1049:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1050:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** } TPI_Type;
1051:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1052:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1053:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1054:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1055:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1056:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1057:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1058:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1059:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1060:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1061:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1062:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1063:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1064:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1065:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1066:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1067:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1068:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1069:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1070:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1071:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1072:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1073:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1074:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1075:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1076:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1077:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1078:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1079:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1080:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* TPI TRIGGER Register Definitions */
1081:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1082:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1083:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1084:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1085:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1086:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1087:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1088:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1089:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1090:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1091:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1092:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1093:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1094:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1095:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1096:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1097:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1098:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1099:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1100:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1101:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1102:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1103:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1104:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1105:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1106:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1107:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1108:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1109:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1110:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1111:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1112:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1113:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1114:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1115:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1116:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1117:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1118:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1119:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1120:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1121:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1122:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1123:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1124:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1125:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1126:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1127:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1128:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1129:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1130:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1131:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1132:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1133:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1134:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1135:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1136:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1137:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1138:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1139:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1140:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVID Register Definitions */
1141:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1142:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1143:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1144:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1145:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1146:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1147:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1148:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1149:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1150:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1151:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1152:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1153:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1154:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1155:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1156:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1157:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1158:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1159:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1160:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1161:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1162:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1163:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1164:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1165:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1166:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1167:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1168:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1169:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #if (__MPU_PRESENT == 1U)
1170:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup  CMSIS_core_register
1171:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1172:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Type definitions for the Memory Protection Unit (MPU)
1173:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   @{
1174:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
1175:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1176:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Structure type to access the Memory Protection Unit (MPU).
1177:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
1178:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1179:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** {
1180:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1181:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1182:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1183:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1184:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1185:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1186:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1187:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1188:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1189:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1190:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1191:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** } MPU_Type;
1192:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1193:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Type Register */
1194:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1195:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1196:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1197:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1198:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1199:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1200:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1201:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1202:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1203:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Control Register */
1204:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1205:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1206:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1207:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1208:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1209:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1210:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1211:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1212:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1213:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Number Register */
1214:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1215:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1216:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1217:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Base Address Register */
1218:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1219:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1220:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1221:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1222:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1223:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1224:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1225:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1226:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1227:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Attribute and Size Register */
1228:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1229:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1230:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1231:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1232:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1233:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1234:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1235:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1236:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1237:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1238:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1239:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1240:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1241:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1242:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1243:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1244:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1245:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1246:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1247:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1248:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1249:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1250:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1251:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1252:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1253:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1254:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1255:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1256:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1257:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1258:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_MPU */
1259:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #endif
1260:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1261:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1262:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #if (__FPU_PRESENT == 1U)
1263:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup  CMSIS_core_register
1264:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1265:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Type definitions for the Floating Point Unit (FPU)
1266:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   @{
1267:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
1268:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1269:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Structure type to access the Floating Point Unit (FPU).
1270:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
1271:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1272:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** {
1273:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
1274:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1275:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1276:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1277:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1278:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1279:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** } FPU_Type;
1280:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1281:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Control Register */
1282:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1283:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1284:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1285:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1286:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1287:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1288:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1289:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1290:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1291:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1292:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1293:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1294:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1295:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1296:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1297:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1298:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1299:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1300:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1301:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1302:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1303:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1304:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1305:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1306:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1307:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1308:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1309:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Address Register */
1310:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1311:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1312:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1313:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Default Status Control Register */
1314:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1315:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1316:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1317:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1318:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1319:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1320:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1321:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1322:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1323:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1324:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1325:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1326:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 0 */
1327:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1328:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1329:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1330:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1331:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1332:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1333:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1334:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1335:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1336:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1337:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1338:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1339:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1340:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1341:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1342:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1343:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1344:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1345:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1346:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1347:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1348:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1349:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1350:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1351:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 1 */
1352:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1353:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1354:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1355:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1356:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1357:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1358:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1359:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1360:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1361:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1362:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1363:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1364:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_FPU */
1365:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #endif
1366:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1367:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1368:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup  CMSIS_core_register
1369:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1370:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Type definitions for the Core Debug Registers
1371:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   @{
1372:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
1373:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1374:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Structure type to access the Core Debug Register (CoreDebug).
1375:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
1376:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1377:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** {
1378:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1379:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1380:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1381:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1382:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** } CoreDebug_Type;
1383:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1384:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Halting Control and Status Register */
1385:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1386:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1387:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1388:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1389:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1390:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1391:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1392:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1393:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1394:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1395:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1396:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1397:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1398:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1399:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1400:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1401:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1402:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1403:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1404:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1405:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1406:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1407:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1408:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1409:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1410:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1411:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1412:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1413:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1414:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1415:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1416:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1417:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1418:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1419:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1420:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1421:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Core Register Selector Register */
1422:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1423:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1424:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1425:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1426:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1427:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1428:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Exception and Monitor Control Register */
1429:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1430:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1431:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1432:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1433:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1434:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1435:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1436:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1437:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1438:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1439:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1440:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1441:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1442:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1443:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1444:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1445:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1446:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1447:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1448:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1449:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1450:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1451:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1452:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1453:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1454:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1455:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1456:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1457:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1458:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1459:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1460:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1461:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1462:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1463:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1464:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1465:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1466:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1467:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1468:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1469:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1470:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1471:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup    CMSIS_core_register
1472:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup   CMSIS_core_bitfield     Core register bit field macros
1473:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1474:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   @{
1475:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
1476:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1477:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /**
1478:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** * Mask and shift a bit field value for use in a register bit range.
1479:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** *
1480:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** * \param[in] field Name of the register bit field.
1481:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** * \param[in] value Value of the bit field.
1482:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** * \return Masked and shifted value.
1483:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** */
1484:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1485:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1486:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /**
1487:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** * Mask and shift a register value to extract a bit filed value.
1488:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** *
1489:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** * \param[in] field Name of the register bit field.
1490:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** * \param[in] value Value of register.
1491:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** * \return Masked and shifted bit field value.
1492:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** */
1493:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1494:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1495:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1496:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1497:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1498:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup    CMSIS_core_register
1499:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup   CMSIS_core_base     Core Definitions
1500:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Definitions for base addresses, unions, and structures.
1501:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   @{
1502:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
1503:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1504:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* Memory mapping of Cortex-M4 Hardware */
1505:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1506:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address        
1507:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address        
1508:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address        
1509:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1510:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address    
1511:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address       
1512:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1513:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1514:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1515:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1516:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1517:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1518:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1519:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1520:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1521:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1522:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1523:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #if (__MPU_PRESENT == 1U)
1524:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit  
1525:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit  
1526:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #endif
1527:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1528:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #if (__FPU_PRESENT == 1U)
1529:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit     
1530:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit     
1531:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** #endif
1532:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1533:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /*@} */
1534:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1535:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1536:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1537:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
1538:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  *                Hardware Abstraction Layer
1539:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   Core Function Interface contains:
1540:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Functions
1541:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Functions
1542:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Functions
1543:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register Access Functions
1544:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
1545:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1546:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** */
1547:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1548:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1549:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1550:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1551:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \ingroup  CMSIS_Core_FunctionInterface
1552:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1553:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \brief      Functions that manage interrupts and exceptions via the NVIC.
1554:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     @{
1555:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
1556:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1557:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Set Priority Grouping
1558:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1559:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   The function sets the priority grouping field using the required unlock sequence.
1560:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1561:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   Only values from 0..7 are used.
1562:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   In case of a conflict between priority grouping and available
1563:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1564:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1565:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \param [in]      PriorityGroup  Priority grouping field.
1566:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
1567:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1568:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** {
1569:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t reg_value;
1570:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1571:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1572:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1573:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1574:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  (reg_value                                   |
1575:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1576:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1577:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   SCB->AIRCR =  reg_value;
1578:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** }
1579:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1580:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1581:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Get Priority Grouping
1582:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1583:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   The function reads the priority grouping field from the NVIC Interrupt Controller.
1584:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1585:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1586:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
1587:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1588:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** {
1589:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1590:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** }
1591:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1592:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1593:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** /** \brief  Enable External Interrupt
1594:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1595:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     The function enables a device-specific interrupt in the NVIC interrupt controller.
1596:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** 
1597:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****     \param [in]      IRQn  External interrupt number. Value cannot be negative.
1598:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****  */
1599:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1600:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** {
  27              	 .loc 1 1600 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 0346     	 mov r3,r0
  43 0008 FB71     	 strb r3,[r7,#7]
1601:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
  44              	 .loc 1 1601 0
  45 000a 0849     	 ldr r1,.L2
  46 000c 97F90730 	 ldrsb r3,[r7,#7]
  47 0010 5B09     	 lsrs r3,r3,#5
  48 0012 FA79     	 ldrb r2,[r7,#7]
  49 0014 02F01F02 	 and r2,r2,#31
  50 0018 0120     	 movs r0,#1
  51 001a 00FA02F2 	 lsl r2,r0,r2
  52 001e 41F82320 	 str r2,[r1,r3,lsl#2]
1602:D:\Naukowe\BLDC_workspace\PWM_from_ex/Libraries/CMSIS/Include\core_cm4.h **** }
  53              	 .loc 1 1602 0
  54 0022 0C37     	 adds r7,r7,#12
  55              	.LCFI3:
  56              	 .cfi_def_cfa_offset 4
  57 0024 BD46     	 mov sp,r7
  58              	.LCFI4:
  59              	 .cfi_def_cfa_register 13
  60              	 
  61 0026 5DF8047B 	 ldr r7,[sp],#4
  62              	.LCFI5:
  63              	 .cfi_restore 7
  64              	 .cfi_def_cfa_offset 0
  65 002a 7047     	 bx lr
  66              	.L3:
  67              	 .align 2
  68              	.L2:
  69 002c 00E100E0 	 .word -536813312
  70              	 .cfi_endproc
  71              	.LFE108:
  73              	 .section .text.XMC_CCU8_SLICE_EnableEvent,"ax",%progbits
  74              	 .align 2
  75              	 .thumb
  76              	 .thumb_func
  78              	XMC_CCU8_SLICE_EnableEvent:
  79              	.LFB197:
  80              	 .file 2 "D:\\Naukowe\\BLDC_workspace\\PWM_from_ex\\Libraries\\XMCLib\\inc/xmc_ccu8.h"
   1:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
   2:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @file xmc_ccu8.h
   3:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @date 2015-10-27
   4:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
   5:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @cond
   6:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  **************************************************************************************************
   7:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * XMClib v2.1.2 - XMC Peripheral Driver Library 
   8:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
   9:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Copyright (c) 2015, Infineon Technologies AG
  10:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * All rights reserved.                        
  11:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                                             
  12:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * following conditions are met:   
  14:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                                                                              
  15:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * disclaimer.                        
  17:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * 
  18:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * 
  21:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * products derived from this software without specific prior written permission.                  
  23:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                                                                              
  24:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                                                                              
  32:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  **************************************************************************************************
  35:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
  36:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Change History
  37:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * --------------
  38:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
  39:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * 2015-02-20:
  40:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *     - Initial <br>
  41:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *     - Documentation updates <br>
  42:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
  43:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * 2015-06-20:
  44:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  46:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *       during external load event.
  47:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
  48:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * 2015-07-01:
  49:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_CHECK_INTERRUPT macro, fixed the missing item for compare match down for
  50:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
  51:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * 2015-07-24:
  52:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  53:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
  54:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * 2015-08-17:
  55:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  56:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t is added for all the devices except XMC45 devices, t
  57:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *       shadow transfer has to happen. <br>
  58:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *     - XMC_CCU8_SOURCE_OUT0_t, XMC_CCU8_SOURCE_OUT1_t, XMC_CCU8_SOURCE_OUT2_t, XMC_CCU8_SOURCE_OU
  59:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *       to maps one of the ST to OUT0, OUT1, OUT3, OUT4 signals.
  60:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_COMPARE_CONFIG_t structure, selector_out0, selector_out1, selector_out2,
  61:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *       added to support XMC14 devices.
  62:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *     - XMC_CCU8_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  63:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_EnableCascadedShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfe
  64:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_SetShadowTransferMode() API are supported for all the devices except XMC45.
  65:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
  66:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * 2015-09-29:
  67:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  68:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *       settings.
  69:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
  70:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * 2015-10-07:
  71:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(), XMC_CCU8_SLICE_SetTimerCompareMatchChannel2
  72:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *       added to update the respective compare registers directly.
  73:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  74:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU8_SLICE_EnableMultipleEvents(
  75:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_DisableMultipleEvents() APIs.
  76:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *     - DOC updates for the newly added APIs.
  77:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
  78:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @endcond
  79:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
  80:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
  81:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #ifndef XMC_CCU8_H
  82:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #define XMC_CCU8_H
  83:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
  84:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**************************************************************************************************
  85:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * HEADER FILES
  86:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  **************************************************************************************************
  87:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #include "xmc_common.h"
  88:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
  89:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #if defined(CCU80)
  90:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
  91:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #if UC_FAMILY == XMC1
  92:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  #include "xmc1_ccu8_map.h"
  93:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #endif
  94:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
  95:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #if UC_FAMILY == XMC4
  96:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  #include "xmc4_ccu8_map.h"
  97:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #endif
  98:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
  99:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 100:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @addtogroup XMClib XMC Peripheral Library
 101:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @{
 102:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 103:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 104:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 105:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @addtogroup CCU8
 106:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
 107:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @brief Capture Compare Unit 8 (CCU8) low level driver for XMC family of microcontrollers<br>
 108:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
 109:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The CCU8 peripheral functions play a major role in applications that need complex Pulse Width Mo
 110:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * generation, with complementary high side and low side switches, multi phase control. These funct
 111:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * with a very flexible and programmable signal conditioning scheme, make the CCU8 the must have pe
 112:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * of the art motor control, multi phase and multi level power electronics systems.\n
 113:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Each CCU8 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC8y (where
 114:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * timer slice can work in compare mode or in capture mode.
 115:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
 116:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * APIs provided in this file cover the following functional blocks of CCU8:
 117:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 118:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par Note:
 119:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU8_SLICE_)
 120:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU8_)
 121:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
 122:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par Timer(Compare mode) configuration:
 123:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_COMPARE_CONFIG_t, 
 124:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t and the initialization functions XMC_CCU8_SLICE_CompareInit(),
 125:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
 126:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * It can be used to:
 127:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * -# Start and Stop the timer. (XMC_CCU8_SLICE_StartTimer(), XMC_CCU8_SLICE_StopTimer())
 128:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU8_SLICE_SetTimerPe
 129:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetTimerCompareMatch(), XMC_CCU8_SLICE_SetPrescaler(), XMC_CCU8_SLICE_SetDithe
 130:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetPassiveLevel())
 131:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * -# Configure the dead time.(XMC_CCU8_SLICE_SetDeadTimeValue(), XMC_CCU8_SLICE_SetDeadTimePrescal
 132:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU8_SLICE_EnableMultiChannelMode())
 133:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * 
 134:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par Capture configuration:
 135:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_CAPTURE_CONFIG_t and
 136:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * function XMC_CCU8_SLICE_CaptureInit().
 137:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
 138:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * It can be used to:
 139:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * -# Configure the capture functionality. (XMC_CCU8_SLICE_Capture0Config(), XMC_CCU8_SLICE_Capture
 140:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 141:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    (XMC_CCU8_SLICE_GetCaptureRegisterValue())
 142:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * 
 143:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par Function/Event configuration:
 144:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_EVENT_CONFIG_t.
 145:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * 
 146:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * It can be used to:
 147:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * -# Enable and Disable the events. (XMC_CCU8_SLICE_EnableEvent(), XMC_CCU8_SLICE_DisableEvent())
 148:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU8_SLICE_StartConfig(), XMC_C
 149:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU8_SLICE_ModulationConfig(), 
 150:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_LoadConfig(), XMC_CCU8_SLICE_GateConfig())
 151:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU8_SLICE_Directi
 152:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * -# Count the external events.(XMC_CCU8_SLICE_CountConfig())
 153:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU8_SLICE_EnableTrap(), XMC_CCU8
 154:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_TrapConfig())
 155:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
 156:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par Interrupt configuration:
 157:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 158:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
 159:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @{
 160:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 161:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 162:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**************************************************************************************************
 163:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * MACROS
 164:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  **************************************************************************************************
 165:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_INTERRUPT(interrupt) \
 166:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     ((interrupt == XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 167:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH)              || \
 168:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1)  || \
 169:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1)|| \
 170:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2)  || \
 171:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2)|| \
 172:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT0)                 || \
 173:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT1)                 || \
 174:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT2)                 || \
 175:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_TRAP))
 176:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****      
 177:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /* Macro to check if the slice ptr passed is valid */
 178:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(cmp_channel) \
 179:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     ((cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_1) || \
 180:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****      (cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_2))
 181:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 182:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**************************************************************************************************
 183:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * ENUMS
 184:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  **************************************************************************************************
 185:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 186:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 187:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Typedef for CCU8 Global data structure
 188:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 189:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef CCU8_GLOBAL_TypeDef XMC_CCU8_MODULE_t;
 190:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 191:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 192:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Typedef for CCU8 Slice data structure
 193:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 194:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef CCU8_CC8_TypeDef XMC_CCU8_SLICE_t;
 195:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 196:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 197:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Return Value of an API
 198:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 199:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_STATUS
 200:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 201:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_OK      = 0U, /**< API fulfils request */
 202:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_ERROR       , /**< API cannot fulfil request */
 203:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_RUNNING     , /**< The timer slice is currently running */
 204:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_IDLE          /**< The timer slice is currently idle */
 205:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_STATUS_t;
 206:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 207:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 208:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * CCU8 module clock
 209:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 210:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_CLOCK
 211:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 212:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 213:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_A     , /**< External clock-A */
 214:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_B     , /**< External clock-B */
 215:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_C       /**< External clock-C */
 216:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_CLOCK_t;
 217:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 218:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 219:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * CCU8 set the shadow transfer type for multichannel mode
 220:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 221:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER
 222:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 223:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 224:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                      only for slice
 225:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 226:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                      and hardware f
 227:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 228:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                      only for slice
 229:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 230:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                      and hardware f
 231:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 232:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                       only for slic
 233:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 234:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                       and hardware 
 235:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 236:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                       only for slic
 237:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 238:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                       and hardware 
 239:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 240:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 241:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 242:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Operational modes of CCU8 slice
 243:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 244:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODE
 245:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 246:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_COMPARE  = 0U, /**< slice(CC8y) operates in Compare Mode */
 247:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_CAPTURE        /**< slice(CC8y) operates in Capture Mode */
 248:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODE_t;
 249:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 250:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 251:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Slice Output selection
 252:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 253:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT
 254:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 255:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_0  = 1U, /**< Slice Output-0 */
 256:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_1  = 2U, /**< Slice Output-1 */
 257:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_2  = 4U, /**< Slice Output-2 */
 258:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_3  = 8U  /**< Slice Output-3 */
 259:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_t;
 260:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 261:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 262:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Timer counting modes for the slice
 263:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 264:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_MODE
 265:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 266:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 267:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA        /**< Centre Aligned Mode */
 268:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_MODE_t;
 269:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 270:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 271:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Timer repetition mode for the slice
 272:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 273:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_REPEAT_MODE
 274:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 275:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U, /**< Repetitive mode: continuous mode of operation 
 276:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE       /**< Single shot mode: Once a Period match/One matc
 277:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                      occurs timer goes to idle state */
 278:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t;
 279:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 280:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 281:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Timer counting direction for the CCU8 slice
 282:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 283:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_DIR
 284:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 285:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 286:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 287:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_DIR_t;
 288:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 289:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 290:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Capture mode register sets
 291:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 292:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_CAP_REG_SET
 293:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 294:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 295:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_HIGH       /**< Capture register-0, Capture register-1 used */
 296:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAP_REG_SET_t;
 297:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 298:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 299:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Prescaler mode
 300:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 301:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER_MODE
 302:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 303:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 304:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider */
 305:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_MODE_t;
 306:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 307:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 308:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Timer output passive level
 309:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 310:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL
 311:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 312:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 313:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 314:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 315:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 316:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 317:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Compare Channel selection
 318:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 319:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_COMPARE_CHANNEL
 320:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 321:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_1  = 0U, /**< Compare Channel-1 */
 322:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_2        /**< Compare Channel-2 */
 323:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CHANNEL_t;
 324:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 325:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 326:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Timer clock Divider
 327:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 328:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER
 329:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 330:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu8 */
 331:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2      , /**< Slice Clock = fccu8/2 */
 332:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4      , /**< Slice Clock = fccu8/4 */
 333:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8      , /**< Slice Clock = fccu8/8 */
 334:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16     , /**< Slice Clock = fccu8/16 */
 335:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32     , /**< Slice Clock = fccu8/32 */
 336:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_64     , /**< Slice Clock = fccu8/64 */
 337:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_128    , /**< Slice Clock = fccu8/128 */
 338:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_256    , /**< Slice Clock = fccu8/256 */
 339:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_512    , /**< Slice Clock = fccu8/512 */
 340:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu8/1024 */
 341:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu8/2048 */
 342:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu8/4096 */
 343:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu8/8192 */
 344:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu8/16384 */
 345:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32768    /**< Slice Clock = fccu8/32768 */
 346:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_t;
 347:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 348:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 349:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Dead Time Generator Clock Divider
 350:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 351:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_DTC_DIV
 352:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 353:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_1  = 0U, /**< DTC clock = Slice Clock */
 354:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_2      , /**< DTC clock = Slice Clock/2 */
 355:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_4      , /**< DTC clock = Slice Clock/4 */
 356:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_8        /**< DTC clock = Slice Clock/8 */
 357:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DTC_DIV_t;
 358:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 359:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 360:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 361:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  The compare channel output which is routed to the slice output signal(STy).
 362:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 363:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS
 364:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 365:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1        = 0U, /**< Channel-1 status connected to Slice Status */
 366:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_2            , /**< Channel-2 status connected to Slice Status */
 367:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2      , /**< \b Wired \b AND of Channel-1 and Channel-2 stat
 368:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                     Slice status */
 369:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #if ((UC_SERIES == XMC13) || (UC_SERIES == XMC14)) || defined(DOXYGEN)
 370:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2         /**< \b Wired \b OR of Channel-1 and Channel-2 statu
 371:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                     status. @note Only available for XMC1300 and XM
 372:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #endif
 373:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_t;
 374:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 375:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 376:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Compare channel for which modulation has to be applied
 377:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 378:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_CHANNEL
 379:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 380:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE  = 0U, /**< No modulation */
 381:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1         , /**< Modulation for Compare Channel-1 */
 382:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_2         , /**< Modulation for Compare Channel-2 */
 383:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2     /**< Modulation for Compare Channel-1 and Compare C
 384:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_CHANNEL_t;
 385:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 386:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 387:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  External Function list
 388:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 389:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_FUNCTION
 390:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 391:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_START           = 0U, /**< Start function */
 392:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_STOP                , /**< Stop function */
 393:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 394:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                      generation */
 395:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 396:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                      generation */
 397:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_GATING              , /**< Gating function */
 398:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 399:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_LOAD                , /**< Load function */
 400:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_COUNT               , /**< Counting function */
 401:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 402:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 403:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_TRAP                  /**< Trap function */
 404:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_FUNCTION_t;
 405:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 406:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 407:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  External Event list
 408:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 409:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT
 410:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 411:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_NONE  = 0U, /**< None */
 412:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_0         , /**< Event-0 */
 413:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_1         , /**< Event-1 */
 414:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_2           /**< Event-2 */
 415:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_t;
 416:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 417:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 418:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Edge sensitivity
 419:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 420:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY
 421:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 422:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE          = 0U, /**< None */
 423:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE       , /**< Rising Edge of the input signal ge
 424:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                  event trigger */
 425:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE      , /**< Falling Edge of the input signal g
 426:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                  trigger */
 427:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE           /**< Both Rising and Falling edges caus
 428:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t;
 429:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 430:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 431:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Level sensitivity
 432:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 433:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY
 434:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 435:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 436:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 437:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     /* Below enum items can be utilised specific to the functionality */
 438:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 439:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 440:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 441:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 442:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 443:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 444:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 445:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_FILTER
 446:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 447:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filtering is applied */
 448:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES      , /**< Input should be stable for 3 clock cycles */
 449:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES      , /**< Input should be stable for 5 clock cycles */
 450:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES        /**< Input should be stable for 7 clock cycles */
 451:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_FILTER_t;
 452:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 453:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 454:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU8 slice.
 455:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Interconnects are specific to each device.
 456:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 457:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef uint8_t XMC_CCU8_SLICE_INPUT_t;
 458:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 459:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 460:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 461:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 462:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 463:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_END_MODE
 464:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 465:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 466:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 467:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 468:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_END_MODE_t;
 469:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 470:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 471:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Actions that can be performed upon detection of an external Timer START event
 472:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 473:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_START_MODE
 474:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 475:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 476:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 477:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_START_MODE_t;
 478:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 479:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 480:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Modulation of timer output signals
 481:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 482:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_MODE
 483:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 484:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 485:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 486:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_MODE_t;
 487:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 488:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 489:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Trap exit mode
 490:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 491:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TRAP_EXIT_MODE
 492:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 493:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 494:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 495:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TRAP_EXIT_MODE_t;
 496:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 497:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 498:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Timer clear on capture
 499:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 500:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_CLEAR_MODE
 501:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 502:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 503:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 504:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 505:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 506:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t;
 507:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 508:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 509:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Multi Channel Shadow transfer request configuration options
 510:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 511:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MCMS_ACTION
 512:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 513:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 514:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                 the actual registers upon MCS xfer 
 515:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 516:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                 register values to the actual regis
 517:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                 request */
 518:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 519:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                 Compare register values to the actu
 520:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                 MCS xfer request */
 521:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MCMS_ACTION_t;
 522:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 523:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 524:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Available Interrupt Event Ids
 525:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 526:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_IRQ_ID
 527:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 528:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH            = 0U , /**< Period match counting up */
 529:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH               = 1U , /**< One match counting down */
 530:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 2U , /**< Compare match counting up for channel 1
 531:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 3U , /**< Compare match counting down for channel
 532:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 4U , /**< Compare match counting up for channel 2
 533:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 5U , /**< Compare match counting down for channel
 534:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT0                  = 8U , /**< Event-0 occurrence */
 535:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT1                  = 9U , /**< Event-1 occurrence */
 536:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT2                  = 10U, /**< Event-2 occurrence */
 537:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_TRAP                    = 11U  /**< Trap occurrence */
 538:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_IRQ_ID_t;
 539:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 540:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 541:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 542:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 543:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MULTI_IRQ_ID
 544:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 545:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_PERIOD_MATCH            = 0x1U,   /**< Period match counting up */
 546:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_ONE_MATCH               = 0x2U,   /**< One match counting down */
 547:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 0x4U,   /**< Compare match counting up for 
 548:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 0x8U,   /**< Compare match counting down fo
 549:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 0x10U,  /**< Compare match counting up for 
 550:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 0x20U,  /**< Compare match counting down fo
 551:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT0                  = 0x100U, /**< Event-0 occurrence */
 552:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT1                  = 0x200U, /**< Event-1 occurrence */
 553:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT2                  = 0x400U, /**< Event-2 occurrence */
 554:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MULTI_IRQ_ID_t;
 555:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 556:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 557:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Service Request Lines for CCU8. Event are mapped to these SR lines and these are used to generat
 558:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 559:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SR_ID
 560:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 561:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 562:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 563:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 564:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 565:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SR_ID_t;
 566:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 567:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 568:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 569:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Slice shadow transfer options.
 570:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 571:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SHADOW_TRANSFER
 572:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 573:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_0            = CCU8_GCSS_S0SE_Msk,  /**< Transfer Period, Compare 
 574:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                           shadow register values to
 575:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                           SLICE-0 */
 576:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU8_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 577:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                           to actual register for SL
 578:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU8_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 579:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 580:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_1            = CCU8_GCSS_S1SE_Msk,  /**< Transfer Period, Compare 
 581:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                           shadow register values to
 582:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                           SLICE-1 */
 583:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU8_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 584:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                           to actual registers for S
 585:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU8_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 586:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 587:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_2            = CCU8_GCSS_S2SE_Msk,  /**< Transfer Period, Compare 
 588:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                           shadow register values to
 589:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                           SLICE-2 */
 590:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU8_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 591:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                           to actual register for SL
 592:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU8_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 593:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 594:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_3            = CCU8_GCSS_S3SE_Msk,  /**< Transfer Period, Compare 
 595:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                           shadow register values to
 596:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                           SLICE-3 */
 597:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU8_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 598:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                           to actual register for SL
 599:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU8_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 600:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 601:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SHADOW_TRANSFER_t;
 602:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 603:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
 604:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 605:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Slice shadow transfer mode options.
 606:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series
 607:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 608:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE
 609:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 610:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U, /**< Shadow transfer is d
 611:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                One match. */
 612:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 613:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 614:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t;
 615:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #endif
 616:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 617:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #if defined(CCU8V3) || defined(DOXYGEN) /* Defined for XMC1400 devices only */
 618:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 619:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Output sources for OUTy0 signal
 620:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 621:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 622:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT0
 623:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 624:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST1      = (uint32_t)0x0, /**< CCU8yST1 signal path is connected the CCU8x.O
 625:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST1  = (uint32_t)0x1, /**< Inverted CCU8yST1 signal path is connected th
 626:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST2      = (uint32_t)0x2, /**< CCU8yST2 signal path is connected the CCU8x.O
 627:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST2  = (uint32_t)0x3  /**< Inverted CCU8yST2 signal path is connected th
 628:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT0_t;
 629:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 630:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 631:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Output sources for OUTy1 signal
 632:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 633:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 634:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT1
 635:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 636:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST1      = (uint32_t)0x1, /**< CCU8yST1 signal path is connected the CCU8x.O
 637:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST1  = (uint32_t)0x0, /**< Inverted CCU8yST1 signal path is connected th
 638:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST2      = (uint32_t)0x3, /**< CCU8yST2 signal path is connected the CCU8x.O
 639:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST2  = (uint32_t)0x2  /**< Inverted CCU8yST2 signal path is connected th
 640:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT1_t;
 641:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 642:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 643:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Output sources for OUTy2 signal
 644:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 645:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 646:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT2
 647:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 648:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST2      = (uint32_t)0x0, /**< CCU8yST2 signal path is connected the CCU8x.O
 649:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST2  = (uint32_t)0x1, /**< Inverted CCU8yST2 signal path is connected th
 650:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST1      = (uint32_t)0x2, /**< CCU8yST1 signal path is connected the CCU8x.O
 651:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST1  = (uint32_t)0x3  /**< Inverted CCU8yST1 signal path is connected th
 652:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT2_t;
 653:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 654:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 655:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Output sources for OUTy3 signal
 656:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 657:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 658:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT3
 659:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 660:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST2      = (uint32_t)0x1, /**< CCU8yST2 signal path is connected the CCU8x.O
 661:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST2  = (uint32_t)0x0, /**< Inverted CCU8yST2 signal path is connected th
 662:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST1      = (uint32_t)0x3, /**< CCU8yST1 signal path is connected the CCU8x.O
 663:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST1  = (uint32_t)0x2  /**< Inverted CCU8yST1 signal path is connected th
 664:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT3_t;
 665:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #endif
 666:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 667:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 668:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 669:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Output selector for CCU8x.OUT0-3
 670:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 671:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 672:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 673:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 674:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x20000, /**< CCU8yST1 signal path is connected the C
 675:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x20002, /**< Inverted CCU8yST1 signal path is connec
 676:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x40000, /**< CCU8yST1 signal path is connected the C
 677:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x40004, /**< Inverted CCU8yST1 signal path is connec
 678:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x80000, /**< CCU8yST2 signal path is connected the C
 679:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x80008, /**< Inverted CCU8yST2 signal path is connec
 680:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0x100000,/**< CCU8yST2 signal path is connected the C
 681:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0x100010 /**< Inverted CCU8yST2 signal path is connec
 682:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 683:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #else
 684:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 685:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 686:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x000C0, /**< CCU8yST1 signal path is connected the C
 687:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x000D0, /**< Inverted CCU8yST1 signal path is connec
 688:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST2      = (uint32_t)0x000E0, /**< CCU8yST2 signal path is connected the C
 689:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST2  = (uint32_t)0x000F0, /**< Inverted CCU8yST2 signal path is connec
 690:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x00D00, /**< CCU8yST1 signal path is connected the C
 691:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x00C00, /**< Inverted CCU8yST1 signal path is connec
 692:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST2      = (uint32_t)0x00F00, /**< CCU8yST2 signal path is connected the C
 693:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST2  = (uint32_t)0x00E00, /**< Inverted CCU8yST2 signal path is connec
 694:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x0C000, /**< CCU8yST2 signal path is connected the C
 695:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x0D000, /**< Inverted CCU8yST2 signal path is connec
 696:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST1      = (uint32_t)0x0E000, /**< CCU8yST1 signal path is connected the C
 697:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST1  = (uint32_t)0x0F000, /**< Inverted CCU8yST1 signal path is connec
 698:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0xD0000, /**< CCU8yST2 signal path is connected the C
 699:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST2  = (uint32_t)0xC0000, /**< Inverted CCU8yST2 signal path is connec
 700:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST1      = (uint32_t)0xF0000, /**< CCU8yST1 signal path is connected the C
 701:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0xE0000  /**< Inverted CCU8yST1 signal path is connec
 702:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 703:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 704:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 705:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Immediate write into configuration register
 706:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 707:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 708:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_WRITE_INTO
 709:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 710:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU8_CC8_STC_IRPC_Msk,                  /**< Imm
 711:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                                 Wri
 712:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                                 Con
 713:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE1_CONFIGURATION = CCU8_CC8_STC_IRCC1_Msk,               /**< Imm
 714:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                                 Wri
 715:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                                 Con
 716:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE2_CONFIGURATION = CCU8_CC8_STC_IRCC2_Msk,               /**< Imm
 717:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                                 Wri
 718:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                                 Con
 719:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU8_CC8_STC_IRLC_Msk,           /**< Imm
 720:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                                 Wri
 721:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 	                                                                                            Config
 722:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRDC_Msk,            /**< Imm
 723:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                                 Wri
 724:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 	                                                                                            Config
 725:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRFC_Msk /**< Imm
 726:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                                 Wri
 727:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                                 Val
 728:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_WRITE_INTO_t;
 729:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 730:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 731:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 732:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 733:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 734:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 735:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 736:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 737:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU8_CC8_STC_ASPC_Msk,        
 738:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 	                                                                                                  
 739:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                                    
 740:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                                    
 741:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE1_SHADOW = CCU8_CC8_STC_ASCC1_Msk,     
 742:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 	                                                                                                  
 743:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 	                                                                                                  
 744:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 	                                                                                                  
 745:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE2_SHADOW = CCU8_CC8_STC_ASCC2_Msk,     
 746:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 	                                                                                                  
 747:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 	                                                                                                  
 748:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 	                                                                                                  
 749:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU8_CC8_STC_ASLC_Msk,        
 750:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 	                                                                                                  
 751:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                                    
 752:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU8_CC8_STC_ASDC_Msk,        
 753:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                                    
 754:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                                    
 755:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU8_CC8_STC_ASFC_
 756:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 	                                                                                                  
 757:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                                    
 758:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                                    
 759:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 760:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 761:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #endif
 762:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 763:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  CCU8 slice mask which can be used for the APIs as input where multi slice support is available
 764:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 765:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MASK
 766:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 767:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 768:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 769:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 770:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 771:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MASK_t;
 772:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 773:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**************************************************************************************************
 774:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * DATA STRUCTURES
 775:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  **************************************************************************************************
 776:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 777:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 778:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 779:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Needed to configure the various aspects of an External Event.
 780:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  This structure will not connect the external event with an external function.
 781:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 782:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_EVENT_CONFIG
 783:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 784:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event. 
 785:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 786:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                               This is needed for an edge sensitive 
 787:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 788:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                               This is needed for an level sensitive
 789:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 790:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_CONFIG_t;
 791:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 792:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /*Anonymous structure/union guard start*/
 793:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 794:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   #pragma push
 795:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   #pragma anon_unions
 796:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 797:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   #pragma warning 586
 798:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #endif
 799:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 800:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 801:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Dead Time configuration
 802:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 803:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_DEAD_TIME_CONFIG
 804:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 805:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   union
 806:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   {
 807:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     struct
 808:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     {
 809:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel1 : 1; /**< Enable dead time for Compare Channel-1 */
 810:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel2 : 1; /**< Enable dead time for Compare Channel-2 */
 811:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t channel1_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 812:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t channel1_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 813:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                    Compare Channel-1? */
 814:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t channel2_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 815:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t channel2_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 816:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                    Compare Channel-2? */
 817:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t div : 2;                       /**< Dead time prescaler divider value.
 818:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                    Accepts enum ::XMC_CCU8_SLICE_DTC_DIV_t*/
 819:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t : 24;
 820:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     };
 821:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     uint32_t dtc;
 822:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   };
 823:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   union
 824:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   {
 825:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     struct
 826:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     {
 827:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t channel1_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 828:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 	                                                       for compare channel-1. Range: [0x0 to 0xFF]
 829:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t channel1_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 830:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 	                                                        for compare channel-1. Range: [0x0 to 0xFF
 831:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t : 16;
 832:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     };
 833:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     uint32_t dc1r;
 834:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   };
 835:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   union
 836:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   {
 837:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     struct
 838:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     {
 839:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t channel2_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 840:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 841:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t channel2_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 842:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 843:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t : 16;
 844:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     };
 845:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     uint32_t dc2r;
 846:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   };
 847:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t;
 848:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 849:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 850:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to compare 
 851:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 852:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 853:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_COMPARE_CONFIG
 854:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 855:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   union
 856:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   {
 857:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     struct
 858:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     {
 859:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 860:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_COUNT_MODE_t */
 861:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 862:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t */
 863:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t shadow_xfer_clear : 1; /**< Should PR and CR shadow xfer happen when timer is cleare
 864:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t : 10;
 865:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 866:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 867:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t : 1;
 868:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 869:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_MODE_t */
 870:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t : 8;
 871:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t mcm_ch1_enable : 1;     /**< Multi-Channel mode for compare channel 1 enable? */
 872:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t mcm_ch2_enable : 1;     /**< Multi-Channel mode for compare channel 2 enable? */
 873:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t : 2;
 874:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t slice_status : 2;       /**< Which of the two channels drives the slice status outpu
 875:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_STATUS_t*/
 876:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t : 1;
 877:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     };
 878:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     uint32_t tc;
 879:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   };
 880:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   union
 881:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   {
 882:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     struct
 883:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     {
 884:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t passive_level_out0 : 1; /**< ST and OUT passive levels Configuration for OUT0. 
 885:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 886:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t passive_level_out1 : 1; /**< ST and OUT passive levels Configuration for OUT1. 
 887:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 888:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t passive_level_out2 : 1; /**< ST and OUT passive levels Configuration for OUT2. 
 889:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 890:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t passive_level_out3 : 1; /**< ST and OUT passive levels Configuration for OUT3. 
 891:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 892:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t : 28;
 893:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     };
 894:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     uint32_t psl;
 895:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   };
 896:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   union
 897:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   {
 898:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     struct
 899:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     {
 900:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t asymmetric_pwm : 1;     /**< Should the PWM be a function of the 2 compare channels
 901:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                             rather than period value? */
 902:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   #if !defined(CCU8V3)    /* Defined for all devices except XMC1400 */                             
 903:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t invert_out0 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT0? *
 904:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t invert_out1 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT1? *
 905:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t invert_out2 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT2? *
 906:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t invert_out3 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT3? *
 907:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t : 27;
 908:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   #else
 909:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t : 3;
 910:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t selector_out0 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 911:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT0_t 
 912:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                             refer OCS1 bit-field of CHC register. 
 913:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 914:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t : 2;
 915:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t selector_out1 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 916:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT1_t 
 917:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                             refer OCS2 bit-field of CHC register. 
 918:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 919:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t : 2;
 920:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t selector_out2 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 921:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT2_t 
 922:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                             refer OCS3 bit-field of CHC register.
 923:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 924:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t : 2;
 925:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t selector_out3 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 926:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT3_t 
 927:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                             refer OCS4 bit-field of CHC register.
 928:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 929:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t : 14;
 930:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   #endif
 931:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     };
 932:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     uint32_t chc;
 933:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   };
 934:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 935:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t */
 936:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 937:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
 938:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering 
 939:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
 940:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true*/
 941:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CONFIG_t;
 942:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 943:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
 944:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to capture 
 945:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 946:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
 947:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_CAPTURE_CONFIG
 948:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 949:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   union
 950:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   {
 951:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     struct
 952:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     {
 953:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t : 4;
 954:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
 955:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
 956:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                           Accepts enum ::XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t */
 957:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t : 4;
 958:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
 959:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
 960:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t : 3;
 961:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU8_SLI
 962:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****       uint32_t : 15;
 963:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     };
 964:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****     uint32_t tc;
 965:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   };
 966:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
 967:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
 968:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer */
 969:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAPTURE_CONFIG_t;
 970:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /*Anonymous structure/union guard end*/
 971:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 972:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   #pragma pop
 973:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 974:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   #pragma warning restore
 975:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #endif
 976:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**************************************************************************************************
 977:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * API Prototypes
 978:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  **************************************************************************************************
 979:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #ifdef __cplusplus
 980:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** extern "C" {
 981:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #endif
 982:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 983:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidModule(const XMC_CCU8_MODULE_t *const module)
 984:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 985:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   bool tmp = false;
 986:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   
 987:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   tmp = (module == CCU80);
 988:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   
 989:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #if defined(CCU81)
 990:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   tmp = tmp || (module == CCU81);
 991:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #endif
 992:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   
 993:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   return tmp;  
 994:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } 
 995:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
 996:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidSlice(const XMC_CCU8_SLICE_t *const slice)
 997:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
 998:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   bool tmp = false;
 999:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   
1000:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   tmp = (slice == CCU80_CC80);
1001:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #if defined(CCU80_CC81)  
1002:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC81);
1003:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #endif
1004:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #if defined(CCU80_CC82)  
1005:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC82);
1006:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #endif
1007:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #if defined(CCU80_CC83)  
1008:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC83);
1009:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #endif
1010:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #if defined(CCU81)  
1011:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC80);
1012:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #if defined(CCU81_CC81)  
1013:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC81);
1014:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #endif
1015:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #if defined(CCU81_CC82)  
1016:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC82);
1017:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #endif
1018:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #if defined(CCU81_CC83)  
1019:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC83);
1020:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #endif
1021:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #endif 
1022:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  
1023:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   return tmp;  
1024:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** } 
1025:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1026:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1027:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1028:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param mcs_action multi-channel shadow transfer request configuration
1029:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1030:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1031:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1032:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1033:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Initialization of global register GCTRL.\n\n
1034:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  As part of module initialization, behaviour of the module upon detection
1035:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU8_EnableModule().
1036:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  The API call would bring up the required CCU8 module and also initialize the module for
1037:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  the required multi-channel shadow transfer.
1038:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1039:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1040:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureInit().
1041:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1042:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action);
1043:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1044:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1045:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1046:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1047:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1048:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1049:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1050:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Enables the CCU8 module and brings it to active state.\n\n
1051:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
1052:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Invoke this API before any operations are done on the CCU8 module. Invoked from  XMC_CCU8_Init()
1053:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1054:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1055:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * XMC_CCU8_SetModuleClock()<BR>  XMC_CCU8_DisableModule()<BR>  XMC_CCU8_StartPrescaler().
1056:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1057:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module);
1058:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1059:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1060:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1061:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1062:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1063:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1064:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1065:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Brings the CCU8 module to reset state and enables gating of the clock signal(if applicable depen
1066:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * on the device being selected).\n\n
1067:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Invoke this API when a CCU8 module needs to be disabled completely.
1068:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Any operation on the CCU8 module will have no effect after this API is called.
1069:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1070:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1071:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * XMC_CCU8_EnableModule()<BR> XMC_CCU8_DisableModule().
1072:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1073:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module);
1074:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1075:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1076:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1077:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param clock Choice of input clock to the module
1078:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1079:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1080:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1081:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1082:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.\n\n
1083:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
1084:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Call to this API is valid after the XMC_CCU8_Init().
1085:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1086:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1087:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * None.<BR>
1088:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1089:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock);
1090:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1091:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1092:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1093:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1094:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1095:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1096:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1097:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1098:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<br>\n
1099:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
1100:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU8_Init()
1101:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  (Mandatory to fully initialize the module).
1102:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1103:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1104:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPres
1105:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_StopPrescaler().
1106:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1107:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartPrescaler(XMC_CCU8_MODULE_t *const module)
1108:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1109:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1110:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) CCU8_GIDLC_SPRB_Msk;
1111:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1112:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1113:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1114:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1115:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1116:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1117:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1118:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1119:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.\n\n
1120:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
1121:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * the slices of the module.
1122:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1123:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1124:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8
1125:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1126:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopPrescaler(XMC_CCU8_MODULE_t *const module)
1127:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1128:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1129:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   module->GIDLS |= (uint32_t) CCU8_GIDLS_CPRB_Msk;
1130:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1131:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1132:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1133:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1134:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1135:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1136:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1137:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1138:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.\n\n
1139:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * If clock is being supplied to the slices of the  module then returns as true. 
1140:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1141:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1142:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8_StopPrescaler()<BR> XMC_CCU8_EnableClock()<BR>  XMC_CCU8
1143:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1144:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsPrescalerRunning(XMC_CCU8_MODULE_t *const module)
1145:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1146:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1147:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PRB_Msk) == CCU8_GSTAT_PRB_Msk));
1148:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1149:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1150:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1151:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1152:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
1153:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively. 
1154:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1155:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1156:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1157:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1158:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1159:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1160:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * GIDLC.CS3I bits.\n\n
1161:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
1162:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * of the idle state simultaneously.
1163:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1164:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1165:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock().
1166:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1167:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableMultipleClocks(XMC_CCU8_MODULE_t *const module, const uint8_t c
1168:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1169:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1170:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid clock mask", (clock_mask < 16U));
1171:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1172:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) clock_mask;
1173:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1174:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1175:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1176:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1177:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param compare_init Pointer to slice configuration structure
1178:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1179:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1180:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1181:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1182:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to compare mode, by configuring CC8yTC, CC8yCMC, CC8yPSC, CC8yDITH
1183:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * CC8yFPCS, CC8yCHC registers.\n\n
1184:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * CC8 slice is configured with Timer configurations in this routine. Timer is stopped before initi
1185:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable
1186:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * the shadow transfer for the required values by calling XMC_CCU8_EnableShadowTransfer() with appr
1187:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1188:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1189:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * None.
1190:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1191:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
1192:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init);
1193:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1194:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1195:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1196:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param capture_init Pointer to slice configuration structure
1197:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1198:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1199:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1200:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1201:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to capture mode, by configuring CC8yTC, CC8yCMC, CC8yPSC,CC8yFPCS 
1202:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * CC8 slice is configured with Capture configurations in  this routine. Timer is stopped before in
1203:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable the sh
1204:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * for the required  values by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask. 
1205:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1206:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1207:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config().
1208:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1209:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice,
1210:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init);
1211:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1212:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1213:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1214:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be Enabled.
1215:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1216:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1217:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1218:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1219:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1220:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1221:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
1222:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
1223:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  slice whose clock needs to be enabled. Directly accessed register is GIDLC.
1224:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1225:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1226:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * XMC_CCU8_DisableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR> 
1227:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1228:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_numb
1229:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1230:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1231:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Slice Number", (slice_number < 4U));
1232:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1233:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   module->GIDLC |= ((uint32_t) 1 << slice_number);
1234:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1235:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1236:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1237:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1238:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1239:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1240:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1241:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1242:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1243:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1244:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
1245:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
1246:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * It is possible to disable clock at slice level using the module pointer.
1247:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
1248:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1249:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1250:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR>  
1251:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1252:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_DisableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_num
1253:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1254:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1255:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Slice Number", (slice_number < 4U));
1256:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1257:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   module->GIDLS |= ((uint32_t) 1 << slice_number);
1258:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1259:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1260:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1261:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1262:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param out_path_msk configuration for output path selection.
1263:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *        combination of XMC_CCU8_OUT_PATH_t enum items can be used to create a mask.
1264:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * 
1265:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1266:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1267:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1268:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1269:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Configure the out the path of the two compare channels with specified ST signal, by configuring 
1270:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  ^ CC8yCHC register.\n\n
1271:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * 
1272:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * For the two compare channels it is possible to select either direct ST signal or inverted ST sig
1273:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \b out_path_msk is used to set the required out put path.
1274:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1275:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1276:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * None
1277:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** */
1278:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk);
1279:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1280:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1281:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1282:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param event Map an External event to the External Start Function
1283:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param start_mode Behaviour of slice when the start function is activated
1284:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1285:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1286:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1287:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1288:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Configures the Start Function of the slice, by configuring CC8yCMC.ENDS and CC8yTC.ENDM bits.\n
1289:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC8 ti
1290:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1291:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1292:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1293:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1294:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1295:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
1296:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_EVENT_t event,
1297:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode);
1298:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1299:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1300:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1301:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param event Map an External event to the External Stop Function
1302:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param end_mode Behaviour of slice when the stop function is activated
1303:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1304:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1305:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1306:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1307:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Configures the Stop function for the slice, by configuring CC8yCMC.STRTS and CC8yTC.STRM bits.\n
1308:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU8 tim
1309:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1310:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1311:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1312:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput()
1313:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1314:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
1315:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_EVENT_t event,
1316:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode);
1317:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1318:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1319:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1320:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param event Map an External event to the External load Function
1321:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1322:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1323:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1324:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1325:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Configures the Load Function for the slice, by configuring CC8yCMC.LDS bit.\n\n
1326:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1327:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 0,CC8yTIMER register is reloaded with the value from compare channel 1 
1328:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                            compare channel 2\n
1329:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 1,CC8yTIMER register is reloaded with the value from period register\n
1330:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  
1331:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1332:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1333:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1334:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1335:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1336:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1337:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1338:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1339:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param ch_num Select which compare channel value has to be loaded to the Timer register during e
1340:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1341:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1342:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1343:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1344:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Up on occurrence of the external load event, if CC8yTCST.CDIR set to 0, CC8yTIMER register can 
1345:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  with the value from compare channel 1 or compare channel 2\n
1346:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 0, compare channel 1 value is loaded to the CC8yTIMER register\n
1347:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 1, compare channel 2 value is loaded to the CC8yTIMER register\n
1348:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1349:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1350:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1351:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1352:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
1353:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1354:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1355:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1356:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param event Map an External event to the External Modulation Function
1357:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param mod_mode Desired Modulation mode
1358:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param channel Specify the channel(s) on which the modulation should be applied.
1359:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1360:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1361:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1362:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1363:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1364:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1365:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Configures the Output Modulation Function of the slice, by configuring CC8yCMC.MOS, CC8yTC.EMT a
1366:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * CC8yTC.EMS bits.\n\n
1367:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1368:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1369:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * of the modulation function is configured as well.
1370:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1371:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1372:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1373:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1374:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
1375:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_EVENT_t event,
1376:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
1377:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel, 
1378:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                      const bool synch_with_pwm
1379:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                      );
1380:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1381:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1382:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1383:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Function
1384:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1385:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1386:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1387:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1388:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Configures the Count Function of the slice, by configuring CC8yCMC.CNTS bit.\n\n
1389:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Count function is mapped with one of the 3 events. CCU8 slice can take an external
1390:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * signal to act as the counting event. The CCU8 slice would count the
1391:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * edges present on the \b event selected. 
1392:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1393:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1394:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1395:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1396:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1397:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1398:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1399:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1400:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param event  Map an External event to the External Gating Function
1401:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1402:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1403:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1404:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1405:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Configures the Gating Function of the slice, by configuring CC8yCMC.GATES bit.\n\n
1406:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Gating function is mapped with one of the 3 events.  A CCU8 slice can use an input signal that w
1407:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1408:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1409:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1410:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1411:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1412:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1413:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1414:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1415:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1416:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-0 Function
1417:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1418:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1419:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1420:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1421:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Configures the Capture-0 Function of the slice, by configuring CC8yCMC.CAP0S bit.\n\n
1422:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events.  A CCU8 slice can be configured into captur
1423:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC0V and 
1424:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1425:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1426:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1427:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1428:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1429:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1430:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1431:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1432:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-1 Function
1433:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1434:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1435:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1436:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1437:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Configures the Capture-1 Function of the slice, by configuring CC8yCMC.CAP1S bit.\n\n
1438:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events. A CCU8 slice can be configured into capture
1439:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * mode with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC2V
1440:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1441:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1442:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1443:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1444:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1445:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1446:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1447:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1448:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1449:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1450:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1451:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1452:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC8yTC.E
1453:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * In this mode the there is only one associated read address for all the capture registers.
1454:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Individual capture registers can still be accessed in this mode.
1455:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1456:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1457:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_GetCapturedValueFromFifo().
1458:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1459:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsExtendedCapReadEnabled(const XMC_CCU8_SLICE_t *const slice)
1460:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1461:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1462:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   return((bool)((slice->TC & (uint32_t) CCU8_CC8_TC_ECM_Msk) == (uint32_t)CCU8_CC8_TC_ECM_Msk));
1463:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1464:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1465:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1466:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1467:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1468:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice_number to check whether read value belongs to required slice or not
1469:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1470:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1471:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1472:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                     Range: [0x0 to 0xFFFF]
1473:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1474:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1475:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Read captured value from FIFO(ECRD register).\n\n
1476:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1477:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1478:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1479:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1480:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1481:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1482:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1483:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1484:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1485:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #else
1486:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1487:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1488:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param set The capture register set from which the captured value is to be retrieved
1489:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1490:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    uint32_t Returns the value captured in the \b slice_number
1491:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *             Range: [0x0 to 0xFFFF]
1492:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1493:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1494:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Read captured value from FIFO(CC8yECRD0 and CC8yECRD1).\n\n
1495:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1496:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1497:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1498:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1499:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1500:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1501:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1502:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1503:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1504:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice,
1505:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 		                                             const XMC_CCU8_SLICE_CAP_REG_SET_t set);
1506:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** #endif
1507:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1508:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1509:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1510:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Direction Function
1511:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1512:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1513:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1514:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1515:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Configures the Count Direction of the slice, by configuring CC8yCMC.UDS bit.\n\n
1516:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1517:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * CC8yTIMER count direction depending on an external signal.
1518:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1519:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1520:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1521:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1522:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
1523:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1524:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1525:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1526:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1527:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1528:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1529:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1530:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Configures the status bit override Function of the slice, by configuring CC8yCMC.OFS bit.\n\n
1531:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1532:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * output of the timer's CC8yST1 signal depending on an external signal.
1533:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1534:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1535:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent().
1536:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1537:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice);
1538:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1539:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1540:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1541:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param exit_mode How should a previously logged trap state be exited?
1542:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1543:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1544:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1545:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1546:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1547:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1548:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Configures the Trap Function of the slice, by configuring CC8yCMC.TS, CC8yTC.TRPSE, and CC8yTC.T
1549:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1550:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1551:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1552:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1553:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1554:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1555:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1556:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1557:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
1558:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
1559:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                bool synch_with_pwm);
1560:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1561:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1562:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1563:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param ev1_config Pointer to event 1 configuration data
1564:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param ev2_config Pointer to event 2 configuration data
1565:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1566:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1567:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1568:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1569:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1570:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC8yINS reg
1571:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1572:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1573:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Event-2 input would be the override value.
1574:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1575:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1576:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig().
1577:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1578:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
1579:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_
1580:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_
1581:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1582:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1583:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1584:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1585:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param config Pointer to event configuration data.
1586:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1587:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1588:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1589:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1590:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Configures an External Event of the slice, by updating CC8yINS register .\n\n
1591:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1592:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1593:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1594:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1595:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1596:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1597:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR>  XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateCon
1598:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR> XMC_CCU8_SLICE_Capture1Config()<BR>  XMC_CCU8_SLICE_Directi
1599:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1600:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1601:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
1602:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_t event,
1603:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *config);
1604:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1605:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1606:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1607:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1608:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1609:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1610:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1611:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1612:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1613:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1614:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Selects an input for an external event, by configuring CC8yINS register.\n\n
1615:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1616:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * This configures the CC8yINS.EVxIS for the selected event.
1617:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1618:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1619:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1620:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR> XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateConf
1621:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config()<BR> XMC_CCU8_SLICE_Directi
1622:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1623:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1624:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
1625:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_EVENT_t event,
1626:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_INPUT_t input);
1627:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1628:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1629:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1630:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be activated.
1631:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1632:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                   using a bit wise OR operation
1633:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1634:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1635:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1636:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1637:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1638:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Enables the trap feature, by setting CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TRAP
1639:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \a out_mask.\n\n
1640:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1641:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1642:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1643:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1644:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_TrapConfig()<BR>  XMC_CCU8_SLICE_DisableTrap()<BR>  XMC_CCU8_SLICE_ConfigureEven
1645:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInput().
1646:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1647:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_ma
1648:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1649:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1650:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos;
1651:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1652:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1653:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1654:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1655:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be deactivated.
1656:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1657:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                   using a bit wise OR operation.
1658:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1659:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1660:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1661:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1662:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1663:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Disables the trap feature, by clearing CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TR
1664:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \a out_mask.\n\n.\n\n
1665:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * This API will revert the changes done by XMC_CCU8_SLICE_EnableTrap().
1666:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU8 slice.
1667:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1668:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1669:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableTrap().
1670:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1671:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_m
1672:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1673:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1674:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   
1675:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos);
1676:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1677:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1678:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1679:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1680:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1681:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1682:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1683:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1684:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC8yTCST.TRB bit.
1685:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1686:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1687:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer()<BR>  XMC_CCU8_SLICE_StopTimer().
1688:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1689:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsTimerRunning(const XMC_CCU8_SLICE_t *const slice)
1690:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1691:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1692:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_TRB_Msk) == (uint32_t)CCU8_CC8_TCST_TRB_Msk);
1693:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1694:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1695:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1696:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1697:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1698:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-1 is running else it returns
1699:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1700:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1701:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 1 (Either Running or stopped(idle)), by reading CC8y
1702:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-1.
1703:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1704:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1705:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
1706:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1707:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr1Running(const XMC_CCU8_SLICE_t *const slice)
1708:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1709:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr1Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1710:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR1_Msk) == (uint32_t)CCU8_CC8_TCST_DTR1_Msk);
1711:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1712:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1713:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1714:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1715:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1716:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-2 is running else it returns
1717:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1718:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1719:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 2 (Either Running or stopped(idle)), by reading CC8y
1720:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-2.
1721:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1722:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1723:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running().
1724:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1725:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr2Running(const XMC_CCU8_SLICE_t *const slice)
1726:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1727:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr2Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1728:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR2_Msk) == (uint32_t)CCU8_CC8_TCST_DTR2_Msk);
1729:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1730:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1731:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1732:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1733:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1734:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *   ::XMC_CCU8_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1735:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1736:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1737:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Returns the timer counting direction, by reading CC8yTCST.CDIR bit.\n\n
1738:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * This API will return the direction in which the timer is currently
1739:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * incrementing(XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU8_SLICE_TIMER_COUNT_DIR_
1740:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1741:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1742:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  None.
1743:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1744:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_DIR_t XMC_CCU8_SLICE_GetCountingDir(const XMC_CCU8_SLICE
1745:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1746:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1747:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU8_CC8_TCST_CDIR_Msk) >> CCU8_CC8_TC
1748:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1749:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1750:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1751:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1752:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1753:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1754:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1755:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Starts the timer counting operation, by setting CC8yTCSET.TRBS bit.\n\n
1756:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * It is necessary to have configured the CC8 slice before starting its timer.
1757:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1758:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1759:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1760:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StopTimer().
1761:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1762:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StartTimer(XMC_CCU8_SLICE_t *const slice)
1763:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1764:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1765:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   slice->TCSET = CCU8_CC8_TCSET_TRBS_Msk;
1766:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1767:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1768:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1769:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1770:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1771:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1772:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1773:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1774:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Stops the Timer.\n\n
1775:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC8yTCCLR.TRBC bit.
1776:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1777:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1778:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
1779:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1780:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopTimer(XMC_CCU8_SLICE_t *const slice)
1781:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1782:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1783:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   slice->TCCLR |= (uint32_t) CCU8_CC8_TCCLR_TRBC_Msk;
1784:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1785:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1786:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1787:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1788:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1789:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1790:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1791:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1792:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Resets the timer count to zero, by setting CC8yTCCLR.TCC bit.\n\n
1793:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * A timer which has been stopped can still retain the last counted value.
1794:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * After invoking this API the timer value will be cleared.
1795:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1796:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1797:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
1798:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1799:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearTimer(XMC_CCU8_SLICE_t *const slice)
1800:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1801:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1802:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   slice->TCCLR |= (uint32_t) CCU8_CC8_TCCLR_TCC_Msk;
1803:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1804:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1805:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1806:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1807:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1808:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    ::XMC_CCU8_SLICE_MODE_t returns XMC_CCU8_SLICE_MODE_COMPARE if the slice is operating in comp
1809:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                          returns XMC_CCU8_SLICE_MODE_CAPTURE if the slice is operating in captur
1810:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1811:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1812:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
1813:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * CC8yTC.CMOD bit.\n\n
1814:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Ensure that before invoking this API the CCU8 slice should be configured otherwise the output of
1815:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * invalid.
1816:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1817:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1818:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  None.
1819:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1820:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_MODE_t XMC_CCU8_SLICE_GetSliceMode(const XMC_CCU8_SLICE_t *const sli
1821:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1822:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1823:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_MODE_t)(((slice->TC) & CCU8_CC8_TC_CMOD_Msk) >> CCU8_CC8_TC_CMOD_Pos));
1824:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1825:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1826:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1827:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1828:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
1829:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1830:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1831:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1832:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1833:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC8yTC.TSSM b
1834:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1835:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
1836:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * reaching the terminal count.
1837:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1838:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1839:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerRepeatMode().
1840:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1841:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_RE
1842:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1843:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1844:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1845:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <br>
1846:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
1847:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
1848:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1849:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1850:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC8yTC.T
1851:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The timer will count upto the terminal count as specified in the period register and stops immed
1852:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
1853:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * all over again after reaching the terminal count.
1854:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1855:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1856:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerRepeatMode().
1857:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1858:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t XMC_CCU8_SLICE_GetTimerRepeatMode(
1859:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                                     const XMC_CCU8_
1860:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1861:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
1862:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TSSM_Msk) >> CCU8_CC8_TC_T
1863:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1864:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1865:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1866:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
1867:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1868:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1869:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1870:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1871:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC8yTC.
1872:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
1873:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
1874:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
1875:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
1876:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * greater than the compare value.
1877:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1878:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1879:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerCountingMode().
1880:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1881:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
1882:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1883:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1884:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1885:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <br>
1886:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
1887:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA if center aligned
1888:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1889:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1890:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC8yTC.TCM bit.\
1891:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1892:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1893:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCountingMode().
1894:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1895:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_MODE_t XMC_CCU8_SLICE_GetTimerCountingMode(
1896:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 		                                                                            const XMC_CCU8_SLICE_
1897:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1898:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
1899:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TCM_Msk) >> CCU8_CC8_TC_TCM
1900:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1901:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1902:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1903:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param period_val Timer period value
1904:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *        Range: [0x0 to 0xFFFF]
1905:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1906:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1907:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1908:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1909:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Programs the timer period, by writing CC8yPRS register.\n\n
1910:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
1911:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
1912:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
1913:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual period register.
1914:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1915:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1916:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerPeriodMatch().
1917:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1918:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val);
1919:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1920:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1921:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1922:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1923:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *   uint16_t returns the current timer period value
1924:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
1925:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1926:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1927:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Retrieves the timer period value currently effective, by reading CC8yPR register.\n\n
1928:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
1929:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1930:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
1931:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
1932:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
1933:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerPeri
1934:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
1935:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1936:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1937:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerPeriodMatch().
1938:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1939:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerPeriodMatch(const XMC_CCU8_SLICE_t *const slice)
1940:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1941:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
1942:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   return((uint16_t) slice->PR);
1943:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1944:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1945:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1946:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param channel Select the compare channel to which the \b compare_val has to programmed.
1947:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
1948:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1949:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1950:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1951:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1952:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Programs the timer compare value, by writing CC8yCR1S and CC8yCR2S registers.\n\n
1953:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  The PWM duty cycle is determined by this value.\n\n
1954:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
1955:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with
1956:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
1957:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual compare register.
1958:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1959:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1960:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
1961:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1962:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
1963:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                          const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
1964:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                          const uint16_t compare_val);
1965:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1966:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1967:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1968:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
1969:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1970:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1971:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1972:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1973:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Programs the timer compare1 value, by writing CC8yCR1S register.\n\n
1974:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
1975:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
1976:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
1977:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
1978:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
1979:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1980:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1981:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
1982:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
1983:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice, con
1984:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
1985:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
1986:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   slice->CR1S = (uint32_t) compare_val;
1987:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
1988:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
1989:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
1990:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1991:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
1992:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
1993:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
1994:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
1995:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1996:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Programs the timer compare2 value, by writing CC8yCR2S register.\n\n
1997:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
1998:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
1999:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2000:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2001:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2002:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2003:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2004:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2005:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
2006:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice, con
2007:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
2008:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2009:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   slice->CR2S = (uint32_t) compare_val;
2010:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
2011:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
2012:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
2013:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2014:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param channel Select the compare channel to retrieve from.
2015:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
2016:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *   uint16_t returns the current timer compare value
2017:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2018:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2019:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2020:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Retrieves the timer compare value currently effective, by reading CC8yCR1S and CC8yCR2S register
2021:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
2022:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2023:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2024:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
2025:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
2026:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerComp
2027:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2028:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2029:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2030:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatch().
2031:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
2032:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
2033:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                              const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel);
2034:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
2035:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
2036:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2037:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
2038:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                            Use ::XMC_CCU8_SHADOW_TRANSFER_t enum items to create a mask of choic
2039:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                            using a bit wise OR operation.
2040:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
2041:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
2042:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2043:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2044:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
2045:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * the GCSS register.\n\n
2046:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
2047:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * shadow transfer trigger after the API is called.
2048:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2049:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Any call to XMC_CCU8_SLICE_SetTimerPeriodMatch()<BR>  XMC_CCU8_SLICE_SetTimerCompareMatch()<BR> 
2050:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * XMC_XMC_CCU8_SLICE_SetPrescaler()<BR> XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureIni
2051:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * must be succeeded by this API.
2052:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2053:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2054:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  None.
2055:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
2056:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableShadowTransfer(XMC_CCU8_MODULE_t *const module, const uint32_t 
2057:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
2058:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableShadowTransfer:Invalid module Pointer", XMC_CCU8_IsValidModule(module)
2059:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   module->GCSS |= (uint32_t)shadow_transfer_msk;  
2060:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
2061:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
2062:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
2063:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2064:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
2065:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *   uint16_t returns the current timer value
2066:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2067:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2068:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2069:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Retrieves the latest timer value, from CC8yTIMER register.\n\n
2070:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2071:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2072:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerValue().
2073:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
2074:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerValue(const XMC_CCU8_SLICE_t *const slice)
2075:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
2076:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2077:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   return((uint16_t) slice->TIMER);
2078:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
2079:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
2080:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2081:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
2082:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                  Range: [0x0 to 0xFFFF]
2083:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
2084:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
2085:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2086:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2087:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Loads a new timer value, by setting CC8yTIMER register.\n\n
2088:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * 
2089:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2090:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  Request to load is ignored if the timer is running.
2091:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2092:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2093:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerValue().
2094:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
2095:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerValue(XMC_CCU8_SLICE_t *const slice, const uint16_t tim
2096:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
2097:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2098:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   slice->TIMER = (uint32_t) timer_val;
2099:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
2100:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
2101:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2102:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param period_dither Boolean instruction on dithering of period match
2103:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param duty_dither Boolean instruction on dithering of compare match
2104:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param spread Dither compare value
2105:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
2106:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
2107:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2108:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2109:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC8yTC.DITHE and CC8yDITS bits
2110:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
2111:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
2112:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
2113:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
2114:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
2115:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_SetDitherCompareValue().
2116:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2117:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2118:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * After this API call, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask
2119:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * to transfer the dither value.
2120:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2121:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2122:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableDithering().
2123:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
2124:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
2125:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                     const bool period_dither,
2126:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                     const bool duty_dither,
2127:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                     const uint8_t spread);
2128:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
2129:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
2130:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2131:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
2132:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
2133:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2134:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2135:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC8yTC.DITHE bits.\n\n
2136:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * This disables the Dither mode that was set in XMC_CCU8_SLICE_EnableDithering().
2137:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * This API will not clear the dither compare value.
2138:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2139:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2140:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2141:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
2142:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableDithering(XMC_CCU8_SLICE_t *const slice)
2143:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
2144:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
2145:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
2146:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
2147:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
2148:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
2149:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2150:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
2151:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
2152:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2153:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2154:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Enables the floating prescaler, by setting CC8yTC.FPE bit.\n\n
2155:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
2156:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
2157:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
2158:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2159:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2160:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue()<BR>  XMC_CCU8_SLICE_DisableFloatingPrescaler(
2161:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_XMC_CCU8_SLICE_SetPrescaler().
2162:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
2163:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2164:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
2165:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2166:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   slice->TC |= (uint32_t) CCU8_CC8_TC_FPE_Msk;
2167:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
2168:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
2169:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
2170:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2171:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
2172:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
2173:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2174:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2175:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Disables the floating prescaler, by clearing CC8yTC.FPE bit.\n\n
2176:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * This would return the prescaler to the normal mode.
2177:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The prescaler that would be applied is the value present in CC8yPSC.
2178:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2179:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2180:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableFloatingPrescaler().
2181:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
2182:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2183:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
2184:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
2185:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_FPE_Msk);
2186:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
2187:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
2188:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
2189:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2190:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param comp_val Dither compare value
2191:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2192:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
2193:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
2194:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2195:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2196:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Sets the dither spread/compare value, by setting CC8yDITS.DCVS bits.\n\n
2197:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
2198:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
2199:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU8_EnableShadowTransfer()
2200:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * called with appropriate mask.
2201:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2202:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2203:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2204:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
2205:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetDitherCompareValue(XMC_CCU8_SLICE_t *const slice, const uint
2206:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
2207:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2208:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Dither compare value", (comp_val <= 15U)
2209:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
2210:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   slice->DITS = comp_val;
2211:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
2212:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
2213:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
2214:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2215:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param div_val Prescaler divider value
2216:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2217:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
2218:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
2219:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2220:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2221:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Programs the slice specific prescaler divider, by configuring the CC8yPSC and CC8yFPC registers.
2222:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The prescaler divider may only be programmed after the prescaler run bit has been cleared
2223:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * by calling XMC_CCU8_StopPrescaler().
2224:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2225:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2226:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue().
2227:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
2228:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetPrescaler(XMC_CCU8_SLICE_t *const slice, const uint8_t div_val);
2229:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
2230:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
2231:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2232:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param cmp_val Prescaler divider compare value
2233:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2234:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
2235:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
2236:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2237:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2238:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Programs the slice specific prescaler divider compare value, by configuring CC8yFPCS register.\n
2239:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The compare value is applicable only in floating mode of operation. The prescaler divider starts
2240:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * value and increments to the compare value steadily upon every period match. Once prescaler divid
2241:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * equals the prescaler divider compare value, the value in the former resets back to the PVAL (fro
2242:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * the value, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask.
2243:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2244:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2245:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetPrescaler().
2246:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
2247:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue(XMC_CCU8_SLICE_t *const slice,
2248:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                                      const uint8_t cmp_val)
2249:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
2250:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue:Invalid Slice Pointer", XMC_CCU8_IsVa
2251:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   /* First, write to the shadow register */
2252:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   slice->FPCS = (uint32_t) cmp_val;
2253:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
2254:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
2255:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
2256:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2257:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param ch_num Compare channel for which the multi-channel mode is needed.
2258:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
2259:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
2260:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2261:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2262:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Enables the multichannel mode, by setting CC8yTC.MCME1 or CC8yTC.MCME1 bits based on the \a ch_n
2263:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The output state of the Timer slices can be controlled in parallel by a single input signal.
2264:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * A particularly useful feature in motor control applications where the PWM output of multiple sli
2265:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * be gated and ungated by multi-channel gating inputs connected to the slices. A peripheral like P
2266:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * motor knows exactly which of the power drive switches are to be turned on and off at any instant
2267:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * a gating bus (known as multi-channel inputs) control which of the slices output stays gated/unga
2268:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2269:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2270:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultiChannelMode()<BR>  XMC_CCU8_SetMultiChannelShadowTransferMode().
2271:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
2272:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableMultiChannelMode(XMC_CCU8_SLICE_t *const slice,
2273:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                            const XMC_CCU8_SLICE_COMPARE_CHANNEL_t c
2274:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
2275:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultiChannelMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
2276:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultiChannelMode:Invalid Channel", XMC_CCU8_SLICE_CHECK_COMP_CHA
2277:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
2278:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)CCU8_CC8_TC_MCME1_Msk << ch_num;
2279:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
2280:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
2281:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
2282:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2283:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param ch_num Compare channel for which the multi-channel mode needs to be disabled.
2284:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
2285:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
2286:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2287:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2288:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Disables the multichannel mode, by clearing CC8yTC.MCME1 or CC8yTC.MCME1 bits based on the \a ch
2289:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Returns the slices to the normal operation mode. This takes the slice number as input and
2290:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * configures the multi channel mode for it.
2291:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2292:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2293:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableMultiChannelMode().
2294:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
2295:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableMultiChannelMode(XMC_CCU8_SLICE_t *const slice,
2296:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                             const XMC_CCU8_SLICE_COMPARE_CHANNEL_t 
2297:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
2298:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultiChannelMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2299:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultiChannelMode:Invalid Channel", XMC_CCU8_SLICE_CHECK_COMP_CH
2300:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
2301:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)CCU8_CC8_TC_MCME1_Msk << ch_num);
2302:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
2303:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
2304:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
2305:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2306:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice_mode_msk Slices for which the configuration has to be applied.
2307:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                       Use ::XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t enum items to create a mask
2308:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                             using a bit wise OR operation.
2309:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
2310:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
2311:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2312:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2313:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Enables the Multi-channel shadow transfer request trigger signal either by software or hardware 
2314:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * GCTRL.MSE0, GCTRL.MSE1, GCTRL.MSE2, and GCTRL.MSE3 based on the mask.\n\n
2315:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The shadow transfer would take place either if it was requested by software or by the CCU8x.MCSS
2316:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2317:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2318:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  None.
2319:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** */
2320:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** void XMC_CCU8_SetMultiChannelShadowTransferMode(XMC_CCU8_MODULE_t *const module, const uint32_t sli
2321:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
2322:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
2323:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2324:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param reg_num The capture register from which the captured value is to be retrieved
2325:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                Range: [0,3]
2326:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
2327:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    uint32_t  Returns the Capture register value.
2328:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *              Range: [0 to 0x1FFFFF]
2329:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2330:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2331:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Retrieves timer value which has been captured in the Capture registers, by reading CC8yCV[\b reg
2332:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The signal whose timing characteristics are to be measured must be mapped to an event which in t
2333:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * to the capture function. Based on the capture criteria, the timer values are captured into captu
2334:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * characteristics of the input signal may then be derived/inferred from the captured values. The f
2335:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * to find out if there is a new captured value present.
2336:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2337:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2338:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetLastCapturedTimerValue().
2339:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
2340:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCaptureRegisterValue(const XMC_CCU8_SLICE_t *const slice, const uint8_t 
2341:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
2342:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
2343:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2344:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param set  The capture register set, which must be evaluated
2345:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param val_ptr Out Parameter of the API.Stores the captured timer value into this out parameter.
2346:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
2347:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  ::XMC_CCU8_STATUS_t Returns XMC_CCU8_STATUS_OK if there was new value present in the capture re
2348:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *                   returns XMC_CCU8_STATUS_ERROR if there was no new value present in the capture
2349:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2350:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2351:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Retrieves the latest captured timer value, by reading CC8yCV registers.\n\n
2352:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Retrieve the timer value last stored by the slice. When separate capture events are used,
2353:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * users must specify the capture set to evaluate. If single capture event mode is used, all 8 capt
2354:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * evaluated.\n
2355:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * The lowest register is evaluated first followed by the next higher ordered register and this con
2356:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * capture registers have been evaluated.
2357:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2358:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2359:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetCaptureregisterValue().
2360:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
2361:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** XMC_CCU8_STATUS_t XMC_CCU8_SLICE_GetLastCapturedTimerValue(const XMC_CCU8_SLICE_t *const slice,
2362:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                            const XMC_CCU8_SLICE_CAP_REG_SET_t set,
2363:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****                                                            uint32_t *val_ptr);
2364:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
2365:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** /**
2366:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2367:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2368:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * @return <BR>
2369:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *    None<BR>
2370:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2371:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2372:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * Enables the generation of an interrupt pulse for the event, by configuring CC8yINTE register.\n\
2373:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2374:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API merely enables the event. Binding with SR is perform
2375:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *
2376:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2377:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableMultipleEvents()<BR>  XMC_CCU8_SLIC
2378:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2379:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****  */
2380:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE
2381:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** {
  81              	 .loc 2 2381 0
  82              	 .cfi_startproc
  83              	 
  84              	 
  85              	 
  86 0000 80B4     	 push {r7}
  87              	.LCFI6:
  88              	 .cfi_def_cfa_offset 4
  89              	 .cfi_offset 7,-4
  90 0002 83B0     	 sub sp,sp,#12
  91              	.LCFI7:
  92              	 .cfi_def_cfa_offset 16
  93 0004 00AF     	 add r7,sp,#0
  94              	.LCFI8:
  95              	 .cfi_def_cfa_register 7
  96 0006 7860     	 str r0,[r7,#4]
  97 0008 0B46     	 mov r3,r1
  98 000a FB70     	 strb r3,[r7,#3]
2382:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2383:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2384:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** 
2385:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h ****   slice->INTE |= ((uint32_t) 1) << ((uint32_t) event);
  99              	 .loc 2 2385 0
 100 000c 7B68     	 ldr r3,[r7,#4]
 101 000e D3F8A420 	 ldr r2,[r3,#164]
 102 0012 FB78     	 ldrb r3,[r7,#3]
 103 0014 0121     	 movs r1,#1
 104 0016 01FA03F3 	 lsl r3,r1,r3
 105 001a 1A43     	 orrs r2,r2,r3
 106 001c 7B68     	 ldr r3,[r7,#4]
 107 001e C3F8A420 	 str r2,[r3,#164]
2386:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu8.h **** }
 108              	 .loc 2 2386 0
 109 0022 0C37     	 adds r7,r7,#12
 110              	.LCFI9:
 111              	 .cfi_def_cfa_offset 4
 112 0024 BD46     	 mov sp,r7
 113              	.LCFI10:
 114              	 .cfi_def_cfa_register 13
 115              	 
 116 0026 5DF8047B 	 ldr r7,[sp],#4
 117              	.LCFI11:
 118              	 .cfi_restore 7
 119              	 .cfi_def_cfa_offset 0
 120 002a 7047     	 bx lr
 121              	 .cfi_endproc
 122              	.LFE197:
 124              	 .section .text.main,"ax",%progbits
 125              	 .align 2
 126              	 .global main
 127              	 .thumb
 128              	 .thumb_func
 130              	main:
 131              	.LFB215:
 132              	 .file 3 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2015 Nov 18 14:07:11
   5:../main.c     ****  *  Author: mosiu
   6:../main.c     ****  */
   7:../main.c     **** 
   8:../main.c     **** 
   9:../main.c     **** #include <DAVE.h>                 //Declarations from DAVE Code Generation (includes SFR declaratio
  10:../main.c     **** 
  11:../main.c     **** #define SYSTICK_PERIOD_US 	1000u
  12:../main.c     **** #define PWM_FREQ_HZ			10000u
  13:../main.c     **** #define PWM_PERIOD_SEC		(1.0/PWM_FREQ_HZ)
  14:../main.c     **** #define TIME_PER_SYSTIC_SEC (SYSTICK_PERIOD_US)/1000000.0
  15:../main.c     **** 
  16:../main.c     **** typedef enum {
  17:../main.c     **** 	PHASE_A,
  18:../main.c     **** 	PHASE_B,
  19:../main.c     **** 	PHASE_C
  20:../main.c     **** }phase_t;
  21:../main.c     **** 
  22:../main.c     **** 
  23:../main.c     **** /**
  24:../main.c     **** 
  25:../main.c     ****  * @brief main() - Application entry point
  26:../main.c     ****  *
  27:../main.c     ****  * <b>Details of function</b><br>
  28:../main.c     ****  * This routine is the application entry point. It is invoked by the device startup code. It is res
  29:../main.c     ****  * invoking the APP initialization dispatcher routine - DAVE_Init() and hosting the place-holder fo
  30:../main.c     ****  * code.
  31:../main.c     ****  */
  32:../main.c     **** 
  33:../main.c     **** void PWM_set_duty (float duty_A, float duty_B, float duty_C);
  34:../main.c     **** void PWM_set_freq (uint32_t freq_hz);
  35:../main.c     **** void ZSM_update(float amplitude, float phase, uint32_t frequency);
  36:../main.c     **** void PWM_set_interrupt(void);
  37:../main.c     **** 
  38:../main.c     **** void PWM_systick_setting(void);
  39:../main.c     **** 
  40:../main.c     **** int main(void)
  41:../main.c     **** {
 133              	 .loc 3 41 0
 134              	 .cfi_startproc
 135              	 
 136              	 
 137 0000 80B5     	 push {r7,lr}
 138              	.LCFI12:
 139              	 .cfi_def_cfa_offset 8
 140              	 .cfi_offset 7,-8
 141              	 .cfi_offset 14,-4
 142 0002 82B0     	 sub sp,sp,#8
 143              	.LCFI13:
 144              	 .cfi_def_cfa_offset 16
 145 0004 00AF     	 add r7,sp,#0
 146              	.LCFI14:
 147              	 .cfi_def_cfa_register 7
  42:../main.c     **** 	uint32_t Systick_Timer_ID;
  43:../main.c     ****   DAVE_STATUS_t status;
  44:../main.c     ****   status = DAVE_Init();           /* Initialization of DAVE APPs  */
 148              	 .loc 3 44 0
 149 0006 FFF7FEFF 	 bl DAVE_Init
 150 000a 0346     	 mov r3,r0
 151 000c FB71     	 strb r3,[r7,#7]
  45:../main.c     ****   PWM_set_interrupt();
 152              	 .loc 3 45 0
 153 000e FFF7FEFF 	 bl PWM_set_interrupt
  46:../main.c     **** 
  47:../main.c     ****   // Create software timer - 1ms
  48:../main.c     **** //  Systick_Timer_ID = (uint32_t)SYSTIMER_CreateTimer(SYSTICK_PERIOD_US,SYSTIMER_MODE_PERIODIC,(voi
  49:../main.c     **** //  SYSTIMER_StartTimer(Systick_Timer_ID);
  50:../main.c     **** 
  51:../main.c     **** 
  52:../main.c     ****   if(status == DAVE_STATUS_FAILURE)
 154              	 .loc 3 52 0
 155 0012 FB79     	 ldrb r3,[r7,#7]
 156 0014 012B     	 cmp r3,#1
 157 0016 00D1     	 bne .L6
 158              	.L7:
  53:../main.c     ****   {
  54:../main.c     ****     /* Placeholder for error handler code. The while loop below can be replaced with an user error 
  55:../main.c     ****     XMC_DEBUG("DAVE APPs initialization failed\n");
  56:../main.c     **** 
  57:../main.c     ****     while(1U)
  58:../main.c     ****     {
  59:../main.c     **** 
  60:../main.c     ****     }
 159              	 .loc 3 60 0 discriminator 1
 160 0018 FEE7     	 b .L7
 161              	.L6:
  61:../main.c     ****   }
  62:../main.c     **** 
  63:../main.c     ****   PWM_CCU8_Start(&PWM_CCU8_0);
 162              	 .loc 3 63 0
 163 001a 0748     	 ldr r0,.L9
 164 001c FFF7FEFF 	 bl PWM_CCU8_Start
  64:../main.c     ****   PWM_CCU8_Start(&PWM_CCU8_1);
 165              	 .loc 3 64 0
 166 0020 0648     	 ldr r0,.L9+4
 167 0022 FFF7FEFF 	 bl PWM_CCU8_Start
  65:../main.c     ****   PWM_CCU8_Start(&PWM_CCU8_2);
 168              	 .loc 3 65 0
 169 0026 0648     	 ldr r0,.L9+8
 170 0028 FFF7FEFF 	 bl PWM_CCU8_Start
  66:../main.c     **** 
  67:../main.c     **** 
  68:../main.c     ****   // freq to 10khz
  69:../main.c     ****   // TODO:: set it here
  70:../main.c     ****   PWM_set_freq(PWM_FREQ_HZ);
 171              	 .loc 3 70 0
 172 002c 42F21070 	 movw r0,#10000
 173 0030 FFF7FEFF 	 bl PWM_set_freq
 174              	.L8:
  71:../main.c     ****   //kernel_number = PWM_CCU8_0.kernel_number;
  72:../main.c     ****   //ccu_modules = 1U << (SCU_GENERAL_CCUCON_GSC80_Pos + kernel_number);
  73:../main.c     ****   //GLOBAL_CCU8_SyncStartTriggerHigh(GLOBAL_CCU8_CCUCON_Msk);
  74:../main.c     **** 
  75:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
  76:../main.c     ****   while(1U)
  77:../main.c     ****   {
  78:../main.c     ****   }
 175              	 .loc 3 78 0 discriminator 2
 176 0034 FEE7     	 b .L8
 177              	.L10:
 178 0036 00BF     	 .align 2
 179              	.L9:
 180 0038 00000000 	 .word PWM_CCU8_0
 181 003c 00000000 	 .word PWM_CCU8_1
 182 0040 00000000 	 .word PWM_CCU8_2
 183              	 .cfi_endproc
 184              	.LFE215:
 186              	 .global __aeabi_f2d
 187              	 .global __aeabi_ui2d
 188              	 .global __aeabi_dmul
 189              	 .global __aeabi_dadd
 190              	 .global __aeabi_d2f
 191              	 .global __aeabi_dsub
 192              	 .section .text.ZSM_update,"ax",%progbits
 193              	 .align 2
 194              	 .global ZSM_update
 195              	 .thumb
 196              	 .thumb_func
 198              	ZSM_update:
 199              	.LFB216:
  79:../main.c     **** }
  80:../main.c     **** 
  81:../main.c     **** //void PWM_systick_setting(void)
  82:../main.c     **** //{
  83:../main.c     **** //	ZSM_update(0.7, 0, 200);
  84:../main.c     **** //}
  85:../main.c     **** 
  86:../main.c     **** void ZSM_update(float amplitude, float phase, uint32_t frequency)
  87:../main.c     **** {
 200              	 .loc 3 87 0
 201              	 .cfi_startproc
 202              	 
 203              	 
 204 0000 2DE9B043 	 push {r4,r5,r7,r8,r9,lr}
 205              	.LCFI15:
 206              	 .cfi_def_cfa_offset 24
 207              	 .cfi_offset 4,-24
 208              	 .cfi_offset 5,-20
 209              	 .cfi_offset 7,-16
 210              	 .cfi_offset 8,-12
 211              	 .cfi_offset 9,-8
 212              	 .cfi_offset 14,-4
 213 0004 88B0     	 sub sp,sp,#32
 214              	.LCFI16:
 215              	 .cfi_def_cfa_offset 56
 216 0006 00AF     	 add r7,sp,#0
 217              	.LCFI17:
 218              	 .cfi_def_cfa_register 7
 219 0008 F860     	 str r0,[r7,#12]
 220 000a B960     	 str r1,[r7,#8]
 221 000c 7A60     	 str r2,[r7,#4]
  88:../main.c     **** 	if (amplitude > 1.0)
 222              	 .loc 3 88 0
 223 000e D7ED037A 	 flds s15,[r7,#12]
 224 0012 B7EE007A 	 fconsts s14,#112
 225 0016 F4EEC77A 	 fcmpes s15,s14
 226 001a F1EE10FA 	 fmstat
 227 001e 02DD     	 ble .L12
  89:../main.c     **** 		amplitude = 1.0;
 228              	 .loc 3 89 0
 229 0020 4FF07E53 	 mov r3,#1065353216
 230 0024 FB60     	 str r3,[r7,#12]
 231              	.L12:
  90:../main.c     **** 	if (amplitude < 0)
 232              	 .loc 3 90 0
 233 0026 D7ED037A 	 flds s15,[r7,#12]
 234 002a F5EEC07A 	 fcmpezs s15
 235 002e F1EE10FA 	 fmstat
 236 0032 02D5     	 bpl .L14
  91:../main.c     **** 		amplitude = 0;
 237              	 .loc 3 91 0
 238 0034 4FF00003 	 mov r3,#0
 239 0038 FB60     	 str r3,[r7,#12]
 240              	.L14:
  92:../main.c     **** 
  93:../main.c     **** 	float duty_cycle_result_A, duty_cycle_result_B, duty_cycle_result_C;
  94:../main.c     **** 
  95:../main.c     **** 	static float time = 0;
  96:../main.c     **** 
  97:../main.c     **** 	duty_cycle_result_A = amplitude*(0.5*sinf(6.2832*frequency*time + phase)+0.5);
 241              	 .loc 3 97 0
 242 003a F868     	 ldr r0,[r7,#12]
 243 003c FFF7FEFF 	 bl __aeabi_f2d
 244 0040 0446     	 mov r4,r0
 245 0042 0D46     	 mov r5,r1
 246 0044 7868     	 ldr r0,[r7,#4]
 247 0046 FFF7FEFF 	 bl __aeabi_ui2d
 248 004a 0246     	 mov r2,r0
 249 004c 0B46     	 mov r3,r1
 250 004e 1046     	 mov r0,r2
 251 0050 1946     	 mov r1,r3
 252 0052 9BA3     	 adr r3,.L18
 253 0054 D3E90023 	 ldrd r2,[r3]
 254 0058 FFF7FEFF 	 bl __aeabi_dmul
 255 005c 0246     	 mov r2,r0
 256 005e 0B46     	 mov r3,r1
 257 0060 9046     	 mov r8,r2
 258 0062 9946     	 mov r9,r3
 259 0064 9C4B     	 ldr r3,.L18+24
 260 0066 1B68     	 ldr r3,[r3]
 261 0068 1846     	 mov r0,r3
 262 006a FFF7FEFF 	 bl __aeabi_f2d
 263 006e 0246     	 mov r2,r0
 264 0070 0B46     	 mov r3,r1
 265 0072 4046     	 mov r0,r8
 266 0074 4946     	 mov r1,r9
 267 0076 FFF7FEFF 	 bl __aeabi_dmul
 268 007a 0246     	 mov r2,r0
 269 007c 0B46     	 mov r3,r1
 270 007e 9046     	 mov r8,r2
 271 0080 9946     	 mov r9,r3
 272 0082 B868     	 ldr r0,[r7,#8]
 273 0084 FFF7FEFF 	 bl __aeabi_f2d
 274 0088 0246     	 mov r2,r0
 275 008a 0B46     	 mov r3,r1
 276 008c 4046     	 mov r0,r8
 277 008e 4946     	 mov r1,r9
 278 0090 FFF7FEFF 	 bl __aeabi_dadd
 279 0094 0246     	 mov r2,r0
 280 0096 0B46     	 mov r3,r1
 281 0098 1046     	 mov r0,r2
 282 009a 1946     	 mov r1,r3
 283 009c FFF7FEFF 	 bl __aeabi_d2f
 284 00a0 0346     	 mov r3,r0
 285 00a2 1846     	 mov r0,r3
 286 00a4 FFF7FEFF 	 bl sinf
 287 00a8 0346     	 mov r3,r0
 288 00aa 1846     	 mov r0,r3
 289 00ac FFF7FEFF 	 bl __aeabi_f2d
 290 00b0 0246     	 mov r2,r0
 291 00b2 0B46     	 mov r3,r1
 292 00b4 1046     	 mov r0,r2
 293 00b6 1946     	 mov r1,r3
 294 00b8 4FF00002 	 mov r2,#0
 295 00bc 874B     	 ldr r3,.L18+28
 296 00be FFF7FEFF 	 bl __aeabi_dmul
 297 00c2 0246     	 mov r2,r0
 298 00c4 0B46     	 mov r3,r1
 299 00c6 1046     	 mov r0,r2
 300 00c8 1946     	 mov r1,r3
 301 00ca 4FF00002 	 mov r2,#0
 302 00ce 834B     	 ldr r3,.L18+28
 303 00d0 FFF7FEFF 	 bl __aeabi_dadd
 304 00d4 0246     	 mov r2,r0
 305 00d6 0B46     	 mov r3,r1
 306 00d8 2046     	 mov r0,r4
 307 00da 2946     	 mov r1,r5
 308 00dc FFF7FEFF 	 bl __aeabi_dmul
 309 00e0 0246     	 mov r2,r0
 310 00e2 0B46     	 mov r3,r1
 311 00e4 1046     	 mov r0,r2
 312 00e6 1946     	 mov r1,r3
 313 00e8 FFF7FEFF 	 bl __aeabi_d2f
 314 00ec 0346     	 mov r3,r0
 315 00ee FB61     	 str r3,[r7,#28]
  98:../main.c     **** 	duty_cycle_result_B = amplitude*(0.5*sinf(6.2832*frequency*time + phase + 2.0944)+0.5);
 316              	 .loc 3 98 0
 317 00f0 F868     	 ldr r0,[r7,#12]
 318 00f2 FFF7FEFF 	 bl __aeabi_f2d
 319 00f6 0446     	 mov r4,r0
 320 00f8 0D46     	 mov r5,r1
 321 00fa 7868     	 ldr r0,[r7,#4]
 322 00fc FFF7FEFF 	 bl __aeabi_ui2d
 323 0100 0246     	 mov r2,r0
 324 0102 0B46     	 mov r3,r1
 325 0104 1046     	 mov r0,r2
 326 0106 1946     	 mov r1,r3
 327 0108 6DA3     	 adr r3,.L18
 328 010a D3E90023 	 ldrd r2,[r3]
 329 010e FFF7FEFF 	 bl __aeabi_dmul
 330 0112 0246     	 mov r2,r0
 331 0114 0B46     	 mov r3,r1
 332 0116 9046     	 mov r8,r2
 333 0118 9946     	 mov r9,r3
 334 011a 6F4B     	 ldr r3,.L18+24
 335 011c 1B68     	 ldr r3,[r3]
 336 011e 1846     	 mov r0,r3
 337 0120 FFF7FEFF 	 bl __aeabi_f2d
 338 0124 0246     	 mov r2,r0
 339 0126 0B46     	 mov r3,r1
 340 0128 4046     	 mov r0,r8
 341 012a 4946     	 mov r1,r9
 342 012c FFF7FEFF 	 bl __aeabi_dmul
 343 0130 0246     	 mov r2,r0
 344 0132 0B46     	 mov r3,r1
 345 0134 9046     	 mov r8,r2
 346 0136 9946     	 mov r9,r3
 347 0138 B868     	 ldr r0,[r7,#8]
 348 013a FFF7FEFF 	 bl __aeabi_f2d
 349 013e 0246     	 mov r2,r0
 350 0140 0B46     	 mov r3,r1
 351 0142 4046     	 mov r0,r8
 352 0144 4946     	 mov r1,r9
 353 0146 FFF7FEFF 	 bl __aeabi_dadd
 354 014a 0246     	 mov r2,r0
 355 014c 0B46     	 mov r3,r1
 356 014e 1046     	 mov r0,r2
 357 0150 1946     	 mov r1,r3
 358 0152 5DA3     	 adr r3,.L18+8
 359 0154 D3E90023 	 ldrd r2,[r3]
 360 0158 FFF7FEFF 	 bl __aeabi_dadd
 361 015c 0246     	 mov r2,r0
 362 015e 0B46     	 mov r3,r1
 363 0160 1046     	 mov r0,r2
 364 0162 1946     	 mov r1,r3
 365 0164 FFF7FEFF 	 bl __aeabi_d2f
 366 0168 0346     	 mov r3,r0
 367 016a 1846     	 mov r0,r3
 368 016c FFF7FEFF 	 bl sinf
 369 0170 0346     	 mov r3,r0
 370 0172 1846     	 mov r0,r3
 371 0174 FFF7FEFF 	 bl __aeabi_f2d
 372 0178 0246     	 mov r2,r0
 373 017a 0B46     	 mov r3,r1
 374 017c 1046     	 mov r0,r2
 375 017e 1946     	 mov r1,r3
 376 0180 4FF00002 	 mov r2,#0
 377 0184 554B     	 ldr r3,.L18+28
 378 0186 FFF7FEFF 	 bl __aeabi_dmul
 379 018a 0246     	 mov r2,r0
 380 018c 0B46     	 mov r3,r1
 381 018e 1046     	 mov r0,r2
 382 0190 1946     	 mov r1,r3
 383 0192 4FF00002 	 mov r2,#0
 384 0196 514B     	 ldr r3,.L18+28
 385 0198 FFF7FEFF 	 bl __aeabi_dadd
 386 019c 0246     	 mov r2,r0
 387 019e 0B46     	 mov r3,r1
 388 01a0 2046     	 mov r0,r4
 389 01a2 2946     	 mov r1,r5
 390 01a4 FFF7FEFF 	 bl __aeabi_dmul
 391 01a8 0246     	 mov r2,r0
 392 01aa 0B46     	 mov r3,r1
 393 01ac 1046     	 mov r0,r2
 394 01ae 1946     	 mov r1,r3
 395 01b0 FFF7FEFF 	 bl __aeabi_d2f
 396 01b4 0346     	 mov r3,r0
 397 01b6 BB61     	 str r3,[r7,#24]
  99:../main.c     **** 	duty_cycle_result_C = amplitude*(0.5*sinf(6.2832*frequency*time + phase - 2.0944)+0.5);
 398              	 .loc 3 99 0
 399 01b8 F868     	 ldr r0,[r7,#12]
 400 01ba FFF7FEFF 	 bl __aeabi_f2d
 401 01be 0446     	 mov r4,r0
 402 01c0 0D46     	 mov r5,r1
 403 01c2 7868     	 ldr r0,[r7,#4]
 404 01c4 FFF7FEFF 	 bl __aeabi_ui2d
 405 01c8 0246     	 mov r2,r0
 406 01ca 0B46     	 mov r3,r1
 407 01cc 1046     	 mov r0,r2
 408 01ce 1946     	 mov r1,r3
 409 01d0 3BA3     	 adr r3,.L18
 410 01d2 D3E90023 	 ldrd r2,[r3]
 411 01d6 FFF7FEFF 	 bl __aeabi_dmul
 412 01da 0246     	 mov r2,r0
 413 01dc 0B46     	 mov r3,r1
 414 01de 9046     	 mov r8,r2
 415 01e0 9946     	 mov r9,r3
 416 01e2 3D4B     	 ldr r3,.L18+24
 417 01e4 1B68     	 ldr r3,[r3]
 418 01e6 1846     	 mov r0,r3
 419 01e8 FFF7FEFF 	 bl __aeabi_f2d
 420 01ec 0246     	 mov r2,r0
 421 01ee 0B46     	 mov r3,r1
 422 01f0 4046     	 mov r0,r8
 423 01f2 4946     	 mov r1,r9
 424 01f4 FFF7FEFF 	 bl __aeabi_dmul
 425 01f8 0246     	 mov r2,r0
 426 01fa 0B46     	 mov r3,r1
 427 01fc 9046     	 mov r8,r2
 428 01fe 9946     	 mov r9,r3
 429 0200 B868     	 ldr r0,[r7,#8]
 430 0202 FFF7FEFF 	 bl __aeabi_f2d
 431 0206 0246     	 mov r2,r0
 432 0208 0B46     	 mov r3,r1
 433 020a 4046     	 mov r0,r8
 434 020c 4946     	 mov r1,r9
 435 020e FFF7FEFF 	 bl __aeabi_dadd
 436 0212 0246     	 mov r2,r0
 437 0214 0B46     	 mov r3,r1
 438 0216 1046     	 mov r0,r2
 439 0218 1946     	 mov r1,r3
 440 021a 2BA3     	 adr r3,.L18+8
 441 021c D3E90023 	 ldrd r2,[r3]
 442 0220 FFF7FEFF 	 bl __aeabi_dsub
 443 0224 0246     	 mov r2,r0
 444 0226 0B46     	 mov r3,r1
 445 0228 1046     	 mov r0,r2
 446 022a 1946     	 mov r1,r3
 447 022c FFF7FEFF 	 bl __aeabi_d2f
 448 0230 0346     	 mov r3,r0
 449 0232 1846     	 mov r0,r3
 450 0234 FFF7FEFF 	 bl sinf
 451 0238 0346     	 mov r3,r0
 452 023a 1846     	 mov r0,r3
 453 023c FFF7FEFF 	 bl __aeabi_f2d
 454 0240 0246     	 mov r2,r0
 455 0242 0B46     	 mov r3,r1
 456 0244 1046     	 mov r0,r2
 457 0246 1946     	 mov r1,r3
 458 0248 4FF00002 	 mov r2,#0
 459 024c 234B     	 ldr r3,.L18+28
 460 024e FFF7FEFF 	 bl __aeabi_dmul
 461 0252 0246     	 mov r2,r0
 462 0254 0B46     	 mov r3,r1
 463 0256 1046     	 mov r0,r2
 464 0258 1946     	 mov r1,r3
 465 025a 4FF00002 	 mov r2,#0
 466 025e 1F4B     	 ldr r3,.L18+28
 467 0260 FFF7FEFF 	 bl __aeabi_dadd
 468 0264 0246     	 mov r2,r0
 469 0266 0B46     	 mov r3,r1
 470 0268 2046     	 mov r0,r4
 471 026a 2946     	 mov r1,r5
 472 026c FFF7FEFF 	 bl __aeabi_dmul
 473 0270 0246     	 mov r2,r0
 474 0272 0B46     	 mov r3,r1
 475 0274 1046     	 mov r0,r2
 476 0276 1946     	 mov r1,r3
 477 0278 FFF7FEFF 	 bl __aeabi_d2f
 478 027c 0346     	 mov r3,r0
 479 027e 7B61     	 str r3,[r7,#20]
 100:../main.c     **** 	PWM_set_duty(duty_cycle_result_A, duty_cycle_result_B, duty_cycle_result_C);
 480              	 .loc 3 100 0
 481 0280 F869     	 ldr r0,[r7,#28]
 482 0282 B969     	 ldr r1,[r7,#24]
 483 0284 7A69     	 ldr r2,[r7,#20]
 484 0286 FFF7FEFF 	 bl PWM_set_duty
 101:../main.c     **** 
 102:../main.c     **** 	time += PWM_PERIOD_SEC;
 485              	 .loc 3 102 0
 486 028a 134B     	 ldr r3,.L18+24
 487 028c 1B68     	 ldr r3,[r3]
 488 028e 1846     	 mov r0,r3
 489 0290 FFF7FEFF 	 bl __aeabi_f2d
 490 0294 0246     	 mov r2,r0
 491 0296 0B46     	 mov r3,r1
 492 0298 1046     	 mov r0,r2
 493 029a 1946     	 mov r1,r3
 494 029c 0CA3     	 adr r3,.L18+16
 495 029e D3E90023 	 ldrd r2,[r3]
 496 02a2 FFF7FEFF 	 bl __aeabi_dadd
 497 02a6 0246     	 mov r2,r0
 498 02a8 0B46     	 mov r3,r1
 499 02aa 1046     	 mov r0,r2
 500 02ac 1946     	 mov r1,r3
 501 02ae FFF7FEFF 	 bl __aeabi_d2f
 502 02b2 0246     	 mov r2,r0
 503 02b4 084B     	 ldr r3,.L18+24
 504 02b6 1A60     	 str r2,[r3]
 103:../main.c     **** }
 505              	 .loc 3 103 0
 506 02b8 2037     	 adds r7,r7,#32
 507              	.LCFI18:
 508              	 .cfi_def_cfa_offset 24
 509 02ba BD46     	 mov sp,r7
 510              	.LCFI19:
 511              	 .cfi_def_cfa_register 13
 512              	 
 513 02bc BDE8B083 	 pop {r4,r5,r7,r8,r9,pc}
 514              	.L19:
 515              	 .align 3
 516              	.L18:
 517 02c0 A7E8482E 	 .word 776530087
 518 02c4 FF211940 	 .word 1075388927
 519 02c8 6FF085C9 	 .word -913969041
 520 02cc 54C10040 	 .word 1073791316
 521 02d0 2D431CEB 	 .word -350469331
 522 02d4 E2361A3F 	 .word 1058682594
 523 02d8 00000000 	 .word time.8451
 524 02dc 0000E03F 	 .word 1071644672
 525              	 .cfi_endproc
 526              	.LFE216:
 528              	 .section .text.PWM_set_freq,"ax",%progbits
 529              	 .align 2
 530              	 .global PWM_set_freq
 531              	 .thumb
 532              	 .thumb_func
 534              	PWM_set_freq:
 535              	.LFB217:
 104:../main.c     **** 
 105:../main.c     **** 
 106:../main.c     **** 
 107:../main.c     **** void PWM_set_freq(uint32_t freq_hz)
 108:../main.c     **** {
 536              	 .loc 3 108 0
 537              	 .cfi_startproc
 538              	 
 539              	 
 540 0000 80B5     	 push {r7,lr}
 541              	.LCFI20:
 542              	 .cfi_def_cfa_offset 8
 543              	 .cfi_offset 7,-8
 544              	 .cfi_offset 14,-4
 545 0002 82B0     	 sub sp,sp,#8
 546              	.LCFI21:
 547              	 .cfi_def_cfa_offset 16
 548 0004 00AF     	 add r7,sp,#0
 549              	.LCFI22:
 550              	 .cfi_def_cfa_register 7
 551 0006 7860     	 str r0,[r7,#4]
 109:../main.c     **** 	  PWM_CCU8_SetFreqSymmetric(&PWM_CCU8_0, freq_hz);
 552              	 .loc 3 109 0
 553 0008 0748     	 ldr r0,.L21
 554 000a 7968     	 ldr r1,[r7,#4]
 555 000c FFF7FEFF 	 bl PWM_CCU8_SetFreqSymmetric
 110:../main.c     **** 	  PWM_CCU8_SetFreqSymmetric(&PWM_CCU8_1, freq_hz);
 556              	 .loc 3 110 0
 557 0010 0648     	 ldr r0,.L21+4
 558 0012 7968     	 ldr r1,[r7,#4]
 559 0014 FFF7FEFF 	 bl PWM_CCU8_SetFreqSymmetric
 111:../main.c     **** 	  PWM_CCU8_SetFreqSymmetric(&PWM_CCU8_2, freq_hz);
 560              	 .loc 3 111 0
 561 0018 0548     	 ldr r0,.L21+8
 562 001a 7968     	 ldr r1,[r7,#4]
 563 001c FFF7FEFF 	 bl PWM_CCU8_SetFreqSymmetric
 112:../main.c     **** }
 564              	 .loc 3 112 0
 565 0020 0837     	 adds r7,r7,#8
 566              	.LCFI23:
 567              	 .cfi_def_cfa_offset 8
 568 0022 BD46     	 mov sp,r7
 569              	.LCFI24:
 570              	 .cfi_def_cfa_register 13
 571              	 
 572 0024 80BD     	 pop {r7,pc}
 573              	.L22:
 574 0026 00BF     	 .align 2
 575              	.L21:
 576 0028 00000000 	 .word PWM_CCU8_0
 577 002c 00000000 	 .word PWM_CCU8_1
 578 0030 00000000 	 .word PWM_CCU8_2
 579              	 .cfi_endproc
 580              	.LFE217:
 582              	 .section .text.PWM_set_duty,"ax",%progbits
 583              	 .align 2
 584              	 .global PWM_set_duty
 585              	 .thumb
 586              	 .thumb_func
 588              	PWM_set_duty:
 589              	.LFB218:
 113:../main.c     **** 
 114:../main.c     **** void PWM_set_duty (float duty_A, float duty_B, float duty_C)
 115:../main.c     **** {
 590              	 .loc 3 115 0
 591              	 .cfi_startproc
 592              	 
 593              	 
 594 0000 80B5     	 push {r7,lr}
 595              	.LCFI25:
 596              	 .cfi_def_cfa_offset 8
 597              	 .cfi_offset 7,-8
 598              	 .cfi_offset 14,-4
 599 0002 84B0     	 sub sp,sp,#16
 600              	.LCFI26:
 601              	 .cfi_def_cfa_offset 24
 602 0004 00AF     	 add r7,sp,#0
 603              	.LCFI27:
 604              	 .cfi_def_cfa_register 7
 605 0006 F860     	 str r0,[r7,#12]
 606 0008 B960     	 str r1,[r7,#8]
 607 000a 7A60     	 str r2,[r7,#4]
 116:../main.c     **** 	PWM_CCU8_SetDutyCycleSymmetric(&PWM_CCU8_0, XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint32_t)10000*duty
 608              	 .loc 3 116 0
 609 000c D7ED037A 	 flds s15,[r7,#12]
 610 0010 9FED157A 	 flds s14,.L24
 611 0014 67EE877A 	 fmuls s15,s15,s14
 612 0018 FCEEE77A 	 ftouizs s15,s15
 613 001c 1348     	 ldr r0,.L24+4
 614 001e 0021     	 movs r1,#0
 615 0020 17EE902A 	 fmrs r2,s15
 616 0024 FFF7FEFF 	 bl PWM_CCU8_SetDutyCycleSymmetric
 117:../main.c     **** 
 118:../main.c     **** 	PWM_CCU8_SetDutyCycleSymmetric(&PWM_CCU8_1, XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint32_t)10000*duty
 617              	 .loc 3 118 0
 618 0028 D7ED027A 	 flds s15,[r7,#8]
 619 002c 9FED0E7A 	 flds s14,.L24
 620 0030 67EE877A 	 fmuls s15,s15,s14
 621 0034 FCEEE77A 	 ftouizs s15,s15
 622 0038 0D48     	 ldr r0,.L24+8
 623 003a 0021     	 movs r1,#0
 624 003c 17EE902A 	 fmrs r2,s15
 625 0040 FFF7FEFF 	 bl PWM_CCU8_SetDutyCycleSymmetric
 119:../main.c     **** 
 120:../main.c     **** 	PWM_CCU8_SetDutyCycleSymmetric(&PWM_CCU8_2, XMC_CCU8_SLICE_COMPARE_CHANNEL_1, (uint32_t)10000*duty
 626              	 .loc 3 120 0
 627 0044 D7ED017A 	 flds s15,[r7,#4]
 628 0048 9FED077A 	 flds s14,.L24
 629 004c 67EE877A 	 fmuls s15,s15,s14
 630 0050 FCEEE77A 	 ftouizs s15,s15
 631 0054 0748     	 ldr r0,.L24+12
 632 0056 0021     	 movs r1,#0
 633 0058 17EE902A 	 fmrs r2,s15
 634 005c FFF7FEFF 	 bl PWM_CCU8_SetDutyCycleSymmetric
 121:../main.c     **** }
 635              	 .loc 3 121 0
 636 0060 1037     	 adds r7,r7,#16
 637              	.LCFI28:
 638              	 .cfi_def_cfa_offset 8
 639 0062 BD46     	 mov sp,r7
 640              	.LCFI29:
 641              	 .cfi_def_cfa_register 13
 642              	 
 643 0064 80BD     	 pop {r7,pc}
 644              	.L25:
 645 0066 00BF     	 .align 2
 646              	.L24:
 647 0068 00401C46 	 .word 1176256512
 648 006c 00000000 	 .word PWM_CCU8_0
 649 0070 00000000 	 .word PWM_CCU8_1
 650 0074 00000000 	 .word PWM_CCU8_2
 651              	 .cfi_endproc
 652              	.LFE218:
 654              	 .section .text.PWM_set_interrupt,"ax",%progbits
 655              	 .align 2
 656              	 .global PWM_set_interrupt
 657              	 .thumb
 658              	 .thumb_func
 660              	PWM_set_interrupt:
 661              	.LFB219:
 122:../main.c     **** 
 123:../main.c     **** void PWM_set_interrupt (void)
 124:../main.c     **** {
 662              	 .loc 3 124 0
 663              	 .cfi_startproc
 664              	 
 665              	 
 666 0000 80B5     	 push {r7,lr}
 667              	.LCFI30:
 668              	 .cfi_def_cfa_offset 8
 669              	 .cfi_offset 7,-8
 670              	 .cfi_offset 14,-4
 671 0002 00AF     	 add r7,sp,#0
 672              	.LCFI31:
 673              	 .cfi_def_cfa_register 7
 125:../main.c     **** 	XMC_CCU8_SLICE_EnableEvent(CCU80_CC80, XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH);
 674              	 .loc 3 125 0
 675 0004 0648     	 ldr r0,.L27
 676 0006 0021     	 movs r1,#0
 677 0008 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 126:../main.c     **** 	XMC_CCU8_SLICE_SetInterruptNode(CCU80_CC80, XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH, XMC_CCU8_SLICE_SR_
 678              	 .loc 3 126 0
 679 000c 0448     	 ldr r0,.L27
 680 000e 0021     	 movs r1,#0
 681 0010 0022     	 movs r2,#0
 682 0012 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 127:../main.c     **** 	NVIC_EnableIRQ(CCU80_0_IRQn);
 683              	 .loc 3 127 0
 684 0016 3C20     	 movs r0,#60
 685 0018 FFF7FEFF 	 bl NVIC_EnableIRQ
 128:../main.c     **** }
 686              	 .loc 3 128 0
 687 001c 80BD     	 pop {r7,pc}
 688              	.L28:
 689 001e 00BF     	 .align 2
 690              	.L27:
 691 0020 00010240 	 .word 1073873152
 692              	 .cfi_endproc
 693              	.LFE219:
 695              	 .section .text.CCU80_0_IRQHandler,"ax",%progbits
 696              	 .align 2
 697              	 .global CCU80_0_IRQHandler
 698              	 .thumb
 699              	 .thumb_func
 701              	CCU80_0_IRQHandler:
 702              	.LFB220:
 129:../main.c     **** 
 130:../main.c     **** void
 131:../main.c     **** CCU80_0_IRQHandler()
 132:../main.c     **** {
 703              	 .loc 3 132 0
 704              	 .cfi_startproc
 705              	 
 706              	 
 707 0000 80B5     	 push {r7,lr}
 708              	.LCFI32:
 709              	 .cfi_def_cfa_offset 8
 710              	 .cfi_offset 7,-8
 711              	 .cfi_offset 14,-4
 712 0002 00AF     	 add r7,sp,#0
 713              	.LCFI33:
 714              	 .cfi_def_cfa_register 7
 133:../main.c     **** 	ZSM_update(0.7, 0, 1);
 715              	 .loc 3 133 0
 716 0004 0348     	 ldr r0,.L30
 717 0006 4FF00001 	 mov r1,#0
 718 000a 0122     	 movs r2,#1
 719 000c FFF7FEFF 	 bl ZSM_update
 134:../main.c     **** }
 720              	 .loc 3 134 0
 721 0010 80BD     	 pop {r7,pc}
 722              	.L31:
 723 0012 00BF     	 .align 2
 724              	.L30:
 725 0014 3333333F 	 .word 1060320051
 726              	 .cfi_endproc
 727              	.LFE220:
 729              	 .section .bss.time.8451,"aw",%nobits
 730              	 .align 2
 733              	time.8451:
 734 0000 00000000 	 .space 4
 735              	 .text
 736              	.Letext0:
 737              	 .file 4 "d:\\dave-4.1.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 738              	 .file 5 "d:\\dave-4.1.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 739              	 .file 6 "D:\\Naukowe\\BLDC_workspace\\PWM_from_ex/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 740              	 .file 7 "D:\\Naukowe\\BLDC_workspace\\PWM_from_ex\\Libraries\\XMCLib\\inc/xmc4_scu.h"
 741              	 .file 8 "D:\\Naukowe\\BLDC_workspace\\PWM_from_ex\\Libraries\\XMCLib\\inc/xmc_gpio.h"
 742              	 .file 9 "D:\\Naukowe\\BLDC_workspace\\PWM_from_ex\\Libraries\\XMCLib\\inc/xmc4_gpio.h"
 743              	 .file 10 "D:\\Naukowe\\BLDC_workspace\\PWM_from_ex\\Dave\\Generated/GLOBAL_CCU8/global_ccu8.h"
 744              	 .file 11 "D:\\Naukowe\\BLDC_workspace\\PWM_from_ex\\Dave\\Generated/PWM_CCU8/pwm_ccu8.h"
 745              	 .file 12 "D:\\Naukowe\\BLDC_workspace\\PWM_from_ex\\Dave\\Generated/DAVE.h"
 746              	 .file 13 "D:\\Naukowe\\BLDC_workspace\\PWM_from_ex/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
 747              	 .file 14 "D:\\Naukowe\\BLDC_workspace\\PWM_from_ex\\Dave\\Generated/PWM_CCU8/pwm_ccu8_extern.h"
 748              	 .file 15 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:20     .text.NVIC_EnableIRQ:00000000 $t
    {standard input}:24     .text.NVIC_EnableIRQ:00000000 NVIC_EnableIRQ
    {standard input}:69     .text.NVIC_EnableIRQ:0000002c $d
    {standard input}:74     .text.XMC_CCU8_SLICE_EnableEvent:00000000 $t
    {standard input}:78     .text.XMC_CCU8_SLICE_EnableEvent:00000000 XMC_CCU8_SLICE_EnableEvent
    {standard input}:125    .text.main:00000000 $t
    {standard input}:130    .text.main:00000000 main
    {standard input}:660    .text.PWM_set_interrupt:00000000 PWM_set_interrupt
    {standard input}:534    .text.PWM_set_freq:00000000 PWM_set_freq
    {standard input}:180    .text.main:00000038 $d
    {standard input}:193    .text.ZSM_update:00000000 $t
    {standard input}:198    .text.ZSM_update:00000000 ZSM_update
    {standard input}:588    .text.PWM_set_duty:00000000 PWM_set_duty
    {standard input}:517    .text.ZSM_update:000002c0 $d
    {standard input}:733    .bss.time.8451:00000000 time.8451
    {standard input}:529    .text.PWM_set_freq:00000000 $t
    {standard input}:576    .text.PWM_set_freq:00000028 $d
    {standard input}:583    .text.PWM_set_duty:00000000 $t
    {standard input}:647    .text.PWM_set_duty:00000068 $d
    {standard input}:655    .text.PWM_set_interrupt:00000000 $t
    {standard input}:691    .text.PWM_set_interrupt:00000020 $d
    {standard input}:696    .text.CCU80_0_IRQHandler:00000000 $t
    {standard input}:701    .text.CCU80_0_IRQHandler:00000000 CCU80_0_IRQHandler
    {standard input}:725    .text.CCU80_0_IRQHandler:00000014 $d
    {standard input}:730    .bss.time.8451:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
DAVE_Init
PWM_CCU8_Start
PWM_CCU8_0
PWM_CCU8_1
PWM_CCU8_2
__aeabi_f2d
__aeabi_ui2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
__aeabi_dsub
sinf
PWM_CCU8_SetFreqSymmetric
PWM_CCU8_SetDutyCycleSymmetric
XMC_CCU8_SLICE_SetInterruptNode
