   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_eru.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_ERU_ETL_Init,"ax",%progbits
  20              	 .align 2
  21              	 .global XMC_ERU_ETL_Init
  22              	 .thumb
  23              	 .thumb_func
  25              	XMC_ERU_ETL_Init:
  26              	.LFB132:
  27              	 .file 1 "../Libraries/XMCLib/src/xmc_eru.c"
   1:../Libraries/XMCLib/src/xmc_eru.c **** /**
   2:../Libraries/XMCLib/src/xmc_eru.c ****  * @file xmc_eru.c
   3:../Libraries/XMCLib/src/xmc_eru.c ****  * @date 2015-10-27
   4:../Libraries/XMCLib/src/xmc_eru.c ****  *
   5:../Libraries/XMCLib/src/xmc_eru.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_eru.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_eru.c ****  * XMClib v2.1.2 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_eru.c ****  *
   9:../Libraries/XMCLib/src/xmc_eru.c ****  * Copyright (c) 2015, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_eru.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_eru.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_eru.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_eru.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_eru.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_eru.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_eru.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_eru.c ****  * 
  18:../Libraries/XMCLib/src/xmc_eru.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_eru.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_eru.c ****  * 
  21:../Libraries/XMCLib/src/xmc_eru.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_eru.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_eru.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_eru.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_eru.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_eru.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_eru.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_eru.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_eru.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_eru.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_eru.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_eru.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_eru.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_eru.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_eru.c ****  *
  36:../Libraries/XMCLib/src/xmc_eru.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_eru.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_eru.c ****  *
  39:../Libraries/XMCLib/src/xmc_eru.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_eru.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_eru.c ****  *
  42:../Libraries/XMCLib/src/xmc_eru.c ****  * 2015-06-20:
  43:../Libraries/XMCLib/src/xmc_eru.c ****  *     - Removed definition of GetDriverVersion API <br>
  44:../Libraries/XMCLib/src/xmc_eru.c ****  *
  45:../Libraries/XMCLib/src/xmc_eru.c ****  * @endcond
  46:../Libraries/XMCLib/src/xmc_eru.c ****  */
  47:../Libraries/XMCLib/src/xmc_eru.c **** 
  48:../Libraries/XMCLib/src/xmc_eru.c **** /**************************************************************************************************
  49:../Libraries/XMCLib/src/xmc_eru.c ****  * HEADER FILES
  50:../Libraries/XMCLib/src/xmc_eru.c ****  **************************************************************************************************
  51:../Libraries/XMCLib/src/xmc_eru.c **** 
  52:../Libraries/XMCLib/src/xmc_eru.c **** #include "xmc_eru.h"
  53:../Libraries/XMCLib/src/xmc_eru.c **** 
  54:../Libraries/XMCLib/src/xmc_eru.c **** /**************************************************************************************************
  55:../Libraries/XMCLib/src/xmc_eru.c ****  * MACROS
  56:../Libraries/XMCLib/src/xmc_eru.c ****  **************************************************************************************************
  57:../Libraries/XMCLib/src/xmc_eru.c **** 
  58:../Libraries/XMCLib/src/xmc_eru.c **** #define ERU_EXISEL_BITSIZE (4UL) /* Used to set the input for path A and path B based on the channe
  59:../Libraries/XMCLib/src/xmc_eru.c **** #define ERU_EXISEL_INPUT_BITSIZE (2UL)
  60:../Libraries/XMCLib/src/xmc_eru.c **** 
  61:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_ETL_CHECK_INPUT_A(input) \
  62:../Libraries/XMCLib/src/xmc_eru.c ****     ((input == XMC_ERU_ETL_INPUT_A0) || \
  63:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_A1) || \
  64:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_A2) || \
  65:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_A3))
  66:../Libraries/XMCLib/src/xmc_eru.c **** 
  67:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_ETL_CHECK_INPUT_B(input) \
  68:../Libraries/XMCLib/src/xmc_eru.c ****     ((input == XMC_ERU_ETL_INPUT_B0) || \
  69:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_B1) || \
  70:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_B2) || \
  71:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_ETL_INPUT_B3))
  72:../Libraries/XMCLib/src/xmc_eru.c **** 
  73:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_ETL_CHECK_STATUS_FLAG_MODE(mode) \
  74:../Libraries/XMCLib/src/xmc_eru.c ****     ((mode == XMC_ERU_ETL_STATUS_FLAG_MODE_SWCTRL) || \
  75:../Libraries/XMCLib/src/xmc_eru.c ****      (mode == XMC_ERU_ETL_STATUS_FLAG_MODE_HWCTRL))
  76:../Libraries/XMCLib/src/xmc_eru.c **** 
  77:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_ETL_CHECK_EVENT_SOURCE(source) \
  78:../Libraries/XMCLib/src/xmc_eru.c ****     ((source == XMC_ERU_ETL_SOURCE_A)              || \
  79:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_B)              || \
  80:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_A_OR_B)         || \
  81:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_A_AND_B)        || \
  82:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_A)          || \
  83:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_A_OR_B)     || \
  84:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_A_AND_B)    || \
  85:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_B)          || \
  86:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_A_OR_NOT_B)     || \
  87:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_A_AND_NOT_B)    || \
  88:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_A_OR_NOT_B) || \
  89:../Libraries/XMCLib/src/xmc_eru.c ****      (source == XMC_ERU_ETL_SOURCE_NOT_A_AND_NOT_B))
  90:../Libraries/XMCLib/src/xmc_eru.c **** 
  91:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_ETL_CHECK_TRIGGER_EDGE(edge) \
  92:../Libraries/XMCLib/src/xmc_eru.c ****     ((edge == XMC_ERU_ETL_EDGE_DETECTION_DISABLED) || \
  93:../Libraries/XMCLib/src/xmc_eru.c ****      (edge == XMC_ERU_ETL_EDGE_DETECTION_RISING) || \
  94:../Libraries/XMCLib/src/xmc_eru.c ****      (edge == XMC_ERU_ETL_EDGE_DETECTION_FALLING) || \
  95:../Libraries/XMCLib/src/xmc_eru.c ****      (edge == XMC_ERU_ETL_EDGE_DETECTION_BOTH))
  96:../Libraries/XMCLib/src/xmc_eru.c **** 
  97:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_ETL_CHECK_TRIGGER_CHANNEL(channel) \
  98:../Libraries/XMCLib/src/xmc_eru.c ****     ((channel == XMC_ERU_ETL_OUTPUT_TRIGGER_CHANNEL0) || \
  99:../Libraries/XMCLib/src/xmc_eru.c ****      (channel == XMC_ERU_ETL_OUTPUT_TRIGGER_CHANNEL1) || \
 100:../Libraries/XMCLib/src/xmc_eru.c ****      (channel == XMC_ERU_ETL_OUTPUT_TRIGGER_CHANNEL2) || \
 101:../Libraries/XMCLib/src/xmc_eru.c ****      (channel == XMC_ERU_ETL_OUTPUT_TRIGGER_CHANNEL3))
 102:../Libraries/XMCLib/src/xmc_eru.c **** 
 103:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_OGU_CHECK_PATTERN_INPUT(input) \
 104:../Libraries/XMCLib/src/xmc_eru.c ****     ((input == XMC_ERU_OGU_PATTERN_DETECTION_INPUT0) || \
 105:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_OGU_PATTERN_DETECTION_INPUT1) || \
 106:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_OGU_PATTERN_DETECTION_INPUT2) || \
 107:../Libraries/XMCLib/src/xmc_eru.c ****      (input == XMC_ERU_OGU_PATTERN_DETECTION_INPUT3))
 108:../Libraries/XMCLib/src/xmc_eru.c **** 
 109:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_OGU_CHECK_PERIPHERAL_TRIGGER(trigger) \
 110:../Libraries/XMCLib/src/xmc_eru.c ****     ((trigger == XMC_ERU_OGU_PERIPHERAL_TRIGGER1) || \
 111:../Libraries/XMCLib/src/xmc_eru.c ****      (trigger == XMC_ERU_OGU_PERIPHERAL_TRIGGER2) || \
 112:../Libraries/XMCLib/src/xmc_eru.c ****      (trigger == XMC_ERU_OGU_PERIPHERAL_TRIGGER3))
 113:../Libraries/XMCLib/src/xmc_eru.c **** 
 114:../Libraries/XMCLib/src/xmc_eru.c **** #define XMC_ERU_OGU_CHECK_SERIVCE_REQUEST(service) \
 115:../Libraries/XMCLib/src/xmc_eru.c ****     ((service == XMC_ERU_OGU_SERVICE_REQUEST_DISABLED) || \
 116:../Libraries/XMCLib/src/xmc_eru.c ****      (service == XMC_ERU_OGU_SERVICE_REQUEST_ON_TRIGGER) || \
 117:../Libraries/XMCLib/src/xmc_eru.c ****      (service == XMC_ERU_OGU_SERVICE_REQUEST_ON_TRIGGER_AND_PATTERN_MATCH) || \
 118:../Libraries/XMCLib/src/xmc_eru.c ****      (service == XMC_ERU_OGU_SERVICE_REQUEST_ON_TRIGGER_AND_PATTERN_MISMATCH))
 119:../Libraries/XMCLib/src/xmc_eru.c ****  
 120:../Libraries/XMCLib/src/xmc_eru.c **** /**************************************************************************************************
 121:../Libraries/XMCLib/src/xmc_eru.c ****  * API IMPLEMENTATION
 122:../Libraries/XMCLib/src/xmc_eru.c ****  **************************************************************************************************
 123:../Libraries/XMCLib/src/xmc_eru.c **** /* Initializes the selected ERU_ETLx channel with the config structure.  */
 124:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_Init(XMC_ERU_t *const eru,
 125:../Libraries/XMCLib/src/xmc_eru.c ****                       const uint8_t channel,
 126:../Libraries/XMCLib/src/xmc_eru.c ****                       const XMC_ERU_ETL_CONFIG_t *const config)
 127:../Libraries/XMCLib/src/xmc_eru.c **** { 
  28              	 .loc 1 127 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 84B0     	 sub sp,sp,#16
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 24
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  43 0006 F860     	 str r0,[r7,#12]
  44 0008 0B46     	 mov r3,r1
  45 000a 7A60     	 str r2,[r7,#4]
  46 000c FB72     	 strb r3,[r7,#11]
 128:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_Init:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 129:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_Init:Invalid Channel Number", (channel < 4U));
 130:../Libraries/XMCLib/src/xmc_eru.c **** 
 131:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ERU_Enable(eru);
  47              	 .loc 1 131 0
  48 000e F868     	 ldr r0,[r7,#12]
  49 0010 FFF7FEFF 	 bl XMC_ERU_Enable
 132:../Libraries/XMCLib/src/xmc_eru.c **** 
 133:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXISEL = (eru->EXISEL & 
  50              	 .loc 1 133 0
  51 0014 FB68     	 ldr r3,[r7,#12]
  52 0016 1A68     	 ldr r2,[r3]
 134:../Libraries/XMCLib/src/xmc_eru.c ****                  ~((uint32_t)(ERU_EXISEL_EXS0A_Msk | ERU_EXISEL_EXS0B_Msk) << (channel * ERU_EXISEL
  53              	 .loc 1 134 0
  54 0018 FB7A     	 ldrb r3,[r7,#11]
  55 001a 9B00     	 lsls r3,r3,#2
  56 001c 1946     	 mov r1,r3
  57 001e 0F23     	 movs r3,#15
  58 0020 8B40     	 lsls r3,r3,r1
  59 0022 DB43     	 mvns r3,r3
 133:../Libraries/XMCLib/src/xmc_eru.c ****                  ~((uint32_t)(ERU_EXISEL_EXS0A_Msk | ERU_EXISEL_EXS0B_Msk) << (channel * ERU_EXISEL
  60              	 .loc 1 133 0
  61 0024 1A40     	 ands r2,r2,r3
 135:../Libraries/XMCLib/src/xmc_eru.c ****                 (config->input << (channel * (uint32_t)ERU_EXISEL_BITSIZE));
  62              	 .loc 1 135 0
  63 0026 7B68     	 ldr r3,[r7,#4]
  64 0028 1B68     	 ldr r3,[r3]
  65 002a F97A     	 ldrb r1,[r7,#11]
  66 002c 8900     	 lsls r1,r1,#2
  67 002e 8B40     	 lsls r3,r3,r1
 134:../Libraries/XMCLib/src/xmc_eru.c ****                  ~((uint32_t)(ERU_EXISEL_EXS0A_Msk | ERU_EXISEL_EXS0B_Msk) << (channel * ERU_EXISEL
  68              	 .loc 1 134 0
  69 0030 1A43     	 orrs r2,r2,r3
 133:../Libraries/XMCLib/src/xmc_eru.c ****                  ~((uint32_t)(ERU_EXISEL_EXS0A_Msk | ERU_EXISEL_EXS0B_Msk) << (channel * ERU_EXISEL
  70              	 .loc 1 133 0
  71 0032 FB68     	 ldr r3,[r7,#12]
  72 0034 1A60     	 str r2,[r3]
 136:../Libraries/XMCLib/src/xmc_eru.c ****   
 137:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON[channel] = config->raw;
  73              	 .loc 1 137 0
  74 0036 FA7A     	 ldrb r2,[r7,#11]
  75 0038 7B68     	 ldr r3,[r7,#4]
  76 003a 5968     	 ldr r1,[r3,#4]
  77 003c FB68     	 ldr r3,[r7,#12]
  78 003e 0432     	 adds r2,r2,#4
  79 0040 43F82210 	 str r1,[r3,r2,lsl#2]
 138:../Libraries/XMCLib/src/xmc_eru.c **** }
  80              	 .loc 1 138 0
  81 0044 1037     	 adds r7,r7,#16
  82              	.LCFI3:
  83              	 .cfi_def_cfa_offset 8
  84 0046 BD46     	 mov sp,r7
  85              	.LCFI4:
  86              	 .cfi_def_cfa_register 13
  87              	 
  88 0048 80BD     	 pop {r7,pc}
  89              	 .cfi_endproc
  90              	.LFE132:
  92 004a 00BF     	 .section .text.XMC_ERU_OGU_Init,"ax",%progbits
  93              	 .align 2
  94              	 .global XMC_ERU_OGU_Init
  95              	 .thumb
  96              	 .thumb_func
  98              	XMC_ERU_OGU_Init:
  99              	.LFB133:
 139:../Libraries/XMCLib/src/xmc_eru.c **** 
 140:../Libraries/XMCLib/src/xmc_eru.c **** /* Initializes the selected ERU_OGUy channel with the config structure.  */
 141:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_OGU_Init(XMC_ERU_t *const eru,
 142:../Libraries/XMCLib/src/xmc_eru.c ****                       const uint8_t channel,
 143:../Libraries/XMCLib/src/xmc_eru.c ****                       const XMC_ERU_OGU_CONFIG_t *const config)
 144:../Libraries/XMCLib/src/xmc_eru.c **** {
 100              	 .loc 1 144 0
 101              	 .cfi_startproc
 102              	 
 103              	 
 104 0000 80B5     	 push {r7,lr}
 105              	.LCFI5:
 106              	 .cfi_def_cfa_offset 8
 107              	 .cfi_offset 7,-8
 108              	 .cfi_offset 14,-4
 109 0002 84B0     	 sub sp,sp,#16
 110              	.LCFI6:
 111              	 .cfi_def_cfa_offset 24
 112 0004 00AF     	 add r7,sp,#0
 113              	.LCFI7:
 114              	 .cfi_def_cfa_register 7
 115 0006 F860     	 str r0,[r7,#12]
 116 0008 0B46     	 mov r3,r1
 117 000a 7A60     	 str r2,[r7,#4]
 118 000c FB72     	 strb r3,[r7,#11]
 145:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_Init:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 146:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_Init:Invalid Channel Number", (channel < 4U));
 147:../Libraries/XMCLib/src/xmc_eru.c **** 
 148:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ERU_Enable(eru);
 119              	 .loc 1 148 0
 120 000e F868     	 ldr r0,[r7,#12]
 121 0010 FFF7FEFF 	 bl XMC_ERU_Enable
 149:../Libraries/XMCLib/src/xmc_eru.c **** 
 150:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON[channel] = config->raw;
 122              	 .loc 1 150 0
 123 0014 FA7A     	 ldrb r2,[r7,#11]
 124 0016 7B68     	 ldr r3,[r7,#4]
 125 0018 1968     	 ldr r1,[r3]
 126 001a FB68     	 ldr r3,[r7,#12]
 127 001c 0832     	 adds r2,r2,#8
 128 001e 43F82210 	 str r1,[r3,r2,lsl#2]
 151:../Libraries/XMCLib/src/xmc_eru.c **** }
 129              	 .loc 1 151 0
 130 0022 1037     	 adds r7,r7,#16
 131              	.LCFI8:
 132              	 .cfi_def_cfa_offset 8
 133 0024 BD46     	 mov sp,r7
 134              	.LCFI9:
 135              	 .cfi_def_cfa_register 13
 136              	 
 137 0026 80BD     	 pop {r7,pc}
 138              	 .cfi_endproc
 139              	.LFE133:
 141              	 .section .text.XMC_ERU_ETL_SetInput,"ax",%progbits
 142              	 .align 2
 143              	 .global XMC_ERU_ETL_SetInput
 144              	 .thumb
 145              	 .thumb_func
 147              	XMC_ERU_ETL_SetInput:
 148              	.LFB134:
 152:../Libraries/XMCLib/src/xmc_eru.c **** 
 153:../Libraries/XMCLib/src/xmc_eru.c **** /* Configures the event source for path A and path B, with selected input_a and input_b respectivel
 154:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_SetInput(XMC_ERU_t *const eru,
 155:../Libraries/XMCLib/src/xmc_eru.c ****                           const uint8_t channel,
 156:../Libraries/XMCLib/src/xmc_eru.c ****                           const XMC_ERU_ETL_INPUT_A_t input_a,
 157:../Libraries/XMCLib/src/xmc_eru.c ****                           const XMC_ERU_ETL_INPUT_B_t input_b)
 158:../Libraries/XMCLib/src/xmc_eru.c **** {
 149              	 .loc 1 158 0
 150              	 .cfi_startproc
 151              	 
 152              	 
 153              	 
 154 0000 80B4     	 push {r7}
 155              	.LCFI10:
 156              	 .cfi_def_cfa_offset 4
 157              	 .cfi_offset 7,-4
 158 0002 83B0     	 sub sp,sp,#12
 159              	.LCFI11:
 160              	 .cfi_def_cfa_offset 16
 161 0004 00AF     	 add r7,sp,#0
 162              	.LCFI12:
 163              	 .cfi_def_cfa_register 7
 164 0006 7860     	 str r0,[r7,#4]
 165 0008 0846     	 mov r0,r1
 166 000a 1146     	 mov r1,r2
 167 000c 1A46     	 mov r2,r3
 168 000e 0346     	 mov r3,r0
 169 0010 FB70     	 strb r3,[r7,#3]
 170 0012 0B46     	 mov r3,r1
 171 0014 BB70     	 strb r3,[r7,#2]
 172 0016 1346     	 mov r3,r2
 173 0018 7B70     	 strb r3,[r7,#1]
 159:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetInput:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 160:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetInput:Invalid Channel Number", (channel < 4U));
 161:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetInput:Invalid A", XMC_ERU_ETL_CHECK_INPUT_A(input_a));
 162:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetInput:Invalid B", XMC_ERU_ETL_CHECK_INPUT_B(input_b));
 163:../Libraries/XMCLib/src/xmc_eru.c **** 
 164:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXISEL = (eru->EXISEL & ~((uint32_t)(ERU_EXISEL_EXS0A_Msk | ERU_EXISEL_EXS0B_Msk) << (channe
 174              	 .loc 1 164 0
 175 001a 7B68     	 ldr r3,[r7,#4]
 176 001c 1A68     	 ldr r2,[r3]
 177 001e FB78     	 ldrb r3,[r7,#3]
 178 0020 9B00     	 lsls r3,r3,#2
 179 0022 1946     	 mov r1,r3
 180 0024 0F23     	 movs r3,#15
 181 0026 8B40     	 lsls r3,r3,r1
 182 0028 DB43     	 mvns r3,r3
 183 002a 1A40     	 ands r2,r2,r3
 165:../Libraries/XMCLib/src/xmc_eru.c ****                 (((uint32_t)input_a | (uint32_t)(input_b << ERU_EXISEL_INPUT_BITSIZE))  << (channel
 184              	 .loc 1 165 0
 185 002c BB78     	 ldrb r3,[r7,#2]
 186 002e 7978     	 ldrb r1,[r7,#1]
 187 0030 8900     	 lsls r1,r1,#2
 188 0032 0B43     	 orrs r3,r3,r1
 189 0034 F978     	 ldrb r1,[r7,#3]
 190 0036 8900     	 lsls r1,r1,#2
 191 0038 8B40     	 lsls r3,r3,r1
 164:../Libraries/XMCLib/src/xmc_eru.c ****                 (((uint32_t)input_a | (uint32_t)(input_b << ERU_EXISEL_INPUT_BITSIZE))  << (channel
 192              	 .loc 1 164 0
 193 003a 1A43     	 orrs r2,r2,r3
 194 003c 7B68     	 ldr r3,[r7,#4]
 195 003e 1A60     	 str r2,[r3]
 166:../Libraries/XMCLib/src/xmc_eru.c **** }
 196              	 .loc 1 166 0
 197 0040 0C37     	 adds r7,r7,#12
 198              	.LCFI13:
 199              	 .cfi_def_cfa_offset 4
 200 0042 BD46     	 mov sp,r7
 201              	.LCFI14:
 202              	 .cfi_def_cfa_register 13
 203              	 
 204 0044 5DF8047B 	 ldr r7,[sp],#4
 205              	.LCFI15:
 206              	 .cfi_restore 7
 207              	 .cfi_def_cfa_offset 0
 208 0048 7047     	 bx lr
 209              	 .cfi_endproc
 210              	.LFE134:
 212 004a 00BF     	 .section .text.XMC_ERU_ETL_SetSource,"ax",%progbits
 213              	 .align 2
 214              	 .global XMC_ERU_ETL_SetSource
 215              	 .thumb
 216              	 .thumb_func
 218              	XMC_ERU_ETL_SetSource:
 219              	.LFB135:
 167:../Libraries/XMCLib/src/xmc_eru.c **** 
 168:../Libraries/XMCLib/src/xmc_eru.c **** /* Select input path combination along with polarity for event generation by setting (SS, NA, NB) b
 169:../Libraries/XMCLib/src/xmc_eru.c ****    EXICONx(x = [0 to 3]) register */
 170:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_SetSource(XMC_ERU_t *const eru,
 171:../Libraries/XMCLib/src/xmc_eru.c ****                           const uint8_t channel,
 172:../Libraries/XMCLib/src/xmc_eru.c ****                           const XMC_ERU_ETL_SOURCE_t source)
 173:../Libraries/XMCLib/src/xmc_eru.c **** {
 220              	 .loc 1 173 0
 221              	 .cfi_startproc
 222              	 
 223              	 
 224              	 
 225 0000 80B4     	 push {r7}
 226              	.LCFI16:
 227              	 .cfi_def_cfa_offset 4
 228              	 .cfi_offset 7,-4
 229 0002 83B0     	 sub sp,sp,#12
 230              	.LCFI17:
 231              	 .cfi_def_cfa_offset 16
 232 0004 00AF     	 add r7,sp,#0
 233              	.LCFI18:
 234              	 .cfi_def_cfa_register 7
 235 0006 7860     	 str r0,[r7,#4]
 236 0008 0B46     	 mov r3,r1
 237 000a FB70     	 strb r3,[r7,#3]
 238 000c 1346     	 mov r3,r2
 239 000e BB70     	 strb r3,[r7,#2]
 174:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetSource:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 175:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetSource:Invalid Channel Number", (channel < 4U));
 176:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetSource:Invalid Source", XMC_ERU_ETL_CHECK_EVENT_SOURCE(source));
 177:../Libraries/XMCLib/src/xmc_eru.c **** 
 178:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON_b[channel].SS = (uint8_t)source;
 240              	 .loc 1 178 0
 241 0010 FA78     	 ldrb r2,[r7,#3]
 242 0012 BB78     	 ldrb r3,[r7,#2]
 243 0014 03F00F03 	 and r3,r3,#15
 244 0018 D9B2     	 uxtb r1,r3
 245 001a 7B68     	 ldr r3,[r7,#4]
 246 001c 0432     	 adds r2,r2,#4
 247 001e 01F00F01 	 and r1,r1,#15
 248 0022 0902     	 lsls r1,r1,#8
 249 0024 53F82200 	 ldr r0,[r3,r2,lsl#2]
 250 0028 20F47060 	 bic r0,r0,#3840
 251 002c 0143     	 orrs r1,r1,r0
 252 002e 43F82210 	 str r1,[r3,r2,lsl#2]
 179:../Libraries/XMCLib/src/xmc_eru.c **** }
 253              	 .loc 1 179 0
 254 0032 0C37     	 adds r7,r7,#12
 255              	.LCFI19:
 256              	 .cfi_def_cfa_offset 4
 257 0034 BD46     	 mov sp,r7
 258              	.LCFI20:
 259              	 .cfi_def_cfa_register 13
 260              	 
 261 0036 5DF8047B 	 ldr r7,[sp],#4
 262              	.LCFI21:
 263              	 .cfi_restore 7
 264              	 .cfi_def_cfa_offset 0
 265 003a 7047     	 bx lr
 266              	 .cfi_endproc
 267              	.LFE135:
 269              	 .section .text.XMC_ERU_ETL_SetEdgeDetection,"ax",%progbits
 270              	 .align 2
 271              	 .global XMC_ERU_ETL_SetEdgeDetection
 272              	 .thumb
 273              	 .thumb_func
 275              	XMC_ERU_ETL_SetEdgeDetection:
 276              	.LFB136:
 180:../Libraries/XMCLib/src/xmc_eru.c **** 
 181:../Libraries/XMCLib/src/xmc_eru.c **** /* Configure event trigger edge/s by setting (RE, FE) bits of EXICONx(x = [0 to 3]) register.*/
 182:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_SetEdgeDetection(XMC_ERU_t *const eru,
 183:../Libraries/XMCLib/src/xmc_eru.c ****                                   const uint8_t channel,
 184:../Libraries/XMCLib/src/xmc_eru.c ****                                   const XMC_ERU_ETL_EDGE_DETECTION_t edge_detection)
 185:../Libraries/XMCLib/src/xmc_eru.c **** {
 277              	 .loc 1 185 0
 278              	 .cfi_startproc
 279              	 
 280              	 
 281              	 
 282 0000 80B4     	 push {r7}
 283              	.LCFI22:
 284              	 .cfi_def_cfa_offset 4
 285              	 .cfi_offset 7,-4
 286 0002 83B0     	 sub sp,sp,#12
 287              	.LCFI23:
 288              	 .cfi_def_cfa_offset 16
 289 0004 00AF     	 add r7,sp,#0
 290              	.LCFI24:
 291              	 .cfi_def_cfa_register 7
 292 0006 7860     	 str r0,[r7,#4]
 293 0008 0B46     	 mov r3,r1
 294 000a FB70     	 strb r3,[r7,#3]
 295 000c 1346     	 mov r3,r2
 296 000e BB70     	 strb r3,[r7,#2]
 186:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetEdgeDetection:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru));
 187:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetEdgeDetection:Invalid Channel Number", (channel < 4U));
 188:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetEdgeDetection:Invalid Trigger Edge", XMC_ERU_ETL_CHECK_TRIGGER_EDGE(ed
 189:../Libraries/XMCLib/src/xmc_eru.c **** 
 190:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON_b[channel].ED = (uint8_t)edge_detection;
 297              	 .loc 1 190 0
 298 0010 FA78     	 ldrb r2,[r7,#3]
 299 0012 BB78     	 ldrb r3,[r7,#2]
 300 0014 03F00303 	 and r3,r3,#3
 301 0018 D9B2     	 uxtb r1,r3
 302 001a 7B68     	 ldr r3,[r7,#4]
 303 001c 0432     	 adds r2,r2,#4
 304 001e 01F00301 	 and r1,r1,#3
 305 0022 8900     	 lsls r1,r1,#2
 306 0024 53F82200 	 ldr r0,[r3,r2,lsl#2]
 307 0028 20F00C00 	 bic r0,r0,#12
 308 002c 0143     	 orrs r1,r1,r0
 309 002e 43F82210 	 str r1,[r3,r2,lsl#2]
 191:../Libraries/XMCLib/src/xmc_eru.c **** }
 310              	 .loc 1 191 0
 311 0032 0C37     	 adds r7,r7,#12
 312              	.LCFI25:
 313              	 .cfi_def_cfa_offset 4
 314 0034 BD46     	 mov sp,r7
 315              	.LCFI26:
 316              	 .cfi_def_cfa_register 13
 317              	 
 318 0036 5DF8047B 	 ldr r7,[sp],#4
 319              	.LCFI27:
 320              	 .cfi_restore 7
 321              	 .cfi_def_cfa_offset 0
 322 003a 7047     	 bx lr
 323              	 .cfi_endproc
 324              	.LFE136:
 326              	 .section .text.XMC_ERU_ETL_SetStatusFlagMode,"ax",%progbits
 327              	 .align 2
 328              	 .global XMC_ERU_ETL_SetStatusFlagMode
 329              	 .thumb
 330              	 .thumb_func
 332              	XMC_ERU_ETL_SetStatusFlagMode:
 333              	.LFB137:
 192:../Libraries/XMCLib/src/xmc_eru.c **** 
 193:../Libraries/XMCLib/src/xmc_eru.c **** /* Set the status flag bit(FL) in EXICONx(x = [0 to 3]). */
 194:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_SetStatusFlagMode(XMC_ERU_t *const eru,
 195:../Libraries/XMCLib/src/xmc_eru.c ****                                    const uint8_t channel,
 196:../Libraries/XMCLib/src/xmc_eru.c ****                                    const XMC_ERU_ETL_STATUS_FLAG_MODE_t mode)
 197:../Libraries/XMCLib/src/xmc_eru.c **** {
 334              	 .loc 1 197 0
 335              	 .cfi_startproc
 336              	 
 337              	 
 338              	 
 339 0000 80B4     	 push {r7}
 340              	.LCFI28:
 341              	 .cfi_def_cfa_offset 4
 342              	 .cfi_offset 7,-4
 343 0002 83B0     	 sub sp,sp,#12
 344              	.LCFI29:
 345              	 .cfi_def_cfa_offset 16
 346 0004 00AF     	 add r7,sp,#0
 347              	.LCFI30:
 348              	 .cfi_def_cfa_register 7
 349 0006 7860     	 str r0,[r7,#4]
 350 0008 0B46     	 mov r3,r1
 351 000a FB70     	 strb r3,[r7,#3]
 352 000c 1346     	 mov r3,r2
 353 000e BB70     	 strb r3,[r7,#2]
 198:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetStatusFlagMode:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru))
 199:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetStatusFlagMode:Invalid Channel Number", (channel < 4U));
 200:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_SetStatusFlagMode:Invalid Status Flag Mode", XMC_ERU_ETL_CHECK_STATUS_FLA
 201:../Libraries/XMCLib/src/xmc_eru.c **** 
 202:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON_b[channel].LD = (uint8_t)mode;
 354              	 .loc 1 202 0
 355 0010 FA78     	 ldrb r2,[r7,#3]
 356 0012 BB78     	 ldrb r3,[r7,#2]
 357 0014 03F00103 	 and r3,r3,#1
 358 0018 D9B2     	 uxtb r1,r3
 359 001a 7B68     	 ldr r3,[r7,#4]
 360 001c 0432     	 adds r2,r2,#4
 361 001e 01F00101 	 and r1,r1,#1
 362 0022 4900     	 lsls r1,r1,#1
 363 0024 53F82200 	 ldr r0,[r3,r2,lsl#2]
 364 0028 20F00200 	 bic r0,r0,#2
 365 002c 0143     	 orrs r1,r1,r0
 366 002e 43F82210 	 str r1,[r3,r2,lsl#2]
 203:../Libraries/XMCLib/src/xmc_eru.c **** }
 367              	 .loc 1 203 0
 368 0032 0C37     	 adds r7,r7,#12
 369              	.LCFI31:
 370              	 .cfi_def_cfa_offset 4
 371 0034 BD46     	 mov sp,r7
 372              	.LCFI32:
 373              	 .cfi_def_cfa_register 13
 374              	 
 375 0036 5DF8047B 	 ldr r7,[sp],#4
 376              	.LCFI33:
 377              	 .cfi_restore 7
 378              	 .cfi_def_cfa_offset 0
 379 003a 7047     	 bx lr
 380              	 .cfi_endproc
 381              	.LFE137:
 383              	 .section .text.XMC_ERU_ETL_EnableOutputTrigger,"ax",%progbits
 384              	 .align 2
 385              	 .global XMC_ERU_ETL_EnableOutputTrigger
 386              	 .thumb
 387              	 .thumb_func
 389              	XMC_ERU_ETL_EnableOutputTrigger:
 390              	.LFB138:
 204:../Libraries/XMCLib/src/xmc_eru.c **** 
 205:../Libraries/XMCLib/src/xmc_eru.c **** /* Configure which Channel of OGUy(Output gating unit y = [0 to 3]) to be mapped by the trigger pul
 206:../Libraries/XMCLib/src/xmc_eru.c ****  * ETLx(Event Trigger Logic, x = [0 to 3]) by setting (OCS and PE) bit fields. */
 207:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_EnableOutputTrigger(XMC_ERU_t *const eru,
 208:../Libraries/XMCLib/src/xmc_eru.c ****                                      const uint8_t channel,
 209:../Libraries/XMCLib/src/xmc_eru.c ****                                      const XMC_ERU_ETL_OUTPUT_TRIGGER_CHANNEL_t trigger)
 210:../Libraries/XMCLib/src/xmc_eru.c **** {
 391              	 .loc 1 210 0
 392              	 .cfi_startproc
 393              	 
 394              	 
 395              	 
 396 0000 80B4     	 push {r7}
 397              	.LCFI34:
 398              	 .cfi_def_cfa_offset 4
 399              	 .cfi_offset 7,-4
 400 0002 83B0     	 sub sp,sp,#12
 401              	.LCFI35:
 402              	 .cfi_def_cfa_offset 16
 403 0004 00AF     	 add r7,sp,#0
 404              	.LCFI36:
 405              	 .cfi_def_cfa_register 7
 406 0006 7860     	 str r0,[r7,#4]
 407 0008 0B46     	 mov r3,r1
 408 000a FB70     	 strb r3,[r7,#3]
 409 000c 1346     	 mov r3,r2
 410 000e BB70     	 strb r3,[r7,#2]
 211:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_EnableOutputTrigger:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(eru
 212:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_EnableOutputTrigger:Invalid Channel Number", (channel < 4U));
 213:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_EnableOutputTrigger:Invalid Output Channel", XMC_ERU_ETL_CHECK_TRIGGER_CH
 214:../Libraries/XMCLib/src/xmc_eru.c **** 
 215:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON_b[channel].OCS = (uint8_t)trigger;
 411              	 .loc 1 215 0
 412 0010 FA78     	 ldrb r2,[r7,#3]
 413 0012 BB78     	 ldrb r3,[r7,#2]
 414 0014 03F00703 	 and r3,r3,#7
 415 0018 D9B2     	 uxtb r1,r3
 416 001a 7B68     	 ldr r3,[r7,#4]
 417 001c 0432     	 adds r2,r2,#4
 418 001e 01F00701 	 and r1,r1,#7
 419 0022 0901     	 lsls r1,r1,#4
 420 0024 53F82200 	 ldr r0,[r3,r2,lsl#2]
 421 0028 20F07000 	 bic r0,r0,#112
 422 002c 0143     	 orrs r1,r1,r0
 423 002e 43F82210 	 str r1,[r3,r2,lsl#2]
 216:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON_b[channel].PE = (uint8_t)true;
 424              	 .loc 1 216 0
 425 0032 FA78     	 ldrb r2,[r7,#3]
 426 0034 7B68     	 ldr r3,[r7,#4]
 427 0036 0432     	 adds r2,r2,#4
 428 0038 53F82210 	 ldr r1,[r3,r2,lsl#2]
 429 003c 41F00101 	 orr r1,r1,#1
 430 0040 43F82210 	 str r1,[r3,r2,lsl#2]
 217:../Libraries/XMCLib/src/xmc_eru.c **** }
 431              	 .loc 1 217 0
 432 0044 0C37     	 adds r7,r7,#12
 433              	.LCFI37:
 434              	 .cfi_def_cfa_offset 4
 435 0046 BD46     	 mov sp,r7
 436              	.LCFI38:
 437              	 .cfi_def_cfa_register 13
 438              	 
 439 0048 5DF8047B 	 ldr r7,[sp],#4
 440              	.LCFI39:
 441              	 .cfi_restore 7
 442              	 .cfi_def_cfa_offset 0
 443 004c 7047     	 bx lr
 444              	 .cfi_endproc
 445              	.LFE138:
 447 004e 00BF     	 .section .text.XMC_ERU_ETL_DisableOutputTrigger,"ax",%progbits
 448              	 .align 2
 449              	 .global XMC_ERU_ETL_DisableOutputTrigger
 450              	 .thumb
 451              	 .thumb_func
 453              	XMC_ERU_ETL_DisableOutputTrigger:
 454              	.LFB139:
 218:../Libraries/XMCLib/src/xmc_eru.c **** 
 219:../Libraries/XMCLib/src/xmc_eru.c **** /* Disables the trigger pulse generation by clearing the (PE) of the EXICONx(x = [0 to 3]). */
 220:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_ETL_DisableOutputTrigger(XMC_ERU_t *const eru, const uint8_t channel)
 221:../Libraries/XMCLib/src/xmc_eru.c **** {
 455              	 .loc 1 221 0
 456              	 .cfi_startproc
 457              	 
 458              	 
 459              	 
 460 0000 80B4     	 push {r7}
 461              	.LCFI40:
 462              	 .cfi_def_cfa_offset 4
 463              	 .cfi_offset 7,-4
 464 0002 83B0     	 sub sp,sp,#12
 465              	.LCFI41:
 466              	 .cfi_def_cfa_offset 16
 467 0004 00AF     	 add r7,sp,#0
 468              	.LCFI42:
 469              	 .cfi_def_cfa_register 7
 470 0006 7860     	 str r0,[r7,#4]
 471 0008 0B46     	 mov r3,r1
 472 000a FB70     	 strb r3,[r7,#3]
 222:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_DisableOutputTrigger:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(er
 223:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_ETL_DisableOutputTrigger:Invalid Channel Number", (channel < 4U));
 224:../Libraries/XMCLib/src/xmc_eru.c **** 
 225:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXICON_b[channel].PE = false;
 473              	 .loc 1 225 0
 474 000c FA78     	 ldrb r2,[r7,#3]
 475 000e 7B68     	 ldr r3,[r7,#4]
 476 0010 0432     	 adds r2,r2,#4
 477 0012 53F82210 	 ldr r1,[r3,r2,lsl#2]
 478 0016 21F00101 	 bic r1,r1,#1
 479 001a 43F82210 	 str r1,[r3,r2,lsl#2]
 226:../Libraries/XMCLib/src/xmc_eru.c **** }
 480              	 .loc 1 226 0
 481 001e 0C37     	 adds r7,r7,#12
 482              	.LCFI43:
 483              	 .cfi_def_cfa_offset 4
 484 0020 BD46     	 mov sp,r7
 485              	.LCFI44:
 486              	 .cfi_def_cfa_register 13
 487              	 
 488 0022 5DF8047B 	 ldr r7,[sp],#4
 489              	.LCFI45:
 490              	 .cfi_restore 7
 491              	 .cfi_def_cfa_offset 0
 492 0026 7047     	 bx lr
 493              	 .cfi_endproc
 494              	.LFE139:
 496              	 .section .text.XMC_ERU_OGU_EnablePatternDetection,"ax",%progbits
 497              	 .align 2
 498              	 .global XMC_ERU_OGU_EnablePatternDetection
 499              	 .thumb
 500              	 .thumb_func
 502              	XMC_ERU_OGU_EnablePatternDetection:
 503              	.LFB140:
 227:../Libraries/XMCLib/src/xmc_eru.c **** 
 228:../Libraries/XMCLib/src/xmc_eru.c **** /* Configures ERU_ETLx(x = [0 to 3]) for pattern match detection by setting IPENx(x = [0 to 3) and 
 229:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_OGU_EnablePatternDetection(XMC_ERU_t *const eru,
 230:../Libraries/XMCLib/src/xmc_eru.c ****                                         const uint8_t channel,
 231:../Libraries/XMCLib/src/xmc_eru.c ****                                         const XMC_ERU_OGU_PATTERN_DETECTION_INPUT_t input)
 232:../Libraries/XMCLib/src/xmc_eru.c **** {
 504              	 .loc 1 232 0
 505              	 .cfi_startproc
 506              	 
 507              	 
 508              	 
 509 0000 80B4     	 push {r7}
 510              	.LCFI46:
 511              	 .cfi_def_cfa_offset 4
 512              	 .cfi_offset 7,-4
 513 0002 83B0     	 sub sp,sp,#12
 514              	.LCFI47:
 515              	 .cfi_def_cfa_offset 16
 516 0004 00AF     	 add r7,sp,#0
 517              	.LCFI48:
 518              	 .cfi_def_cfa_register 7
 519 0006 7860     	 str r0,[r7,#4]
 520 0008 0B46     	 mov r3,r1
 521 000a FB70     	 strb r3,[r7,#3]
 522 000c 1346     	 mov r3,r2
 523 000e BB70     	 strb r3,[r7,#2]
 233:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePatternDetection:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(
 234:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePatternDetection:Invalid Channel Number", (channel < 4U));
 235:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePatternDetection:Invalid Pattern input", XMC_ERU_OGU_CHECK_PATTERN_
 236:../Libraries/XMCLib/src/xmc_eru.c **** 
 237:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON_b[channel].IPEN = (uint8_t)input;
 524              	 .loc 1 237 0
 525 0010 FA78     	 ldrb r2,[r7,#3]
 526 0012 BB78     	 ldrb r3,[r7,#2]
 527 0014 03F00F03 	 and r3,r3,#15
 528 0018 D9B2     	 uxtb r1,r3
 529 001a 7B68     	 ldr r3,[r7,#4]
 530 001c 0832     	 adds r2,r2,#8
 531 001e 01F00F01 	 and r1,r1,#15
 532 0022 0903     	 lsls r1,r1,#12
 533 0024 53F82200 	 ldr r0,[r3,r2,lsl#2]
 534 0028 20F47040 	 bic r0,r0,#61440
 535 002c 0143     	 orrs r1,r1,r0
 536 002e 43F82210 	 str r1,[r3,r2,lsl#2]
 238:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON_b[channel].GEEN = true;
 537              	 .loc 1 238 0
 538 0032 FA78     	 ldrb r2,[r7,#3]
 539 0034 7B68     	 ldr r3,[r7,#4]
 540 0036 0832     	 adds r2,r2,#8
 541 0038 53F82210 	 ldr r1,[r3,r2,lsl#2]
 542 003c 41F00401 	 orr r1,r1,#4
 543 0040 43F82210 	 str r1,[r3,r2,lsl#2]
 239:../Libraries/XMCLib/src/xmc_eru.c **** }
 544              	 .loc 1 239 0
 545 0044 0C37     	 adds r7,r7,#12
 546              	.LCFI49:
 547              	 .cfi_def_cfa_offset 4
 548 0046 BD46     	 mov sp,r7
 549              	.LCFI50:
 550              	 .cfi_def_cfa_register 13
 551              	 
 552 0048 5DF8047B 	 ldr r7,[sp],#4
 553              	.LCFI51:
 554              	 .cfi_restore 7
 555              	 .cfi_def_cfa_offset 0
 556 004c 7047     	 bx lr
 557              	 .cfi_endproc
 558              	.LFE140:
 560 004e 00BF     	 .section .text.XMC_ERU_OGU_DisablePatternDetection,"ax",%progbits
 561              	 .align 2
 562              	 .global XMC_ERU_OGU_DisablePatternDetection
 563              	 .thumb
 564              	 .thumb_func
 566              	XMC_ERU_OGU_DisablePatternDetection:
 567              	.LFB141:
 240:../Libraries/XMCLib/src/xmc_eru.c **** 
 241:../Libraries/XMCLib/src/xmc_eru.c **** /* Disable the pattern detection by clearing (GEEN) bit. */
 242:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_OGU_DisablePatternDetection(XMC_ERU_t *const eru, const uint8_t channel)
 243:../Libraries/XMCLib/src/xmc_eru.c **** {
 568              	 .loc 1 243 0
 569              	 .cfi_startproc
 570              	 
 571              	 
 572              	 
 573 0000 80B4     	 push {r7}
 574              	.LCFI52:
 575              	 .cfi_def_cfa_offset 4
 576              	 .cfi_offset 7,-4
 577 0002 83B0     	 sub sp,sp,#12
 578              	.LCFI53:
 579              	 .cfi_def_cfa_offset 16
 580 0004 00AF     	 add r7,sp,#0
 581              	.LCFI54:
 582              	 .cfi_def_cfa_register 7
 583 0006 7860     	 str r0,[r7,#4]
 584 0008 0B46     	 mov r3,r1
 585 000a FB70     	 strb r3,[r7,#3]
 244:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_DisablePatternDetection:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR
 245:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_DisablePatternDetection:Invalid Channel Number", (channel < 4U));
 246:../Libraries/XMCLib/src/xmc_eru.c **** 
 247:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON_b[channel].GEEN = false;
 586              	 .loc 1 247 0
 587 000c FA78     	 ldrb r2,[r7,#3]
 588 000e 7B68     	 ldr r3,[r7,#4]
 589 0010 0832     	 adds r2,r2,#8
 590 0012 53F82210 	 ldr r1,[r3,r2,lsl#2]
 591 0016 21F00401 	 bic r1,r1,#4
 592 001a 43F82210 	 str r1,[r3,r2,lsl#2]
 248:../Libraries/XMCLib/src/xmc_eru.c **** }
 593              	 .loc 1 248 0
 594 001e 0C37     	 adds r7,r7,#12
 595              	.LCFI55:
 596              	 .cfi_def_cfa_offset 4
 597 0020 BD46     	 mov sp,r7
 598              	.LCFI56:
 599              	 .cfi_def_cfa_register 13
 600              	 
 601 0022 5DF8047B 	 ldr r7,[sp],#4
 602              	.LCFI57:
 603              	 .cfi_restore 7
 604              	 .cfi_def_cfa_offset 0
 605 0026 7047     	 bx lr
 606              	 .cfi_endproc
 607              	.LFE141:
 609              	 .section .text.XMC_ERU_OGU_EnablePeripheralTrigger,"ax",%progbits
 610              	 .align 2
 611              	 .global XMC_ERU_OGU_EnablePeripheralTrigger
 612              	 .thumb
 613              	 .thumb_func
 615              	XMC_ERU_OGU_EnablePeripheralTrigger:
 616              	.LFB142:
 249:../Libraries/XMCLib/src/xmc_eru.c **** 
 250:../Libraries/XMCLib/src/xmc_eru.c **** /* Configures peripheral trigger input, by setting (ISS) bit. */
 251:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_OGU_EnablePeripheralTrigger(XMC_ERU_t *const eru,
 252:../Libraries/XMCLib/src/xmc_eru.c ****                                          const uint8_t channel,
 253:../Libraries/XMCLib/src/xmc_eru.c ****                                          const XMC_ERU_OGU_PERIPHERAL_TRIGGER_t peripheral_trigger)
 254:../Libraries/XMCLib/src/xmc_eru.c **** {
 617              	 .loc 1 254 0
 618              	 .cfi_startproc
 619              	 
 620              	 
 621              	 
 622 0000 80B4     	 push {r7}
 623              	.LCFI58:
 624              	 .cfi_def_cfa_offset 4
 625              	 .cfi_offset 7,-4
 626 0002 83B0     	 sub sp,sp,#12
 627              	.LCFI59:
 628              	 .cfi_def_cfa_offset 16
 629 0004 00AF     	 add r7,sp,#0
 630              	.LCFI60:
 631              	 .cfi_def_cfa_register 7
 632 0006 7860     	 str r0,[r7,#4]
 633 0008 0B46     	 mov r3,r1
 634 000a FB70     	 strb r3,[r7,#3]
 635 000c 1346     	 mov r3,r2
 636 000e BB70     	 strb r3,[r7,#2]
 255:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePeripheralTrigger:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR
 256:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePeripheralTrigger:Invalid Channel Number", (channel < 4U));
 257:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_EnablePeripheralTrigger:Invalid Peripheral Trigger Input", 
 258:../Libraries/XMCLib/src/xmc_eru.c ****               XMC_ERU_OGU_CHECK_PERIPHERAL_TRIGGER(peripheral_trigger));
 259:../Libraries/XMCLib/src/xmc_eru.c **** 
 260:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON_b[channel].ISS = (uint8_t)peripheral_trigger;
 637              	 .loc 1 260 0
 638 0010 FA78     	 ldrb r2,[r7,#3]
 639 0012 BB78     	 ldrb r3,[r7,#2]
 640 0014 03F00303 	 and r3,r3,#3
 641 0018 D9B2     	 uxtb r1,r3
 642 001a 7B68     	 ldr r3,[r7,#4]
 643 001c 0832     	 adds r2,r2,#8
 644 001e 01F00301 	 and r1,r1,#3
 645 0022 53F82200 	 ldr r0,[r3,r2,lsl#2]
 646 0026 20F00300 	 bic r0,r0,#3
 647 002a 0143     	 orrs r1,r1,r0
 648 002c 43F82210 	 str r1,[r3,r2,lsl#2]
 261:../Libraries/XMCLib/src/xmc_eru.c **** }
 649              	 .loc 1 261 0
 650 0030 0C37     	 adds r7,r7,#12
 651              	.LCFI61:
 652              	 .cfi_def_cfa_offset 4
 653 0032 BD46     	 mov sp,r7
 654              	.LCFI62:
 655              	 .cfi_def_cfa_register 13
 656              	 
 657 0034 5DF8047B 	 ldr r7,[sp],#4
 658              	.LCFI63:
 659              	 .cfi_restore 7
 660              	 .cfi_def_cfa_offset 0
 661 0038 7047     	 bx lr
 662              	 .cfi_endproc
 663              	.LFE142:
 665 003a 00BF     	 .section .text.XMC_ERU_OGU_DisablePeripheralTrigger,"ax",%progbits
 666              	 .align 2
 667              	 .global XMC_ERU_OGU_DisablePeripheralTrigger
 668              	 .thumb
 669              	 .thumb_func
 671              	XMC_ERU_OGU_DisablePeripheralTrigger:
 672              	.LFB143:
 262:../Libraries/XMCLib/src/xmc_eru.c **** 
 263:../Libraries/XMCLib/src/xmc_eru.c **** /* Disables event generation based on peripheral trigger by clearing (ISS) bit. */
 264:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_OGU_DisablePeripheralTrigger(XMC_ERU_t *const eru,
 265:../Libraries/XMCLib/src/xmc_eru.c ****                                           const uint8_t channel)
 266:../Libraries/XMCLib/src/xmc_eru.c **** {
 673              	 .loc 1 266 0
 674              	 .cfi_startproc
 675              	 
 676              	 
 677              	 
 678 0000 80B4     	 push {r7}
 679              	.LCFI64:
 680              	 .cfi_def_cfa_offset 4
 681              	 .cfi_offset 7,-4
 682 0002 83B0     	 sub sp,sp,#12
 683              	.LCFI65:
 684              	 .cfi_def_cfa_offset 16
 685 0004 00AF     	 add r7,sp,#0
 686              	.LCFI66:
 687              	 .cfi_def_cfa_register 7
 688 0006 7860     	 str r0,[r7,#4]
 689 0008 0B46     	 mov r3,r1
 690 000a FB70     	 strb r3,[r7,#3]
 267:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_DisablePeripheralTrigger:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PT
 268:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_DisablePeripheralTrigger:Invalid Channel Number", (channel < 4U));
 269:../Libraries/XMCLib/src/xmc_eru.c **** 
 270:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON_b[channel].ISS = (uint8_t)0;
 691              	 .loc 1 270 0
 692 000c FA78     	 ldrb r2,[r7,#3]
 693 000e 7B68     	 ldr r3,[r7,#4]
 694 0010 0832     	 adds r2,r2,#8
 695 0012 53F82210 	 ldr r1,[r3,r2,lsl#2]
 696 0016 21F00301 	 bic r1,r1,#3
 697 001a 43F82210 	 str r1,[r3,r2,lsl#2]
 271:../Libraries/XMCLib/src/xmc_eru.c **** }
 698              	 .loc 1 271 0
 699 001e 0C37     	 adds r7,r7,#12
 700              	.LCFI67:
 701              	 .cfi_def_cfa_offset 4
 702 0020 BD46     	 mov sp,r7
 703              	.LCFI68:
 704              	 .cfi_def_cfa_register 13
 705              	 
 706 0022 5DF8047B 	 ldr r7,[sp],#4
 707              	.LCFI69:
 708              	 .cfi_restore 7
 709              	 .cfi_def_cfa_offset 0
 710 0026 7047     	 bx lr
 711              	 .cfi_endproc
 712              	.LFE143:
 714              	 .section .text.XMC_ERU_OGU_SetServiceRequestMode,"ax",%progbits
 715              	 .align 2
 716              	 .global XMC_ERU_OGU_SetServiceRequestMode
 717              	 .thumb
 718              	 .thumb_func
 720              	XMC_ERU_OGU_SetServiceRequestMode:
 721              	.LFB144:
 272:../Libraries/XMCLib/src/xmc_eru.c **** 
 273:../Libraries/XMCLib/src/xmc_eru.c **** /* Configures the gating scheme for service request generation by setting (GP) bit. */
 274:../Libraries/XMCLib/src/xmc_eru.c **** void XMC_ERU_OGU_SetServiceRequestMode(XMC_ERU_t *const eru,
 275:../Libraries/XMCLib/src/xmc_eru.c ****                                        const uint8_t channel,
 276:../Libraries/XMCLib/src/xmc_eru.c ****                                        const XMC_ERU_OGU_SERVICE_REQUEST_t mode)
 277:../Libraries/XMCLib/src/xmc_eru.c **** {
 722              	 .loc 1 277 0
 723              	 .cfi_startproc
 724              	 
 725              	 
 726              	 
 727 0000 80B4     	 push {r7}
 728              	.LCFI70:
 729              	 .cfi_def_cfa_offset 4
 730              	 .cfi_offset 7,-4
 731 0002 83B0     	 sub sp,sp,#12
 732              	.LCFI71:
 733              	 .cfi_def_cfa_offset 16
 734 0004 00AF     	 add r7,sp,#0
 735              	.LCFI72:
 736              	 .cfi_def_cfa_register 7
 737 0006 7860     	 str r0,[r7,#4]
 738 0008 0B46     	 mov r3,r1
 739 000a FB70     	 strb r3,[r7,#3]
 740 000c 1346     	 mov r3,r2
 741 000e BB70     	 strb r3,[r7,#2]
 278:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_SetServiceRequestMode:Invalid Module Pointer", XMC_ERU_CHECK_MODULE_PTR(e
 279:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_SetServiceRequestMode:Invalid Channel Number", (channel < 4U));
 280:../Libraries/XMCLib/src/xmc_eru.c ****   XMC_ASSERT("XMC_ERU_OGU_SetServiceRequestMode:Invalid Service Request Mode", XMC_ERU_OGU_CHECK_SE
 281:../Libraries/XMCLib/src/xmc_eru.c **** 
 282:../Libraries/XMCLib/src/xmc_eru.c ****   eru->EXOCON_b[channel].GP = (uint8_t)mode;
 742              	 .loc 1 282 0
 743 0010 FA78     	 ldrb r2,[r7,#3]
 744 0012 BB78     	 ldrb r3,[r7,#2]
 745 0014 03F00303 	 and r3,r3,#3
 746 0018 D9B2     	 uxtb r1,r3
 747 001a 7B68     	 ldr r3,[r7,#4]
 748 001c 0832     	 adds r2,r2,#8
 749 001e 01F00301 	 and r1,r1,#3
 750 0022 0901     	 lsls r1,r1,#4
 751 0024 53F82200 	 ldr r0,[r3,r2,lsl#2]
 752 0028 20F03000 	 bic r0,r0,#48
 753 002c 0143     	 orrs r1,r1,r0
 754 002e 43F82210 	 str r1,[r3,r2,lsl#2]
 283:../Libraries/XMCLib/src/xmc_eru.c **** 
 284:../Libraries/XMCLib/src/xmc_eru.c **** }
 755              	 .loc 1 284 0
 756 0032 0C37     	 adds r7,r7,#12
 757              	.LCFI73:
 758              	 .cfi_def_cfa_offset 4
 759 0034 BD46     	 mov sp,r7
 760              	.LCFI74:
 761              	 .cfi_def_cfa_register 13
 762              	 
 763 0036 5DF8047B 	 ldr r7,[sp],#4
 764              	.LCFI75:
 765              	 .cfi_restore 7
 766              	 .cfi_def_cfa_offset 0
 767 003a 7047     	 bx lr
 768              	 .cfi_endproc
 769              	.LFE144:
 771              	 .text
 772              	.Letext0:
 773              	 .file 2 "d:\\dave-4.1.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 774              	 .file 3 "d:\\dave-4.1.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 775              	 .file 4 "D:\\Naukowe\\BLDC_workspace\\PWM_from_ex\\Libraries\\XMCLib\\inc/xmc_eru.h"
 776              	 .file 5 "D:\\Naukowe\\BLDC_workspace\\PWM_from_ex/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_eru.c
    {standard input}:20     .text.XMC_ERU_ETL_Init:00000000 $t
    {standard input}:25     .text.XMC_ERU_ETL_Init:00000000 XMC_ERU_ETL_Init
    {standard input}:93     .text.XMC_ERU_OGU_Init:00000000 $t
    {standard input}:98     .text.XMC_ERU_OGU_Init:00000000 XMC_ERU_OGU_Init
    {standard input}:142    .text.XMC_ERU_ETL_SetInput:00000000 $t
    {standard input}:147    .text.XMC_ERU_ETL_SetInput:00000000 XMC_ERU_ETL_SetInput
    {standard input}:213    .text.XMC_ERU_ETL_SetSource:00000000 $t
    {standard input}:218    .text.XMC_ERU_ETL_SetSource:00000000 XMC_ERU_ETL_SetSource
    {standard input}:270    .text.XMC_ERU_ETL_SetEdgeDetection:00000000 $t
    {standard input}:275    .text.XMC_ERU_ETL_SetEdgeDetection:00000000 XMC_ERU_ETL_SetEdgeDetection
    {standard input}:327    .text.XMC_ERU_ETL_SetStatusFlagMode:00000000 $t
    {standard input}:332    .text.XMC_ERU_ETL_SetStatusFlagMode:00000000 XMC_ERU_ETL_SetStatusFlagMode
    {standard input}:384    .text.XMC_ERU_ETL_EnableOutputTrigger:00000000 $t
    {standard input}:389    .text.XMC_ERU_ETL_EnableOutputTrigger:00000000 XMC_ERU_ETL_EnableOutputTrigger
    {standard input}:448    .text.XMC_ERU_ETL_DisableOutputTrigger:00000000 $t
    {standard input}:453    .text.XMC_ERU_ETL_DisableOutputTrigger:00000000 XMC_ERU_ETL_DisableOutputTrigger
    {standard input}:497    .text.XMC_ERU_OGU_EnablePatternDetection:00000000 $t
    {standard input}:502    .text.XMC_ERU_OGU_EnablePatternDetection:00000000 XMC_ERU_OGU_EnablePatternDetection
    {standard input}:561    .text.XMC_ERU_OGU_DisablePatternDetection:00000000 $t
    {standard input}:566    .text.XMC_ERU_OGU_DisablePatternDetection:00000000 XMC_ERU_OGU_DisablePatternDetection
    {standard input}:610    .text.XMC_ERU_OGU_EnablePeripheralTrigger:00000000 $t
    {standard input}:615    .text.XMC_ERU_OGU_EnablePeripheralTrigger:00000000 XMC_ERU_OGU_EnablePeripheralTrigger
    {standard input}:666    .text.XMC_ERU_OGU_DisablePeripheralTrigger:00000000 $t
    {standard input}:671    .text.XMC_ERU_OGU_DisablePeripheralTrigger:00000000 XMC_ERU_OGU_DisablePeripheralTrigger
    {standard input}:715    .text.XMC_ERU_OGU_SetServiceRequestMode:00000000 $t
    {standard input}:720    .text.XMC_ERU_OGU_SetServiceRequestMode:00000000 XMC_ERU_OGU_SetServiceRequestMode
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_ERU_Enable
