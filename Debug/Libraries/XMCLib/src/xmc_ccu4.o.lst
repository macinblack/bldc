   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_ccu4.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU4_StartPrescaler,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU4_StartPrescaler:
  25              	.LFB130:
  26              	 .file 1 "D:\\Naukowe\\BLDC_workspace\\PWM_from_ex\\Libraries\\XMCLib\\inc/xmc_ccu4.h"
   1:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
   2:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @file xmc_ccu4.h
   3:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @date 2015-10-27
   4:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
   5:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @cond
   6:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
   7:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMClib v2.1.2 - XMC Peripheral Driver Library 
   8:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
   9:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Copyright (c) 2015, Infineon Technologies AG
  10:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * All rights reserved.                        
  11:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                                             
  12:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * following conditions are met:   
  14:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                                                                              
  15:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * disclaimer.                        
  17:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
  18:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
  21:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * products derived from this software without specific prior written permission.                  
  23:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                                                                              
  24:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                                                                              
  32:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
  35:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  36:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Change History
  37:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * --------------
  38:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  39:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 2015-02-20:
  40:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - Initial <br>
  41:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - Documentation updates <br>
  42:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  43:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 2015-06-20:
  44:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  46:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 2015-07-22:
  47:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  48:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  49:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 2015-08-17:
  50:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  51:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t enum item names are updated according to the guideli
  52:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - XMC_CCU4_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  53:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  54:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 2015-09-29:
  55:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - In XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  56:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *       settings.
  57:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  58:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 2015-10-07:
  59:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_GetEvent() is made as inline.
  60:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - XMC_CCU4_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU4_SLICE_EnableMultipleEvents(
  61:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *       XMC_CCU4_SLICE_DisableMultipleEvents() APIs.
  62:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *     - DOC updates for the newly added APIs.
  63:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
  64:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @endcond
  65:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
  66:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
  67:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #ifndef XMC_CCU4_H
  68:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #define XMC_CCU4_H
  69:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  
  70:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**************************************************************************************************
  71:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * HEADER FILES
  72:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
  73:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #include "xmc_common.h"
  74:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU40)
  75:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
  76:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if UC_FAMILY == XMC1
  77:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  #include "xmc1_ccu4_map.h"
  78:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
  79:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
  80:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if UC_FAMILY == XMC4
  81:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  #include "xmc4_ccu4_map.h"
  82:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
  83:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
  84:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
  85:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @addtogroup XMClib XMC Peripheral Library
  86:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @{
  87:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
  88:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  
  89:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
  90:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @addtogroup CCU4
  91:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @brief Capture Compare Unit 4 (CCU4) low level driver for XMC family of microcontrollers<br>
  92:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
  93:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The CCU4 peripheral is a major component for systems that need general purpose timers for signal
  94:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * monitoring/conditioning and Pulse Width Modulation (PWM) signal generation. Power electronic con
  95:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * switched mode power supplies or interruptible power supplies, can easily be implemented with the
  96:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CCU4 peripheral.\n
  97:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Each CCU4 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC4y (where
  98:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * timer slice can work in compare mode or in capture mode.
  99:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 100:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * APIs provided in this file cover the following functional blocks of CCU4:\n
 101:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 102:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par Note:
 103:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU4_SLICE_)
 104:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU4_)
 105:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 106:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par Timer(Compare mode) configuration:
 107:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_COMPARE_CONFIG_t and
 108:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CompareInit().
 109:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 110:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It can be used to:
 111:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Start and Stop the timer. (XMC_CCU4_SLICE_StartTimer(), XMC_CCU4_SLICE_StopTimer())
 112:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU4_SLICE_SetTimerPe
 113:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetTimerCompareMatch(), XMC_CCU4_SLICE_SetPrescaler(), XMC_CCU4_SLICE_SetDithe
 114:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_SetPassiveLevel())
 115:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU4_SLICE_EnableMultiChannelMode())
 116:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
 117:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par Capture configuration:
 118:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_CAPTURE_CONFIG_t and
 119:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * function XMC_CCU4_SLICE_CaptureInit().
 120:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 121:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It can be used to:
 122:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Configure the capture functionality. (XMC_CCU4_SLICE_Capture0Config(), XMC_CCU4_SLICE_Capture
 123:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 124:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    (XMC_CCU4_SLICE_GetCaptureRegisterValue())
 125:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
 126:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par Function/Event configuration:
 127:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This section of the LLD provides the configuration structure XMC_CCU4_SLICE_EVENT_CONFIG_t.\n
 128:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
 129:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It can be used to:
 130:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Enable and Disable the events. (XMC_CCU4_SLICE_EnableEvent(), XMC_CCU4_SLICE_DisableEvent())
 131:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU4_SLICE_StartConfig(), XMC_C
 132:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU4_SLICE_ModulationConfig(), 
 133:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_LoadConfig(), XMC_CCU4_SLICE_GateConfig())
 134:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU4_SLICE_Directi
 135:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# Count the external events.(XMC_CCU4_SLICE_CountConfig())
 136:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU4_SLICE_EnableTrap(), XMC_CCU4
 137:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    XMC_CCU4_SLICE_TrapConfig())
 138:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 139:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par Interrupt configuration:
 140:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 141:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @{
 142:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 143:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  
 144:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**************************************************************************************************
 145:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * MACROS
 146:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
 147:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /* Macro to check if the interrupt enum passed is valid */
 148:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #define XMC_CCU4_SLICE_CHECK_INTERRUPT(interrupt) \
 149:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****     ((interrupt == XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 150:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH)              || \
 151:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP)  || \
 152:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN)|| \
 153:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT0)                 || \
 154:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT1)                 || \
 155:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_EVENT2)                 || \
 156:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****      (interrupt == XMC_CCU4_SLICE_IRQ_ID_TRAP))
 157:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 158:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**************************************************************************************************
 159:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * ENUMS
 160:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
 161:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 162:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 163:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Typedef for CCU4 Global data structure
 164:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 165:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef CCU4_GLOBAL_TypeDef XMC_CCU4_MODULE_t;
 166:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 167:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 168:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Typedef for CCU4 Slice data structure
 169:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 170:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef CCU4_CC4_TypeDef XMC_CCU4_SLICE_t;
 171:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 172:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 173:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Return Value of an API
 174:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 175:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_STATUS
 176:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 177:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_OK      = 0U, /**< API fulfils request */
 178:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_ERROR       , /**< API cannot fulfil the request */
 179:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_RUNNING     , /**< The timer slice is currently running */
 180:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_STATUS_IDLE          /**< The timer slice is currently idle */
 181:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_STATUS_t;
 182:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 183:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 184:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  CCU4 module clock
 185:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 186:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_CLOCK
 187:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 188:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 189:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_A     , /**< External clock-A */
 190:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_B     , /**< External clock-B */
 191:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_CLOCK_EXTERNAL_C       /**< External clock-C */
 192:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_CLOCK_t;
 193:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 194:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 195:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CCU4 set the shadow transfer type for multichannel mode
 196:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 197:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER
 198:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 199:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 200:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                      only for slice
 201:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 202:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                      and hardware f
 203:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 204:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                      only for slice
 205:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 206:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                      and hardware f
 207:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 208:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                       only for slic
 209:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 210:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                       and hardware 
 211:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 212:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                       only for slic
 213:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 214:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                       and hardware 
 215:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 216:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 217:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 218:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Operational modes of CCU4 slice
 219:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 220:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODE
 221:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 222:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_COMPARE  = 0U, /**< slice(CC4y) operates in Compare Mode */
 223:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODE_CAPTURE        /**< slice(CC4y) operates in Capture Mode */
 224:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODE_t;
 225:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 226:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 227:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Timer counting modes for the slice
 228:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 229:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_MODE
 230:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 231:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 232:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA        /**< Center Aligned Mode */
 233:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_MODE_t;
 234:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 235:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 236:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Timer repetition mode for the slice
 237:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 238:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_REPEAT_MODE
 239:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 240:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U,  /**< Repetitive mode: continuous mode of operation
 241:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE        /**< Single shot mode: Once a Period match/One mat
 242:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                       occurs timer goes to idle state */
 243:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t;
 244:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 245:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 246:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Timer counting direction for the CCU4 slice
 247:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 248:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_COUNT_DIR
 249:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 250:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 251:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 252:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_COUNT_DIR_t;
 253:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 254:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 255:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Capture mode register sets
 256:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 257:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_CAP_REG_SET
 258:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 259:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 260:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_CAP_REG_SET_HIGH       /**< Capture register-2, Capture register-3 used */
 261:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAP_REG_SET_t;
 262:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 263:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 264:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Prescaler mode
 265:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 266:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER_MODE
 267:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 268:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 269:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider. */
 270:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_MODE_t;
 271:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 272:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 273:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Timer output passive level
 274:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 275:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL
 276:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 277:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 278:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 279:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 280:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 281:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 282:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Timer clock Divider
 283:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 284:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_PRESCALER
 285:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 286:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu4 */
 287:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2      , /**< Slice Clock = fccu4/2 */
 288:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4      , /**< Slice Clock = fccu4/4 */
 289:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8      , /**< Slice Clock = fccu4/8 */
 290:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16     , /**< Slice Clock = fccu4/16 */
 291:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32     , /**< Slice Clock = fccu4/32 */
 292:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_64     , /**< Slice Clock = fccu4/64 */
 293:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_128    , /**< Slice Clock = fccu4/128 */
 294:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_256    , /**< Slice Clock = fccu4/256 */
 295:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_512    , /**< Slice Clock = fccu4/512 */
 296:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu4/1024 */
 297:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu4/2048 */
 298:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu4/4096 */
 299:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu4/8192 */
 300:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu4/16384 */
 301:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_PRESCALER_32768    /**< Slice Clock = fccu4/32768 */
 302:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_PRESCALER_t;
 303:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 304:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 305:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  External Function list
 306:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 307:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_FUNCTION
 308:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 309:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_START           = 0U, /**< Start function */
 310:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_STOP                , /**< Stop function */
 311:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 312:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                      generation */
 313:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 314:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                      generation */
 315:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_GATING              , /**< Gating function */
 316:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 317:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_LOAD                , /**< Load function */
 318:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_COUNT               , /**< Counting function */
 319:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 320:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 321:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_FUNCTION_TRAP                  /**< Trap function */
 322:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_FUNCTION_t;
 323:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 324:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 325:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  External Event list
 326:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 327:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT
 328:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 329:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_NONE  = 0U, /**< None */
 330:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_0         , /**< Event-0 */
 331:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_1         , /**< Event-1 */
 332:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_2           /**< Event-2 */
 333:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_t;
 334:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 335:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 336:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Edge sensitivity
 337:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 338:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY
 339:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 340:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_NONE         = 0U, /**< None */
 341:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE      , /**< Rising Edge of the input signal gen
 342:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE     , /**< Falling Edge of the input signal ge
 343:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                 trigger */
 344:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE          /**< Both Rising and Falling edges cause
 345:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t;
 346:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 347:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 348:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  External Event trigger criteria  - Level sensitivity
 349:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 350:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY
 351:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 352:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 353:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 354:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   /* Below enum items can be utilised specific to the functionality */
 355:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 356:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 357:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 358:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 359:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 360:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 361:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 362:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_EVENT_FILTER
 363:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 364:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filter */
 365:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_3_CYCLES      , /**< 3 clock cycles */
 366:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_5_CYCLES      , /**< 5 clock cycles */
 367:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_7_CYCLES        /**< 7 clock cycles */
 368:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_FILTER_t;
 369:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 370:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 371:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU4 slice.
 372:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Interconnects are specific to each device.
 373:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 374:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef uint8_t XMC_CCU4_SLICE_INPUT_t;
 375:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 376:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 377:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 378:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 379:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_END_MODE
 380:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 381:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 382:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 383:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 384:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_END_MODE_t;
 385:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 386:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 387:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Actions that can be performed upon detection of an external Timer START event
 388:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 389:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_START_MODE
 390:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 391:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 392:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 393:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_START_MODE_t;
 394:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 395:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 396:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Modulation of timer output signals
 397:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 398:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MODULATION_MODE
 399:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 400:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 401:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 402:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MODULATION_MODE_t;
 403:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 404:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 405:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Trap exit mode
 406:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 407:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TRAP_EXIT_MODE
 408:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 409:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 410:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 411:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TRAP_EXIT_MODE_t;
 412:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 413:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 414:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Timer clear on capture
 415:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 416:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_TIMER_CLEAR_MODE
 417:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 418:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 419:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 420:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 421:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 422:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t;
 423:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 424:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 425:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Multi Channel Shadow transfer request configuration options
 426:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 427:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MCMS_ACTION
 428:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 429:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 430:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                 the actual registers upon MCS xfer 
 431:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 432:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                 register values to the actual regis
 433:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                 request */
 434:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 435:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                 Compare register values to the actu
 436:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                 MCS xfer request */
 437:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MCMS_ACTION_t;
 438:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 439:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 440:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Available Interrupt Event Ids
 441:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 442:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_IRQ_ID
 443:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 444:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH       = 0U , /**< Period match counting up */
 445:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH          = 1U , /**< Period match -> One match counting down */
 446:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP   = 2U , /**< Compare match counting up */
 447:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN = 3U , /**< Compare match counting down */
 448:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT0             = 8U , /**< Event-0 occurrence */
 449:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT1             = 9U , /**< Event-1 occurrence */
 450:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_EVENT2             = 10U, /**< Event-2 occurrence */
 451:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_IRQ_ID_TRAP               = 11U  /**< Trap occurrence */
 452:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_IRQ_ID_t;
 453:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 454:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 455:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 456:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 457:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MULTI_IRQ_ID
 458:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 459:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_PERIOD_MATCH       = 0x1U,   /**< Period match counting up */
 460:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_ONE_MATCH          = 0x2U,   /**< Period match -> One match counting 
 461:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP   = 0x4U,   /**< Compare match counting up */
 462:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN = 0x8U,   /**< Compare match counting down */
 463:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT0             = 0x100U, /**< Event-0 occurrence */
 464:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT1             = 0x200U, /**< Event-1 occurrence */
 465:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MULTI_IRQ_ID_EVENT2             = 0x400U, /**< Event-2 occurrence */
 466:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MULTI_IRQ_ID_t;
 467:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 468:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 469:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Service Request Lines for CCU4. Event are mapped to these SR lines and these are used to generat
 470:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 471:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SR_ID
 472:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 473:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 474:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 475:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 476:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 477:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SR_ID_t;
 478:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 479:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 480:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Slice shadow transfer options.
 481:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 482:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SHADOW_TRANSFER
 483:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 484:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_0            = CCU4_GCSS_S0SE_Msk, /**< Transfer Period, Compare a
 485:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           shadow register values to
 486:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           SLICE-0 */
 487:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU4_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 488:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           to actual register for SL
 489:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU4_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 490:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 491:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_1            = CCU4_GCSS_S1SE_Msk, /**< Transfer Period, Compare a
 492:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           shadow register values to
 493:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           SLICE-1 */
 494:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU4_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 495:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           to actual registers for S
 496:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU4_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 497:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 498:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_2            = CCU4_GCSS_S2SE_Msk, /**< Transfer Period, Compare a
 499:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           shadow register values to
 500:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           SLICE-2 */
 501:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU4_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 502:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           to actual register for SL
 503:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU4_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 504:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 505:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_SLICE_3            = CCU4_GCSS_S3SE_Msk, /**< Transfer Period, Compare a
 506:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           shadow register values to
 507:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           SLICE-3 */
 508:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU4_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 509:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           to actual register for SL
 510:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU4_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 511:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                           actual register for SLICE
 512:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SHADOW_TRANSFER_t;
 513:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 514:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU4V3) || defined(DOXYGEN)/* Defined for XMC1400 devices only */
 515:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 516:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Slice shadow transfer mode options.
 517:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @note Only available for XMC1400 series
 518:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 519:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE
 520:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 521:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U,  /**< Shadow transfer is 
 522:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                 One match. */
 523:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 524:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 525:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_SHADOW_TRANSFER_MODE_t; 
 526:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   
 527:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   
 528:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 529:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Immediate write into configuration register
 530:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 531:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 532:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_WRITE_INTO
 533:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 534:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU4_CC4_STC_IRPC_Msk,                  /**< Imm
 535:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                 Wri
 536:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                 Con
 537:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_COMPARE_CONFIGURATION = CCU4_CC4_STC_IRCC_Msk,                 /**< Imm
 538:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                 Wri
 539:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                 Con
 540:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU4_CC4_STC_IRLC_Msk,           /**< Imm
 541:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                 Wri
 542:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 	                                                                                            Config
 543:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRDC_Msk,            /**< Imm
 544:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                 Wri
 545:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 	                                                                                            Config
 546:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU4_CC4_STC_IRFC_Msk /**< Imm
 547:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                 Wri
 548:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                 Val
 549:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_WRITE_INTO_t;
 550:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 551:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 552:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 553:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 554:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  @note Only available for XMC1400 series
 555:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 556:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 557:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 558:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU4_CC4_STC_ASPC_Msk,        
 559:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 	                                                                                                  
 560:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                    
 561:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                    
 562:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE_SHADOW = CCU4_CC4_STC_ASCC_Msk,       
 563:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 	                                                                                                  
 564:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 	                                                                                                  
 565:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 	                                                                                                  
 566:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU4_CC4_STC_ASLC_Msk,        
 567:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 	                                                                                                  
 568:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                    
 569:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU4_CC4_STC_ASDC_Msk,        
 570:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                    
 571:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                    
 572:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU4_CC4_STC_ASFC_
 573:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 	                                                                                                  
 574:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                    
 575:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                                                                    
 576:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 577:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 578:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 579:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 580:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Used to create Mask needed for Multi-channel Shadow transfer enable/disable
 581:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 582:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef enum XMC_CCU4_SLICE_MASK
 583:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 584:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 585:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 586:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 587:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 588:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_MASK_t;
 589:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 590:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 591:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**************************************************************************************************
 592:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * DATA STRUCTURES
 593:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
 594:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 595:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 596:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 597:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Needed to configure the various aspects of an External Event.
 598:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  This structure will not connect the external event with an external function.
 599:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 600:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_EVENT_CONFIG
 601:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 602:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event *
 603:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 604:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                               This is needed for an edge sensitive 
 605:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 606:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                               This is needed for an level sensitive
 607:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_CCU4_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 608:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_EVENT_CONFIG_t;
 609:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 610:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /*Anonymous structure/union guard start*/
 611:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 612:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   #pragma push
 613:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   #pragma anon_unions
 614:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 615:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   #pragma warning 586
 616:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 617:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 618:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 619:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to compare 
 620:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 621:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 622:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_COMPARE_CONFIG
 623:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 624:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   union
 625:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   {
 626:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****     struct
 627:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****     {
 628:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 629:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                              Accepts enum ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t */
 630:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 631:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t*/
 632:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t shadow_xfer_clear : 1;  /**< Should PR and CR shadow xfer happen when timer is clear
 633:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 10;
 634:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 635:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 636:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 1;
 637:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 638:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_PRESCALER_MODE_t*/
 639:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 8;
 640:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t mcm_enable : 1;         /**< Multi-Channel mode enable? */
 641:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 6;
 642:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****     };
 643:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****     uint32_t tc;
 644:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   };
 645:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 646:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                             Accepts enum :: XMC_CCU4_SLICE_PRESCALER_t */
 647:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 648:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering */
 649:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t passive_level : 1;          /**< Configuration of ST and OUT passive levels.
 650:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                              Accepts enum :: XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t*
 651:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true.*/
 652:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_COMPARE_CONFIG_t;
 653:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 654:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 655:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Configuration data structure for CCU4 slice. Specifically configures the CCU4 slice to capture 
 656:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  This excludes event and function configuration.
 657:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */ 
 658:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** typedef struct XMC_CCU4_SLICE_CAPTURE_CONFIG
 659:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 660:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   union
 661:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   {
 662:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****     struct
 663:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****     {
 664:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 4;
 665:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
 666:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
 667:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                           Accepts enum ::XMC_CCU4_SLICE_TIMER_CLEAR_MODE_t*/
 668:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 4;
 669:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
 670:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
 671:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 3;
 672:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU4_SLI
 673:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****       uint32_t : 15;
 674:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****     };
 675:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****     uint32_t tc;
 676:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   };
 677:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
 678:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
 679:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   uint32_t timer_concatenation : 1;  /**< Enables the concatenation of the timer */
 680:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } XMC_CCU4_SLICE_CAPTURE_CONFIG_t;
 681:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /*Anonymous structure/union guard end*/
 682:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(__CC_ARM)
 683:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   #pragma pop
 684:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #elif defined(__TASKING__)
 685:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   #pragma warning restore
 686:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 687:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**************************************************************************************************
 688:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * API Prototypes
 689:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  **************************************************************************************************
 690:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 691:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #ifdef __cplusplus
 692:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** extern "C" {
 693:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 694:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 695:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidModule(const XMC_CCU4_MODULE_t *const module)
 696:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 697:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   bool tmp = false;
 698:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   
 699:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = (module == CCU40);
 700:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   
 701:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU41) 
 702:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU41);
 703:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 704:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 705:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU42)
 706:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU42);
 707:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 708:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 709:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU43)
 710:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (module == CCU43);
 711:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 712:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   
 713:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   return tmp;  
 714:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } 
 715:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 716:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsValidSlice(const XMC_CCU4_SLICE_t *const slice)
 717:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 718:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   bool tmp = false;
 719:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   
 720:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = (slice == CCU40_CC40);
 721:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU40_CC41)  
 722:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC41);
 723:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 724:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU40_CC42)  
 725:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC42);
 726:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 727:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU40_CC43)  
 728:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU40_CC43);
 729:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 730:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU41)  
 731:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC40);
 732:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU41_CC41)  
 733:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC41);
 734:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 735:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU41_CC42)  
 736:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC42);
 737:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 738:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU41_CC43)  
 739:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU41_CC43);
 740:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 741:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif 
 742:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU42)  
 743:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC40);
 744:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU42_CC41)  
 745:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC41);
 746:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 747:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU42_CC42)  
 748:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC42);
 749:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 750:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU42_CC43)  
 751:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU42_CC43);
 752:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 753:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 754:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU43)  
 755:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC40);
 756:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU43_CC41)  
 757:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC41);
 758:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 759:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU43_CC42)  
 760:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC42);
 761:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 762:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU43_CC43)  
 763:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   tmp = tmp || (slice == CCU43_CC43);
 764:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
 765:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif 
 766:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   
 767:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   return tmp;  
 768:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** } 
 769:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 770:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 771:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 772:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param mcs_action multi-channel shadow transfer request configuration
 773:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 774:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 775:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 776:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 777:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Initialization of global register GCTRL.<br>\n
 778:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  As part of module initialization, behaviour of the module upon detection
 779:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU4_EnableModule().
 780:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  The API call would bring up the required CCU4 module and also initialize the module for
 781:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  the required multi-channel shadow transfer.
 782:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 783:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 784:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
 785:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 786:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_Init(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SLICE_MCMS_ACTION_t mcs_action);
 787:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 788:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 789:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 790:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param clock Choice of input clock to the module
 791:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 792:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 793:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 794:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 795:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.<BR>\n
 796:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
 797:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Call to this API is valid after the XMC_CCU4_Init().
 798:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 799:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 800:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * None.<BR>
 801:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 802:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SetModuleClock(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_CLOCK_t clock);
 803:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 804:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 805:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 806:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 807:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 808:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 809:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 810:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Enables the CCU4 module and brings it to active state.<BR>\n
 811:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
 812:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Invoke this API before any operations are done on the CCU4 module. Invoked from  XMC_CCU4_Init()
 813:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 814:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 815:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SetModuleClock()<BR> XMC_CCU4_DisableModule()<BR> XMC_CCU4_StartPrescaler().
 816:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 817:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_EnableModule(XMC_CCU4_MODULE_t *const module);
 818:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 819:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 820:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 821:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 822:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 823:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 824:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 825:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Brings the CCU4 module to reset state and enables gating of the clock signal(if applicable depen
 826:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * on the device being selected).<BR>\n
 827:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Invoke this API when a CCU4 module needs to be disabled completely.
 828:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Any operation on the CCU4 module will have no effect after this API is called.
 829:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 830:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 831:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_EnableModule()<BR> XMC_CCU4_DisableModule().
 832:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 833:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_DisableModule(XMC_CCU4_MODULE_t *const module);
 834:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 835:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 836:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 837:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 838:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 839:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 840:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 841:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<BR>\n
 842:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
 843:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU4_Init()
 844:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  (Mandatory to fully initialize the module).Directly accessed register is GIDLC.
 845:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 846:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 847:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_Init()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescal
 848:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_StopPrescaler().
 849:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 850:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StartPrescaler(XMC_CCU4_MODULE_t *const module)
 851:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
  27              	 .loc 1 851 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 852:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StartPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 853:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   module->GIDLC |= (uint32_t) CCU4_GIDLC_SPRB_Msk;
  43              	 .loc 1 853 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a DB68     	 ldr r3,[r3,#12]
  46 000c 43F48072 	 orr r2,r3,#256
  47 0010 7B68     	 ldr r3,[r7,#4]
  48 0012 DA60     	 str r2,[r3,#12]
 854:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
  49              	 .loc 1 854 0
  50 0014 0C37     	 adds r7,r7,#12
  51              	.LCFI3:
  52              	 .cfi_def_cfa_offset 4
  53 0016 BD46     	 mov sp,r7
  54              	.LCFI4:
  55              	 .cfi_def_cfa_register 13
  56              	 
  57 0018 5DF8047B 	 ldr r7,[sp],#4
  58              	.LCFI5:
  59              	 .cfi_restore 7
  60              	 .cfi_def_cfa_offset 0
  61 001c 7047     	 bx lr
  62              	 .cfi_endproc
  63              	.LFE130:
  65 001e 00BF     	 .section .text.XMC_CCU4_SLICE_SetDitherCompareValue,"ax",%progbits
  66              	 .align 2
  67              	 .thumb
  68              	 .thumb_func
  70              	XMC_CCU4_SLICE_SetDitherCompareValue:
  71              	.LFB157:
 855:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 856:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 857:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 858:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 859:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 860:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 861:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 862:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.<BR>\n
 863:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Opposite of the StartPrescaler routine.
 864:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
 865:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * the slices of the module.Registers directly accessed is GIDLS.
 866:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 867:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 868:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock()<BR> XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_St
 869:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 870:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_StopPrescaler(XMC_CCU4_MODULE_t *const module)
 871:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 872:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_StopPrescaler:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 873:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   module->GIDLS |= (uint32_t) CCU4_GIDLS_CPRB_Msk;
 874:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 875:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 876:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 877:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 878:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 879:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 880:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 881:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 882:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.<BR>\n
 883:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This will return true if the prescaler is running. If clock is being supplied to the slices of t
 884:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * module then returns as true.
 885:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 886:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 887:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_StartPrescaler()<BR> XMC_CCU4_StopPrescaler()<BR> XMC_CCU4_EnableClock()<BR> XMC_CCU4_D
 888:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 889:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_IsPrescalerRunning(XMC_CCU4_MODULE_t *const module)
 890:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 891:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 892:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((bool)((module->GSTAT & (uint32_t) CCU4_GSTAT_PRB_Msk) == (uint32_t)CCU4_GSTAT_PRB_Msk));
 893:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 894:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 895:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 896:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 897:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
 898:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively.
 899:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                   Range: [0x1 to 0xF]
 900:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 901:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 902:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 903:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 904:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 905:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * GIDLC.CS3I bits.\n\n
 906:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
 907:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * of the idle state simultaneously.
 908:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 909:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 910:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_DisableClock().
 911:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 912:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableMultipleClocks(XMC_CCU4_MODULE_t *const module, const uint8_t c
 913:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 914:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU4_IsValidModule(module)
 915:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableMultipleClocks:Wrong clock mask", (clock_mask < 16U));
 916:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   
 917:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   module->GIDLC |= (uint32_t) clock_mask;
 918:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 919:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 920:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 921:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 922:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be Enabled.
 923:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 924:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 925:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 926:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 927:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 928:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
 929:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
 930:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
 931:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  slice whose clock needs to be enabled.
 932:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 933:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 934:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_DisableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XM
 935:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 936:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_numb
 937:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 938:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 939:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableClock:Invalid Slice Number", (slice_number < 4U));
 940:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 941:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   module->GIDLC |= ((uint32_t) 1) << slice_number;
 942:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 943:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 944:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 945:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
 946:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice_number Slice for which the clock should be disabled.
 947:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                   Range: [0x0 to 0x3]
 948:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 949:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 950:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
 951:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 952:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
 953:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
 954:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It is possible to disable clock at slice level using the module pointer.
 955:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
 956:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Directly accessed Register is GIDLS.
 957:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 958:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 959:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_EnableClock()<BR> XMC_CCU4_EnableMultipleClocks()<BR> XMC_CCU4_StartPrescaler()<BR> XMC
 960:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 961:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_DisableClock(XMC_CCU4_MODULE_t *const module, const uint8_t slice_num
 962:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
 963:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 964:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_DisableClock:Invalid Slice Number", (slice_number < 4U));
 965:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 966:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   module->GIDLS |= ((uint32_t) 1) << slice_number;
 967:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
 968:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 969:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 970:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 971:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param compare_init Pointer to slice configuration structure
 972:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 973:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 974:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 975:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 976:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to compare mode, by configuring CC4yTC, CC4yCMC, CC4yPSC, CC4yDITH
 977:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CC4yFPCS, CC4yCHC registers.\n\n 
 978:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CC4 slice is configured with Timer configurations in this routine.
 979:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * After initialization user has to explicitly enable the shadow transfer for the required values b
 980:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask.
 981:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 982:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
 983:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * None.
 984:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
 985:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CompareInit(XMC_CCU4_SLICE_t *const slice,
 986:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_COMPARE_CONFIG_t *const compare_init);
 987:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
 988:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
 989:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
 990:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param capture_init Pointer to slice configuration structure
 991:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
 992:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
 993:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
 994:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
 995:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Initialization of a CC4 slice to capture mode, by configuring CC4yTC, CC4yCMC, CC4yPSC,CC4yFPCS 
 996:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CC4 slice is configured with Capture configurations in  this routine.After initialization user h
 997:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * enable the shadow transfer for the required  values by calling XMC_CCU4_EnableShadowTransfer()
 998:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * with appropriate mask.
 999:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1000:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1001:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config().
1002:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1003:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CaptureInit(XMC_CCU4_SLICE_t *const slice,
1004:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_CAPTURE_CONFIG_t *const capture_init);
1005:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1006:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1007:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1008:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1009:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the External Start Function
1010:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param start_mode Behavior of slice when the start function is activated
1011:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1012:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1013:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1014:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1015:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Configures the Start Function of the slice, by configuring CC4yCMC.ENDS and CC4yTC.ENDM bits.\n
1016:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC4 ti
1017:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1018:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1019:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1020:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1021:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1022:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StartConfig(XMC_CCU4_SLICE_t *const slice,
1023:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_EVENT_t event,
1024:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                 const XMC_CCU4_SLICE_START_MODE_t start_mode);
1025:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1026:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1027:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1028:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the External Stop Function
1029:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param end_mode Behavior of slice when the stop function is activated
1030:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1031:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1032:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1033:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1034:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Stop function for the slice, by configuring CC4yCMC.STRTS and CC4yTC.STRM bits.\n
1035:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU4 tim
1036:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1037:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1038:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1039:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1040:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1041:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StopConfig(XMC_CCU4_SLICE_t *const slice,
1042:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_EVENT_t event,
1043:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_END_MODE_t end_mode);
1044:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1045:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1046:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1047:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the External load Function
1048:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1049:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1050:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1051:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1052:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Configures the Load Function for the slice, by configuring CC4yCMC.LDS bit.\n\n
1053:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1054:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 0,CC4yTIMER register is reloaded with the value from compare register\n
1055:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  if CC4yTCST.CDIR set to 1,CC4yTIMER register is reloaded with the value from period register\n
1056:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1057:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1058:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1059:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1060:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_LoadConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1061:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1062:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1063:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1064:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1065:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the External Modulation Function
1066:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param mod_mode Desired Modulation mode
1067:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1068:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1069:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1070:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1071:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
1072:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1073:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Output Modulation Function of the slice, by configuring CCeyCMC.MOS, CC4yTC.EMT a
1074:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CC4yTC.EMS bits.\n\n
1075:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1076:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1077:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * of the modulation function is configured as well.
1078:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1079:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1080:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1081:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1082:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ModulationConfig(XMC_CCU4_SLICE_t *const slice,
1083:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_EVENT_t event,
1084:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                      const XMC_CCU4_SLICE_MODULATION_MODE_t mod_mode,
1085:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                      const bool synch_with_pwm);
1086:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1087:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1088:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1089:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Function
1090:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1091:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1092:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
1093:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1094:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Count Function of the slice, by configuring CC4yCMC.CNTS bit.\n\n
1095:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Count function is mapped with one of the 3 events. CCU4 slice can take an external
1096:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * signal to act as the counting event. The CCU4 slice would count the
1097:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * edges present on the \b event selected.
1098:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1099:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1100:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1101:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1102:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_CountConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1103:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1104:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1105:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1106:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event  Map an External event to the External Gating Function
1107:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1108:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1109:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
1110:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1111:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Gating Function of the slice, by configuring CC4yCMC.GATES bit.\n\n
1112:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Gating function is mapped with one of the 3 events.  A CCU4 slice can use an input signal that w
1113:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1114:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1115:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1116:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1117:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1118:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_GateConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event);
1119:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1120:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1121:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1122:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-0 Function
1123:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1124:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1125:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
1126:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1127:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Capture-0 Function of the slice, by configuring CC4yCMC.CAP0S bit.\n\n
1128:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events.  A CCU4 slice can be configured into captur
1129:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC0V and 
1130:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1131:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1132:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1133:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1134:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture0Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1135:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1136:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1137:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1138:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the Capture-1 Function
1139:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1140:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1141:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
1142:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1143:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Capture-1 Function of the slice, by configuring CC4yCMC.CAP1S bit.\n\n
1144:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Capture function is mapped with one of the 3 events. A CCU4 slice can be configured into capture
1145:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * mode with the selected \b event. In this mode the CCU4 will capture the timer value into CC4yC2V
1146:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1147:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1148:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1149:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1150:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_Capture1Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
1151:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1152:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1153:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1154:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1155:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1156:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1157:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1158:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC4yTC.E
1159:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * In this mode the there is only one associated read address for all the capture registers.
1160:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Individual capture registers can still be accessed in this mode.
1161:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1162:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1163:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_GetCapturedValueFromFifo().
1164:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1165:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsExtendedCapReadEnabled(const XMC_CCU4_SLICE_t *const slice)
1166:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1167:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_IsExtendedCapReadEnabled:Invalid Module Pointer", XMC_CCU4_IsValidSlic
1168:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((bool)((slice->TC & (uint32_t) CCU4_CC4_TC_ECM_Msk) == (uint32_t)CCU4_CC4_TC_ECM_Msk));
1169:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1170:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1171:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #if defined(CCU4V1) /* Defined for XMC4500, XMC4400, XMC4200, XMC4100 devices only */
1172:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1173:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1174:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice_number to check whether read value belongs to required slice or not
1175:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1176:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1177:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1178:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                     Range: [0x0 to 0xFFFF]
1179:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1180:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1181:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Read captured value from FIFO(ECRD register).\n\n
1182:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1183:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1184:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1185:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1186:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1187:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1188:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1189:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  @note Only available for XMC4500, XMC4400, XMC4200 and XMC4100 series 
1190:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1191:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** int32_t XMC_CCU4_GetCapturedValueFromFifo(const XMC_CCU4_MODULE_t *const module, const uint8_t slic
1192:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #else
1193:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1194:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1195:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param set The capture register set from which the captured value is to be retrieved
1196:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1197:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    uint32_t Returns the value captured in the \b slice_number
1198:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *             Range: [0x0 to 0xFFFF]
1199:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1200:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1201:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Read captured value from FIFO(CC4yECRD0 and CC4yECRD1).\n\n
1202:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1203:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1204:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1205:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * derived/inferred from the captured values.
1206:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1207:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1208:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_IsExtendedCapReadEnabled().
1209:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1210:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1211:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** uint32_t XMC_CCU4_SLICE_GetCapturedValueFromFifo(const XMC_CCU4_SLICE_t *const slice,
1212:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 		                                             const XMC_CCU4_SLICE_CAP_REG_SET_t set);
1213:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** #endif
1214:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1215:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1216:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1217:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event Map an External event to the External Count Direction Function
1218:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1219:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1220:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
1221:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1222:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Count Direction of the slice, by configuring CC4yCMC.UDS bit.\n\n
1223:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1224:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CC4yTIMER count direction depending on an external signal.
1225:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1226:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1227:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1228:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1229:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_DirectionConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t eve
1230:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1231:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1232:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1233:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1234:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1235:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1236:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1237:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the status bit override Function of the slice, by configuring CC4yCMC.OFS bit.\n\n
1238:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1239:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * output of the timer's CC4yST signal depending on an external signal. 
1240:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1241:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1242:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent().
1243:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1244:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_StatusBitOverrideConfig(XMC_CCU4_SLICE_t *const slice);
1245:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1246:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1247:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1248:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param exit_mode How should a previously logged trap state be exited?
1249:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1250:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1251:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1252:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1253:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1254:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Trap Function of the slice, by configuring CC4yCMC.TS, CC4yTC.TRPSE, and CC4yTC.T
1255:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1256:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1257:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1258:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1259:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1260:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1261:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ConfigureEvent()<BR> XMC_CCU4_SLICE_SetInput().
1262:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1263:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_TrapConfig(XMC_CCU4_SLICE_t *const slice,
1264:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                const XMC_CCU4_SLICE_TRAP_EXIT_MODE_t exit_mode,
1265:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                bool synch_with_pwm);
1266:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1267:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1268:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1269:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1270:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param ev1_config Pointer to event 1 configuration data
1271:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param ev2_config Pointer to event 2 configuration data
1272:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1273:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1274:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1275:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1276:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1277:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC4yINS reg
1278:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1279:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1280:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Event-2 input would be the override value.
1281:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1282:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1283:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig().
1284:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1285:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU4_SLICE_t *const slice,
1286:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev1_
1287:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev2_
1288:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1289:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1290:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1291:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1292:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param config Pointer to event configuration data.
1293:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1294:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1295:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1296:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1297:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures an External Event of the slice, by updating CC4yINS register .\n\n
1298:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1299:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1300:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1301:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1302:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1303:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1304:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1305:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1306:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1307:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1308:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_ConfigureEvent(XMC_CCU4_SLICE_t *const slice,
1309:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_t event,
1310:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                    const XMC_CCU4_SLICE_EVENT_CONFIG_t *const config);
1311:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1312:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1313:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1314:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param event The External Event which needs to be configured.
1315:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1316:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1317:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1318:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1319:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
1320:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1321:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Selects an input for an external event, by configuring CC4yINS register.\n\n
1322:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1323:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This configures the CC4yINS.EVxIS for the selected event.
1324:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1325:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1326:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartConfig()<BR> XMC_CCU4_SLICE_StopConfig()<BR> XMC_CCU4_SLICE_LoadConfig()<BR
1327:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_ModulationConfig()<BR> XMC_CCU4_SLICE_CountConfig()<BR> XMC_CCU4_SLICE_GateConfi
1328:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_Capture0Config()<BR> XMC_CCU4_SLICE_Capture1Config()<BR> XMC_CCU4_SLICE_Directio
1329:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StatusBitOverrideConfig()<BR> XMC_CCU4_SLICE_TrapConfig().
1330:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1331:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetInput(XMC_CCU4_SLICE_t *const slice,
1332:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_EVENT_t event,
1333:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                              const XMC_CCU4_SLICE_INPUT_t input);
1334:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1335:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1336:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1337:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1338:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1339:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1340:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1341:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Enables the trap feature, by setting CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TRAP
1342:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \a out_mask.\n\n
1343:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1344:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1345:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1346:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1347:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_TrapConfig()<BR> XMC_CCU4_SLICE_DisableTrap()<BR> XMC_CCU4_SLICE_ConfigureEvent(
1348:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetInput().
1349:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1350:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableTrap(XMC_CCU4_SLICE_t *const slice)
1351:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1352:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1353:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_TRAPE_Msk;
1354:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1355:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1356:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1357:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1358:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1359:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1360:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1361:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1362:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Disables the trap feature, by clearing CC4yTC.TRAPE0, CC4yTC.TRAPE1, CC4yTC.TRAPE2 and CC4yTC.TR
1363:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \a out_mask.\n\n.\n\n
1364:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This API will revert the changes done by XMC_CCU4_SLICE_EnableTrap().
1365:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU4 slice.
1366:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1367:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1368:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableTrap().
1369:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1370:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableTrap(XMC_CCU4_SLICE_t *const slice)
1371:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1372:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1373:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_TRAPE_Msk);
1374:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1375:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1376:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1377:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1378:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1379:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1380:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1381:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1382:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC4yTCST.TRB bit.
1383:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1384:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1385:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer()<BR> XMC_CCU4_SLICE_StopTimer().
1386:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1387:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsTimerRunning(const XMC_CCU4_SLICE_t *const slice)
1388:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1389:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1390:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   return (bool)(((slice->TCST) & CCU4_CC4_TCST_TRB_Msk) == CCU4_CC4_TCST_TRB_Msk);
1391:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1392:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1393:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1394:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1395:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1396:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *   ::XMC_CCU4_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1397:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1398:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1399:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Returns the timer counting direction, by reading CC4yTCST.CDIR bit.\n\n
1400:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This API will return the direction in which the timer is currently
1401:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * incrementing(XMC_CCU4_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU4_SLICE_TIMER_COUNT_DIR_
1402:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1403:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1404:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  None.
1405:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1406:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_DIR_t XMC_CCU4_SLICE_GetCountingDir(const XMC_CCU4_SLICE
1407:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1408:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1409:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU4_CC4_TCST_CDIR_Msk) >> CCU4_CC4_TC
1410:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1411:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1412:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1413:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1414:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1415:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1416:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1417:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1418:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Starts the timer counting operation, by setting CC4yTCSET.TRBS bit.\n\n
1419:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It is necessary to have configured the CC4 slice before starting its timer.
1420:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1421:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1422:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1423:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StopTimer().
1424:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1425:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StartTimer(XMC_CCU4_SLICE_t *const slice)
1426:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1427:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1428:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TCSET = CCU4_CC4_TCSET_TRBS_Msk;
1429:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1430:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1431:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1432:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1433:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1434:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1435:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1436:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1437:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Stops the Timer.<BR>\n
1438:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC4yTCCLR.TRBC bit.
1439:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1440:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1441:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1442:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1443:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_StopTimer(XMC_CCU4_SLICE_t *const slice)
1444:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1445:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1446:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TCCLR |= (uint32_t) CCU4_CC4_TCCLR_TRBC_Msk;
1447:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1448:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1449:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1450:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1451:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1452:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1453:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1454:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1455:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Resets the timer count to zero, by setting CC4yTCCLR.TCC bit.\n\n
1456:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * A timer which has been stopped can still retain the last counted value.
1457:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * After invoking this API the timer value will be cleared.
1458:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1459:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1460:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_StartTimer().
1461:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1462:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_ClearTimer(XMC_CCU4_SLICE_t *const slice)
1463:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1464:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1465:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TCCLR |= (uint32_t) CCU4_CC4_TCCLR_TCC_Msk;
1466:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1467:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1468:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1469:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1470:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1471:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    ::XMC_CCU4_SLICE_MODE_t returns XMC_CCU4_SLICE_MODE_COMPARE if the slice is operating in comp
1472:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                          returns XMC_CCU4_SLICE_MODE_CAPTURE if the slice is operating in captur
1473:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1474:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1475:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
1476:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * CC4yTC.CMOD bit.\n\n
1477:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Ensure that before invoking this API the CCU4 slice should be configured otherwise the output of
1478:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * invalid.
1479:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1480:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1481:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  None.
1482:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1483:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_MODE_t XMC_CCU4_SLICE_GetSliceMode(const XMC_CCU4_SLICE_t *const sli
1484:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1485:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1486:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_MODE_t)(((slice->TC) & CCU4_CC4_TC_CMOD_Msk) >> CCU4_CC4_TC_CMOD_Pos));
1487:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1488:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1489:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1490:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
1491:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1492:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1493:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1494:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1495:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC4yTC.TSSM b
1496:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1497:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
1498:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * reaching the terminal count.
1499:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1500:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1501:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerRepeatMode().
1502:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1503:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerRepeatMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_RE
1504:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1505:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1506:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1507:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <br>
1508:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
1509:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
1510:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1511:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1512:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC4yTC.T
1513:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1514:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
1515:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * all over again after reaching the terminal count.
1516:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1517:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1518:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerRepeatMode().
1519:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1520:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t XMC_CCU4_SLICE_GetTimerRepeatMode(
1521:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 		                                                                            const XMC_CCU4_SLICE_
1522:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1523:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice
1524:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TSSM_Msk) >> CCU4_CC4_TC_T
1525:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1526:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1527:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1528:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
1529:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1530:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1531:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1532:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1533:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC4yTC.
1534:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
1535:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
1536:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
1537:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
1538:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * greater than the compare value.
1539:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1540:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1541:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerCountingMode().
1542:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1543:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_SetTimerCountingMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_
1544:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1545:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1546:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1547:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <br>
1548:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  ::XMC_CCU4_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
1549:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                                     returns XMC_CCU4_SLICE_TIMER_COUNT_MODE_CA if center aligned
1550:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1551:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1552:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC4yTC.TCM bit.\
1553:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1554:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1555:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCountingMode().
1556:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1557:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE XMC_CCU4_SLICE_TIMER_COUNT_MODE_t XMC_CCU4_SLICE_GetTimerCountingMode(
1558:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 		                                                                           const XMC_CCU4_SLICE_t
1559:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1560:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1561:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((XMC_CCU4_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU4_CC4_TC_TCM_Msk) >> CCU4_CC4_TC_TCM
1562:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1563:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1564:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1565:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param period_val Timer period value
1566:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *        Range: [0x0 to 0xFFFF]
1567:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1568:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1569:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1570:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1571:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Programs the timer period, by writing CC4yPRS register.\n\n
1572:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
1573:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
1574:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
1575:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual period register.
1576:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1577:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1578:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1579:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1580:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerPeriodMatch(XMC_CCU4_SLICE_t *const slice, const uint16
1581:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1582:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1583:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->PRS = (uint32_t) period_val;
1584:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1585:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1586:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1587:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1588:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1589:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *   uint16_t returns the current timer period value
1590:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1591:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1592:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1593:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieves the timer period value currently effective, by reading CC4yPR register.\n\n
1594:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
1595:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1596:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1597:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
1598:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
1599:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerPeri
1600:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1601:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1602:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1603:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerPeriodMatch().
1604:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1605:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerPeriodMatch(const XMC_CCU4_SLICE_t *const slice)
1606:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1607:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slic
1608:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((uint16_t)slice->PR);
1609:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1610:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1611:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1612:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1613:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param compare_val Timer compare value
1614:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1615:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1616:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1617:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1618:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Programs the timer compare value, by writing CC4yCRS register.<BR>\n
1619:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  The PWM duty cycle is determined by this value.
1620:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
1621:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * the the period/compare value by calling XMC_CCU4_EnableShadowTransfer() with
1622:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
1623:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * a period match transfers the value from the shadow register to the actual compare register.
1624:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1625:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1626:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerPeriodMatch().
1627:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1628:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerCompareMatch(XMC_CCU4_SLICE_t *const slice, const uint1
1629:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1630:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1631:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->CRS = (uint32_t) compare_val;
1632:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1633:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1634:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1635:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1636:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1637:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *   uint16_t returns the current timer compare value
1638:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1639:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1640:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1641:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieves the timer compare value currently effective, by reading CC4yCRS register.\n\n
1642:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
1643:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1644:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1645:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The XMC_CCU4_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
1646:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
1647:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU4_SLICE_GetTimerComp
1648:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * would not reflect the new values until the shadow transfer completes.
1649:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Directly accessed Register is CC4yCR.
1650:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1651:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1652:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerCompareMatch().
1653:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1654:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerCompareMatch(const XMC_CCU4_SLICE_t *const slice)
1655:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1656:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
1657:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((uint16_t)slice->CR);
1658:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1659:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1660:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1661:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param module Constant pointer to CCU4 module
1662:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
1663:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                             Use ::XMC_CCU4_SHADOW_TRANSFER_t enum items to create a mask of choi
1664:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                              using a bit wise OR operation.
1665:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1666:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1667:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1668:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1669:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
1670:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * the GCSS register.\n\n
1671:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
1672:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * shadow transfer trigger after the API is called.
1673:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1674:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Any call to XMC_CCU4_SLICE_SetTimerPeriodMatch()<BR> XMC_CCU4_SLICE_SetTimerCompareMatch()<BR>
1675:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetPrescaler()<BR> XMC_CCU4_SLICE_CompareInit()<BR> XMC_CCU4_SLICE_CaptureInit().
1676:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * must be succeeded by this API.
1677:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Directly accessed Register is GCSS.
1678:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1679:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1680:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  None.
1681:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1682:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_EnableShadowTransfer(XMC_CCU4_MODULE_t *const module, const uint32_t 
1683:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1684:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_EnableShadowTransfer:Invalid Slice Pointer", XMC_CCU4_IsValidModule(module))
1685:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   module->GCSS |= (uint32_t)shadow_transfer_msk;  
1686:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1687:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1688:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1689:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1690:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1691:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *   uint16_t returns the current timer value
1692:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *            Range: [0x0 to 0xFFFF]
1693:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1694:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1695:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Retrieves the latest timer value, from CC4yTIMER register.\n\n
1696:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1697:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1698:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetTimerValue().
1699:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1700:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE uint16_t XMC_CCU4_SLICE_GetTimerValue(const XMC_CCU4_SLICE_t *const slice)
1701:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1702:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1703:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   return((uint16_t)slice->TIMER);
1704:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1705:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1706:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1707:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
1708:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                  Range: [0x0 to 0xFFFF]
1709:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1710:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1711:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1712:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1713:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Loads a new timer value, by setting CC4yTIMER register.\n\n
1714:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * 
1715:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1716:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  Request to load is ignored if the timer is running.
1717:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1718:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1719:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_GetTimerValue().
1720:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1721:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetTimerValue(XMC_CCU4_SLICE_t *const slice, const uint16_t tim
1722:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1723:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1724:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TIMER = (uint32_t) timer_val;
1725:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1726:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1727:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1728:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param period_dither Boolean instruction on dithering of period match
1729:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param duty_dither Boolean instruction on dithering of compare match
1730:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param spread Dither compare value
1731:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1732:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1733:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1734:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1735:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC4yTC.DITHE and CC4yDITS bits
1736:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
1737:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
1738:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
1739:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
1740:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
1741:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * XMC_CCU4_SLICE_SetDitherCompareValue().
1742:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1743:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Note:</b><br>
1744:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * After this API call, XMC_CCU4_EnableShadowTransfer() has to be called with appropriate mask
1745:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * to transfer the dither value.
1746:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1747:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1748:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_DisableDithering().
1749:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1750:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** void XMC_CCU4_SLICE_EnableDithering(XMC_CCU4_SLICE_t *const slice,
1751:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                     const bool period_dither,
1752:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                     const bool duty_dither,
1753:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****                                     const uint8_t spread);
1754:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1755:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1756:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1757:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1758:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1759:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1760:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1761:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC4yTC.DITHE bits.\n\n
1762:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This disables the Dither mode that was set in XMC_CCU4_SLICE_EnableDithering().
1763:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This API will not clear the dither compare value.
1764:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1765:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1766:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1767:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1768:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableDithering(XMC_CCU4_SLICE_t *const slice)
1769:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1770:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice))
1771:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_DITHE_Msk);
1772:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1773:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1774:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1775:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1776:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1777:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1778:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1779:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1780:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Enables the floating prescaler, by setting CC4yTC.FPE bit.\n\n
1781:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
1782:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
1783:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
1784:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1785:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Related APIs:</b><br>
1786:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetFloatingPrescalerCompareValue()<BR> XMC_CCU4_SLICE_DisableFloatingPrescaler()
1787:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_SetPrescaler().
1788:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1789:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_EnableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1790:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1791:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
1792:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TC |= (uint32_t) CCU4_CC4_TC_FPE_Msk;
1793:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1794:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1795:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1796:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1797:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1798:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1799:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1800:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1801:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Disables the floating prescaler, by clearing CC4yTC.FPE bit.\n\n
1802:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This would return the prescaler to the normal mode.
1803:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * The prescaler that would be applied is the value present in CC4yPSC.
1804:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1805:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   * \par<b>Related APIs:</b><br>
1806:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableFloatingPrescaler().
1807:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1808:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_DisableFloatingPrescaler(XMC_CCU4_SLICE_t *const slice)
1809:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
1810:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice
1811:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->TC &= ~((uint32_t) CCU4_CC4_TC_FPE_Msk);
1812:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
1813:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** 
1814:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** /**
1815:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param slice Constant pointer to CC4 Slice
1816:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @param comp_val Dither compare value
1817:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *                 Range: [0x0 to 0xF]
1818:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * @return <BR>
1819:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *    None<BR>
1820:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1821:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * \par<b>Description:</b><br>
1822:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * Sets the dither spread/compare value, by setting CC4yDITS.DCVS bits.\n\n
1823:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
1824:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
1825:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU4_EnableShadowTransfer()
1826:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  * called with appropriate mask.
1827:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *
1828:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   * \par<b>Related APIs:</b><br>
1829:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  *  XMC_CCU4_SLICE_EnableDithering().
1830:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****  */
1831:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** __STATIC_INLINE void XMC_CCU4_SLICE_SetDitherCompareValue(XMC_CCU4_SLICE_t *const slice, const uint
1832:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** {
  72              	 .loc 1 1832 0
  73              	 .cfi_startproc
  74              	 
  75              	 
  76              	 
  77 0000 80B4     	 push {r7}
  78              	.LCFI6:
  79              	 .cfi_def_cfa_offset 4
  80              	 .cfi_offset 7,-4
  81 0002 83B0     	 sub sp,sp,#12
  82              	.LCFI7:
  83              	 .cfi_def_cfa_offset 16
  84 0004 00AF     	 add r7,sp,#0
  85              	.LCFI8:
  86              	 .cfi_def_cfa_register 7
  87 0006 7860     	 str r0,[r7,#4]
  88 0008 0B46     	 mov r3,r1
  89 000a FB70     	 strb r3,[r7,#3]
1833:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   XMC_ASSERT("XMC_CCU4_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sl
1834:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h ****   slice->DITS = comp_val;
  90              	 .loc 1 1834 0
  91 000c FA78     	 ldrb r2,[r7,#3]
  92 000e 7B68     	 ldr r3,[r7,#4]
  93 0010 1A62     	 str r2,[r3,#32]
1835:D:\Naukowe\BLDC_workspace\PWM_from_ex\Libraries\XMCLib\inc\xmc_ccu4.h **** }
  94              	 .loc 1 1835 0
  95 0012 0C37     	 adds r7,r7,#12
  96              	.LCFI9:
  97              	 .cfi_def_cfa_offset 4
  98 0014 BD46     	 mov sp,r7
  99              	.LCFI10:
 100              	 .cfi_def_cfa_register 13
 101              	 
 102 0016 5DF8047B 	 ldr r7,[sp],#4
 103              	.LCFI11:
 104              	 .cfi_restore 7
 105              	 .cfi_def_cfa_offset 0
 106 001a 7047     	 bx lr
 107              	 .cfi_endproc
 108              	.LFE157:
 110              	 .section .text.XMC_CCU4_lAssertReset,"ax",%progbits
 111              	 .align 2
 112              	 .thumb
 113              	 .thumb_func
 115              	XMC_CCU4_lAssertReset:
 116              	.LFB193:
 117              	 .file 2 "../Libraries/XMCLib/src/xmc_ccu4.c"
   1:../Libraries/XMCLib/src/xmc_ccu4.c **** /**
   2:../Libraries/XMCLib/src/xmc_ccu4.c ****  * @file xmc_ccu4.c
   3:../Libraries/XMCLib/src/xmc_ccu4.c ****  * @date 2015-10-27
   4:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
   5:../Libraries/XMCLib/src/xmc_ccu4.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_ccu4.c ****  * XMClib v2.1.2 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
   9:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Copyright (c) 2015, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_ccu4.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_ccu4.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_ccu4.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_ccu4.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_ccu4.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 
  18:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_ccu4.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 
  21:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_ccu4.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_ccu4.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_ccu4.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_ccu4.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_ccu4.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_ccu4.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_ccu4.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_ccu4.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_ccu4.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_ccu4.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_ccu4.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  36:../Libraries/XMCLib/src/xmc_ccu4.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_ccu4.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  39:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  42:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 2015-06-20:
  43:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - Removed definition of GetDriverVersion API <br>
  44:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  45:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 2015-07-01:
  46:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - In XMC_CCU4_SLICE_StartConfig(), Options in XMC_ASSERT check for start mode is corrected. 
  47:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  48:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 2015-07-24:
  49:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  50:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  51:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 2015-08-17:
  52:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - Start of prescaler XMC_CCU4_StartPrescaler() is invoked in XMC_CCU4_Init() API. <br>
  53:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - Bug fix XMC_CCU4_SLICE_ConfigureEvent() during the level setting for XMC14 devices. <br>
  54:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - XMC_CCU4_EnableShadowTransfer() definition is removed, since the API is made as inline. <b
  55:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  56:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  57:../Libraries/XMCLib/src/xmc_ccu4.c ****  * 2015-10-07:
  58:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - XMC_CCU4_SLICE_GetEvent() is made as inline.
  59:../Libraries/XMCLib/src/xmc_ccu4.c ****  *     - DOC updates for the newly added APIs.
  60:../Libraries/XMCLib/src/xmc_ccu4.c ****  *
  61:../Libraries/XMCLib/src/xmc_ccu4.c ****  * @endcond
  62:../Libraries/XMCLib/src/xmc_ccu4.c ****  */
  63:../Libraries/XMCLib/src/xmc_ccu4.c ****  
  64:../Libraries/XMCLib/src/xmc_ccu4.c **** /**************************************************************************************************
  65:../Libraries/XMCLib/src/xmc_ccu4.c ****  * HEADER FILES
  66:../Libraries/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
  67:../Libraries/XMCLib/src/xmc_ccu4.c **** #include "xmc_ccu4.h"
  68:../Libraries/XMCLib/src/xmc_ccu4.c **** 
  69:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU40)
  70:../Libraries/XMCLib/src/xmc_ccu4.c **** #include "xmc_scu.h"
  71:../Libraries/XMCLib/src/xmc_ccu4.c **** /**************************************************************************************************
  72:../Libraries/XMCLib/src/xmc_ccu4.c ****  * MACROS
  73:../Libraries/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
  74:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_NUM_SLICES_PER_MODULE          (4U)
  75:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_DITHER_PERIOD_MASK       (1U)
  76:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_DITHER_DUTYCYCLE_MASK    (2U)
  77:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK   (3U)
  78:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK  (1U)
  79:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK (3U)
  80:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU4V3) /* Defined for XMC1400 devices only */
  81:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK  CCU4_CC4_INS1_EV0IS_Msk
  82:../Libraries/XMCLib/src/xmc_ccu4.c **** #else
  83:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK  CCU4_CC4_INS_EV0IS_Msk
  84:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
  85:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_GIDLC_CLOCK_MASK               (15U)
  86:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_GCSS_SLICE0_MASK               (1U)
  87:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_GCSS_SLICE1_MASK               (16U)
  88:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_GCSS_SLICE2_MASK               (256U)
  89:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_GCSS_SLICE3_MASK               (4096U)
  90:../Libraries/XMCLib/src/xmc_ccu4.c **** 
  91:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro to check if the clock selected enum passed is valid */
  92:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_CLOCK(clock) \
  93:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((clock == XMC_CCU4_CLOCK_SCU)        || \
  94:../Libraries/XMCLib/src/xmc_ccu4.c ****      (clock == XMC_CCU4_CLOCK_EXTERNAL_A) || \
  95:../Libraries/XMCLib/src/xmc_ccu4.c ****      (clock == XMC_CCU4_CLOCK_EXTERNAL_B) || \
  96:../Libraries/XMCLib/src/xmc_ccu4.c ****      (clock == XMC_CCU4_CLOCK_EXTERNAL_C))
  97:../Libraries/XMCLib/src/xmc_ccu4.c **** 
  98:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro used to check if the event ID is valid*/
  99:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_EVENT_ID(event_id) \
 100:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((event_id == XMC_CCU4_SLICE_EVENT_NONE)|| \
 101:../Libraries/XMCLib/src/xmc_ccu4.c ****      (event_id == XMC_CCU4_SLICE_EVENT_0)   || \
 102:../Libraries/XMCLib/src/xmc_ccu4.c ****      (event_id == XMC_CCU4_SLICE_EVENT_1)   || \
 103:../Libraries/XMCLib/src/xmc_ccu4.c ****      (event_id == XMC_CCU4_SLICE_EVENT_2))
 104:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 105:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro used to check if the edge sensitivity is valid*/
 106:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_EDGE_SENSITIVITY(edge) \
 107:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((edge == XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_NONE)        || \
 108:../Libraries/XMCLib/src/xmc_ccu4.c ****      (edge == XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE) || \
 109:../Libraries/XMCLib/src/xmc_ccu4.c ****      (edge == XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE)|| \
 110:../Libraries/XMCLib/src/xmc_ccu4.c ****      (edge == XMC_CCU4_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE))
 111:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 112:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro used to check if the filter clock cycles are valid */
 113:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_EVENT_FILTER(cycles) \
 114:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((cycles == XMC_CCU4_SLICE_EVENT_FILTER_DISABLED) || \
 115:../Libraries/XMCLib/src/xmc_ccu4.c ****      (cycles == XMC_CCU4_SLICE_EVENT_FILTER_3_CYCLES) || \
 116:../Libraries/XMCLib/src/xmc_ccu4.c ****      (cycles == XMC_CCU4_SLICE_EVENT_FILTER_5_CYCLES) || \
 117:../Libraries/XMCLib/src/xmc_ccu4.c ****      (cycles == XMC_CCU4_SLICE_EVENT_FILTER_7_CYCLES))
 118:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 119:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro used to check if the Multi-channel input related action is valid*/
 120:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_MCS_ACTION(mcs_action) \
 121:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((mcs_action == XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR)      || \
 122:../Libraries/XMCLib/src/xmc_ccu4.c ****      (mcs_action == XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP) || \
 123:../Libraries/XMCLib/src/xmc_ccu4.c ****      (mcs_action == XMC_CCU4_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT))
 124:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 125:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro used to check if the SR line is valid*/
 126:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_SLICE_CHECK_SR_ID(id) \
 127:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((id == XMC_CCU4_SLICE_SR_ID_0) || \
 128:../Libraries/XMCLib/src/xmc_ccu4.c ****      (id == XMC_CCU4_SLICE_SR_ID_1) || \
 129:../Libraries/XMCLib/src/xmc_ccu4.c ****      (id == XMC_CCU4_SLICE_SR_ID_2) || \
 130:../Libraries/XMCLib/src/xmc_ccu4.c ****      (id == XMC_CCU4_SLICE_SR_ID_3))
 131:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 132:../Libraries/XMCLib/src/xmc_ccu4.c **** /** Macro to check if the end mode enum passed is valid */
 133:../Libraries/XMCLib/src/xmc_ccu4.c **** #define XMC_CCU4_CHECK_END_MODE(end_mode) \
 134:../Libraries/XMCLib/src/xmc_ccu4.c ****     ((end_mode == XMC_CCU4_SLICE_END_MODE_TIMER_STOP) || \
 135:../Libraries/XMCLib/src/xmc_ccu4.c ****      (end_mode == XMC_CCU4_SLICE_END_MODE_TIMER_CLEAR) || \
 136:../Libraries/XMCLib/src/xmc_ccu4.c ****      (end_mode == XMC_CCU4_SLICE_END_MODE_TIMER_STOP_CLEAR))
 137:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 138:../Libraries/XMCLib/src/xmc_ccu4.c **** /**************************************************************************************************
 139:../Libraries/XMCLib/src/xmc_ccu4.c ****  * LOCAL ROUTINES
 140:../Libraries/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
 141:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 142:../Libraries/XMCLib/src/xmc_ccu4.c **** __STATIC_INLINE void XMC_CCU4_lAssertReset(const XMC_CCU4_MODULE_t *const module)
 143:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 118              	 .loc 2 143 0
 119              	 .cfi_startproc
 120              	 
 121              	 
 122 0000 80B5     	 push {r7,lr}
 123              	.LCFI12:
 124              	 .cfi_def_cfa_offset 8
 125              	 .cfi_offset 7,-8
 126              	 .cfi_offset 14,-4
 127 0002 82B0     	 sub sp,sp,#8
 128              	.LCFI13:
 129              	 .cfi_def_cfa_offset 16
 130 0004 00AF     	 add r7,sp,#0
 131              	.LCFI14:
 132              	 .cfi_def_cfa_register 7
 133 0006 7860     	 str r0,[r7,#4]
 144:../Libraries/XMCLib/src/xmc_ccu4.c ****   switch ((uint32_t)module)
 134              	 .loc 2 144 0
 135 0008 7B68     	 ldr r3,[r7,#4]
 136 000a 124A     	 ldr r2,.L11
 137 000c 9342     	 cmp r3,r2
 138 000e 11D0     	 beq .L5
 139 0010 104A     	 ldr r2,.L11
 140 0012 9342     	 cmp r3,r2
 141 0014 03D8     	 bhi .L6
 142 0016 104A     	 ldr r2,.L11+4
 143 0018 9342     	 cmp r3,r2
 144 001a 07D0     	 beq .L7
 145:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 146:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU40:
 147:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU40);
 148:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 149:../Libraries/XMCLib/src/xmc_ccu4.c ****       
 150:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU41)
 151:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU41:
 152:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU41);
 153:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 154:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 155:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 156:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU42)
 157:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU42:
 158:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU42);
 159:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 160:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 161:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 162:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU43)
 163:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU43:
 164:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU43);
 165:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 166:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 167:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 168:../Libraries/XMCLib/src/xmc_ccu4.c ****     default:
 169:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_ASSERT("XMC_CCU4_lAssertReset:Invalid Module Pointer", 0);
 170:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;   
 145              	 .loc 2 170 0
 146 001c 16E0     	 b .L3
 147              	.L6:
 144:../Libraries/XMCLib/src/xmc_ccu4.c ****   switch ((uint32_t)module)
 148              	 .loc 2 144 0
 149 001e 0F4A     	 ldr r2,.L11+8
 150 0020 9342     	 cmp r3,r2
 151 0022 0BD0     	 beq .L8
 152 0024 0E4A     	 ldr r2,.L11+12
 153 0026 9342     	 cmp r3,r2
 154 0028 0CD0     	 beq .L9
 155              	 .loc 2 170 0
 156 002a 0FE0     	 b .L3
 157              	.L7:
 147:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 158              	 .loc 2 147 0
 159 002c 0420     	 movs r0,#4
 160 002e FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 148:../Libraries/XMCLib/src/xmc_ccu4.c ****       
 161              	 .loc 2 148 0
 162 0032 0BE0     	 b .L3
 163              	.L5:
 152:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 164              	 .loc 2 152 0
 165 0034 0820     	 movs r0,#8
 166 0036 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 153:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 167              	 .loc 2 153 0
 168 003a 07E0     	 b .L3
 169              	.L8:
 158:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 170              	 .loc 2 158 0
 171 003c 1020     	 movs r0,#16
 172 003e FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 159:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 173              	 .loc 2 159 0
 174 0042 03E0     	 b .L3
 175              	.L9:
 164:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 176              	 .loc 2 164 0
 177 0044 0748     	 ldr r0,.L11+16
 178 0046 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 165:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 179              	 .loc 2 165 0
 180 004a 00BF     	 nop
 181              	.L3:
 171:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 172:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 173:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 182              	 .loc 2 173 0
 183 004c 0837     	 adds r7,r7,#8
 184              	.LCFI15:
 185              	 .cfi_def_cfa_offset 8
 186 004e BD46     	 mov sp,r7
 187              	.LCFI16:
 188              	 .cfi_def_cfa_register 13
 189              	 
 190 0050 80BD     	 pop {r7,pc}
 191              	.L12:
 192 0052 00BF     	 .align 2
 193              	.L11:
 194 0054 00000140 	 .word 1073807360
 195 0058 00C00040 	 .word 1073790976
 196 005c 00400140 	 .word 1073823744
 197 0060 00400048 	 .word 1207975936
 198 0064 01000010 	 .word 268435457
 199              	 .cfi_endproc
 200              	.LFE193:
 202              	 .section .text.XMC_CCU4_lDeassertReset,"ax",%progbits
 203              	 .align 2
 204              	 .thumb
 205              	 .thumb_func
 207              	XMC_CCU4_lDeassertReset:
 208              	.LFB194:
 174:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 175:../Libraries/XMCLib/src/xmc_ccu4.c **** __STATIC_INLINE void XMC_CCU4_lDeassertReset(const XMC_CCU4_MODULE_t *const module)
 176:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 209              	 .loc 2 176 0
 210              	 .cfi_startproc
 211              	 
 212              	 
 213 0000 80B5     	 push {r7,lr}
 214              	.LCFI17:
 215              	 .cfi_def_cfa_offset 8
 216              	 .cfi_offset 7,-8
 217              	 .cfi_offset 14,-4
 218 0002 82B0     	 sub sp,sp,#8
 219              	.LCFI18:
 220              	 .cfi_def_cfa_offset 16
 221 0004 00AF     	 add r7,sp,#0
 222              	.LCFI19:
 223              	 .cfi_def_cfa_register 7
 224 0006 7860     	 str r0,[r7,#4]
 177:../Libraries/XMCLib/src/xmc_ccu4.c ****   switch ((uint32_t)module)
 225              	 .loc 2 177 0
 226 0008 7B68     	 ldr r3,[r7,#4]
 227 000a 124A     	 ldr r2,.L21
 228 000c 9342     	 cmp r3,r2
 229 000e 11D0     	 beq .L15
 230 0010 104A     	 ldr r2,.L21
 231 0012 9342     	 cmp r3,r2
 232 0014 03D8     	 bhi .L16
 233 0016 104A     	 ldr r2,.L21+4
 234 0018 9342     	 cmp r3,r2
 235 001a 07D0     	 beq .L17
 178:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 179:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU40:
 180:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU40);
 181:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 182:../Libraries/XMCLib/src/xmc_ccu4.c ****       
 183:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU41)
 184:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU41:
 185:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU41);
 186:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 187:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 188:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 189:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU42)
 190:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU42:
 191:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU42);
 192:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 193:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 194:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 195:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU43)
 196:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU43:
 197:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU43);
 198:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 199:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 200:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 201:../Libraries/XMCLib/src/xmc_ccu4.c ****     default:
 202:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_ASSERT("XMC_CCU4_lDeassertReset:Invalid Module Pointer", 0);
 203:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;   
 236              	 .loc 2 203 0
 237 001c 16E0     	 b .L13
 238              	.L16:
 177:../Libraries/XMCLib/src/xmc_ccu4.c ****   switch ((uint32_t)module)
 239              	 .loc 2 177 0
 240 001e 0F4A     	 ldr r2,.L21+8
 241 0020 9342     	 cmp r3,r2
 242 0022 0BD0     	 beq .L18
 243 0024 0E4A     	 ldr r2,.L21+12
 244 0026 9342     	 cmp r3,r2
 245 0028 0CD0     	 beq .L19
 246              	 .loc 2 203 0
 247 002a 0FE0     	 b .L13
 248              	.L17:
 180:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 249              	 .loc 2 180 0
 250 002c 0420     	 movs r0,#4
 251 002e FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 181:../Libraries/XMCLib/src/xmc_ccu4.c ****       
 252              	 .loc 2 181 0
 253 0032 0BE0     	 b .L13
 254              	.L15:
 185:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 255              	 .loc 2 185 0
 256 0034 0820     	 movs r0,#8
 257 0036 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 186:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 258              	 .loc 2 186 0
 259 003a 07E0     	 b .L13
 260              	.L18:
 191:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 261              	 .loc 2 191 0
 262 003c 1020     	 movs r0,#16
 263 003e FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 192:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 264              	 .loc 2 192 0
 265 0042 03E0     	 b .L13
 266              	.L19:
 197:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 267              	 .loc 2 197 0
 268 0044 0748     	 ldr r0,.L21+16
 269 0046 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 198:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 270              	 .loc 2 198 0
 271 004a 00BF     	 nop
 272              	.L13:
 204:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 205:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 206:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 273              	 .loc 2 206 0
 274 004c 0837     	 adds r7,r7,#8
 275              	.LCFI20:
 276              	 .cfi_def_cfa_offset 8
 277 004e BD46     	 mov sp,r7
 278              	.LCFI21:
 279              	 .cfi_def_cfa_register 13
 280              	 
 281 0050 80BD     	 pop {r7,pc}
 282              	.L22:
 283 0052 00BF     	 .align 2
 284              	.L21:
 285 0054 00000140 	 .word 1073807360
 286 0058 00C00040 	 .word 1073790976
 287 005c 00400140 	 .word 1073823744
 288 0060 00400048 	 .word 1207975936
 289 0064 01000010 	 .word 268435457
 290              	 .cfi_endproc
 291              	.LFE194:
 293              	 .section .text.XMC_CCU4_EnableModule,"ax",%progbits
 294              	 .align 2
 295              	 .global XMC_CCU4_EnableModule
 296              	 .thumb
 297              	 .thumb_func
 299              	XMC_CCU4_EnableModule:
 300              	.LFB195:
 207:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 208:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 209:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CLOCK_GATING_SUPPORTED)
 210:../Libraries/XMCLib/src/xmc_ccu4.c **** __STATIC_INLINE void XMC_CCU4_lGateClock(const XMC_CCU4_MODULE_t *const module)
 211:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 212:../Libraries/XMCLib/src/xmc_ccu4.c ****   switch ((uint32_t)module)
 213:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 214:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU40:
 215:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU40);
 216:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 217:../Libraries/XMCLib/src/xmc_ccu4.c ****       
 218:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU41)      
 219:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU41:
 220:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU41);
 221:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 222:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 223:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 224:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU42)      
 225:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU42:
 226:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU42);
 227:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 228:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 229:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 230:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU43)      
 231:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU43:
 232:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU43);
 233:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 234:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif     
 235:../Libraries/XMCLib/src/xmc_ccu4.c ****  
 236:../Libraries/XMCLib/src/xmc_ccu4.c ****     default:
 237:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_ASSERT("XMC_CCU4_lGateClock:Invalid Module Pointer", 0);
 238:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;   
 239:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 240:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 241:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 242:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 243:../Libraries/XMCLib/src/xmc_ccu4.c **** __STATIC_INLINE void XMC_CCU4_lUngateClock(const XMC_CCU4_MODULE_t *const module)
 244:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 245:../Libraries/XMCLib/src/xmc_ccu4.c ****   switch ((uint32_t)module)
 246:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 247:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU40:
 248:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU40);
 249:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 250:../Libraries/XMCLib/src/xmc_ccu4.c ****       
 251:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU41)      
 252:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU41:
 253:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU41);
 254:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 255:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 256:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 257:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU42)      
 258:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU42:
 259:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU42);
 260:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 261:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 262:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 263:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU43)      
 264:../Libraries/XMCLib/src/xmc_ccu4.c ****     case (uint32_t)CCU43:
 265:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU43);
 266:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 267:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif  
 268:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 269:../Libraries/XMCLib/src/xmc_ccu4.c ****     default:
 270:../Libraries/XMCLib/src/xmc_ccu4.c ****       XMC_ASSERT("XMC_CCU4_lUngateClock:Invalid Module Pointer", 0);
 271:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;   
 272:../Libraries/XMCLib/src/xmc_ccu4.c ****     
 273:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 274:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 275:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 276:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 277:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined (XMC_ASSERT_ENABLE)
 278:../Libraries/XMCLib/src/xmc_ccu4.c **** __STATIC_INLINE bool XMC_CCU4_SLICE_IsInputvalid(XMC_CCU4_SLICE_INPUT_t input)
 279:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 280:../Libraries/XMCLib/src/xmc_ccu4.c **** #if (UC_SERIES == XMC14)
 281:../Libraries/XMCLib/src/xmc_ccu4.c ****   return (input < 48U);
 282:../Libraries/XMCLib/src/xmc_ccu4.c **** #else
 283:../Libraries/XMCLib/src/xmc_ccu4.c ****   return (input < 16U);
 284:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 285:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 286:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 287:../Libraries/XMCLib/src/xmc_ccu4.c **** /**************************************************************************************************
 288:../Libraries/XMCLib/src/xmc_ccu4.c ****  * API IMPLEMENTATION
 289:../Libraries/XMCLib/src/xmc_ccu4.c ****  **************************************************************************************************
 290:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 291:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_EnableModule(XMC_CCU4_MODULE_t *const module)
 292:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 301              	 .loc 2 292 0
 302              	 .cfi_startproc
 303              	 
 304              	 
 305 0000 80B5     	 push {r7,lr}
 306              	.LCFI22:
 307              	 .cfi_def_cfa_offset 8
 308              	 .cfi_offset 7,-8
 309              	 .cfi_offset 14,-4
 310 0002 82B0     	 sub sp,sp,#8
 311              	.LCFI23:
 312              	 .cfi_def_cfa_offset 16
 313 0004 00AF     	 add r7,sp,#0
 314              	.LCFI24:
 315              	 .cfi_def_cfa_register 7
 316 0006 7860     	 str r0,[r7,#4]
 293:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_EnableModule:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 294:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 295:../Libraries/XMCLib/src/xmc_ccu4.c **** #if UC_FAMILY == XMC4
 296:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Enable CCU4 module clock */
 297:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_CCU);
 317              	 .loc 2 297 0
 318 0008 1020     	 movs r0,#16
 319 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableClock
 298:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 299:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 300:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CLOCK_GATING_SUPPORTED)
 301:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_lUngateClock(module);
 302:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 303:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 304:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 305:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_lDeassertReset(module);
 320              	 .loc 2 305 0
 321 000e 7868     	 ldr r0,[r7,#4]
 322 0010 FFF7FEFF 	 bl XMC_CCU4_lDeassertReset
 306:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 307:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 323              	 .loc 2 307 0
 324 0014 0837     	 adds r7,r7,#8
 325              	.LCFI25:
 326              	 .cfi_def_cfa_offset 8
 327 0016 BD46     	 mov sp,r7
 328              	.LCFI26:
 329              	 .cfi_def_cfa_register 13
 330              	 
 331 0018 80BD     	 pop {r7,pc}
 332              	 .cfi_endproc
 333              	.LFE195:
 335 001a 00BF     	 .section .text.XMC_CCU4_DisableModule,"ax",%progbits
 336              	 .align 2
 337              	 .global XMC_CCU4_DisableModule
 338              	 .thumb
 339              	 .thumb_func
 341              	XMC_CCU4_DisableModule:
 342              	.LFB196:
 308:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 309:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_DisableModule(XMC_CCU4_MODULE_t *const module)
 310:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 343              	 .loc 2 310 0
 344              	 .cfi_startproc
 345              	 
 346              	 
 347 0000 80B5     	 push {r7,lr}
 348              	.LCFI27:
 349              	 .cfi_def_cfa_offset 8
 350              	 .cfi_offset 7,-8
 351              	 .cfi_offset 14,-4
 352 0002 82B0     	 sub sp,sp,#8
 353              	.LCFI28:
 354              	 .cfi_def_cfa_offset 16
 355 0004 00AF     	 add r7,sp,#0
 356              	.LCFI29:
 357              	 .cfi_def_cfa_register 7
 358 0006 7860     	 str r0,[r7,#4]
 311:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_DisableModule:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 312:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 313:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 314:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_lAssertReset(module);
 359              	 .loc 2 314 0
 360 0008 7868     	 ldr r0,[r7,#4]
 361 000a FFF7FEFF 	 bl XMC_CCU4_lAssertReset
 315:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 316:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 317:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CLOCK_GATING_SUPPORTED)
 318:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_lGateClock(module);
 319:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 320:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 362              	 .loc 2 320 0
 363 000e 0837     	 adds r7,r7,#8
 364              	.LCFI30:
 365              	 .cfi_def_cfa_offset 8
 366 0010 BD46     	 mov sp,r7
 367              	.LCFI31:
 368              	 .cfi_def_cfa_register 13
 369              	 
 370 0012 80BD     	 pop {r7,pc}
 371              	 .cfi_endproc
 372              	.LFE196:
 374              	 .section .text.XMC_CCU4_Init,"ax",%progbits
 375              	 .align 2
 376              	 .global XMC_CCU4_Init
 377              	 .thumb
 378              	 .thumb_func
 380              	XMC_CCU4_Init:
 381              	.LFB197:
 321:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 322:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to initialize CCU4 global resources  */
 323:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_Init(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_SLICE_MCMS_ACTION_t mcs_action)
 324:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 382              	 .loc 2 324 0
 383              	 .cfi_startproc
 384              	 
 385              	 
 386 0000 80B5     	 push {r7,lr}
 387              	.LCFI32:
 388              	 .cfi_def_cfa_offset 8
 389              	 .cfi_offset 7,-8
 390              	 .cfi_offset 14,-4
 391 0002 84B0     	 sub sp,sp,#16
 392              	.LCFI33:
 393              	 .cfi_def_cfa_offset 24
 394 0004 00AF     	 add r7,sp,#0
 395              	.LCFI34:
 396              	 .cfi_def_cfa_register 7
 397 0006 7860     	 str r0,[r7,#4]
 398 0008 0B46     	 mov r3,r1
 399 000a FB70     	 strb r3,[r7,#3]
 325:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t gctrl;
 326:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 327:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_Init:Invalid module pointer", XMC_CCU4_IsValidModule(module));
 328:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_Init:Invalid mcs action", XMC_CCU4_SLICE_CHECK_MCS_ACTION(mcs_action));
 329:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 330:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Enable CCU4 module */
 331:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_EnableModule(module);
 400              	 .loc 2 331 0
 401 000c 7868     	 ldr r0,[r7,#4]
 402 000e FFF7FEFF 	 bl XMC_CCU4_EnableModule
 332:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Start the prescaler */
 333:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_StartPrescaler(module);
 403              	 .loc 2 333 0
 404 0012 7868     	 ldr r0,[r7,#4]
 405 0014 FFF7FEFF 	 bl XMC_CCU4_StartPrescaler
 334:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 335:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl = module->GCTRL;
 406              	 .loc 2 335 0
 407 0018 7B68     	 ldr r3,[r7,#4]
 408 001a 1B68     	 ldr r3,[r3]
 409 001c FB60     	 str r3,[r7,#12]
 336:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl &= ~((uint32_t) CCU4_GCTRL_MSDE_Msk);
 410              	 .loc 2 336 0
 411 001e FB68     	 ldr r3,[r7,#12]
 412 0020 23F44043 	 bic r3,r3,#49152
 413 0024 FB60     	 str r3,[r7,#12]
 337:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl |= ((uint32_t) mcs_action) << CCU4_GCTRL_MSDE_Pos;
 414              	 .loc 2 337 0
 415 0026 FB78     	 ldrb r3,[r7,#3]
 416 0028 9B03     	 lsls r3,r3,#14
 417 002a FA68     	 ldr r2,[r7,#12]
 418 002c 1343     	 orrs r3,r3,r2
 419 002e FB60     	 str r3,[r7,#12]
 338:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 339:../Libraries/XMCLib/src/xmc_ccu4.c ****   module->GCTRL = gctrl;
 420              	 .loc 2 339 0
 421 0030 7B68     	 ldr r3,[r7,#4]
 422 0032 FA68     	 ldr r2,[r7,#12]
 423 0034 1A60     	 str r2,[r3]
 340:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 424              	 .loc 2 340 0
 425 0036 1037     	 adds r7,r7,#16
 426              	.LCFI35:
 427              	 .cfi_def_cfa_offset 8
 428 0038 BD46     	 mov sp,r7
 429              	.LCFI36:
 430              	 .cfi_def_cfa_register 13
 431              	 
 432 003a 80BD     	 pop {r7,pc}
 433              	 .cfi_endproc
 434              	.LFE197:
 436              	 .section .text.XMC_CCU4_SetModuleClock,"ax",%progbits
 437              	 .align 2
 438              	 .global XMC_CCU4_SetModuleClock
 439              	 .thumb
 440              	 .thumb_func
 442              	XMC_CCU4_SetModuleClock:
 443              	.LFB198:
 341:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 342:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to select CCU4 module clock */
 343:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SetModuleClock(XMC_CCU4_MODULE_t *const module, const XMC_CCU4_CLOCK_t clock)
 344:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 444              	 .loc 2 344 0
 445              	 .cfi_startproc
 446              	 
 447              	 
 448              	 
 449 0000 80B4     	 push {r7}
 450              	.LCFI37:
 451              	 .cfi_def_cfa_offset 4
 452              	 .cfi_offset 7,-4
 453 0002 85B0     	 sub sp,sp,#20
 454              	.LCFI38:
 455              	 .cfi_def_cfa_offset 24
 456 0004 00AF     	 add r7,sp,#0
 457              	.LCFI39:
 458              	 .cfi_def_cfa_register 7
 459 0006 7860     	 str r0,[r7,#4]
 460 0008 0B46     	 mov r3,r1
 461 000a FB70     	 strb r3,[r7,#3]
 345:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t gctrl;
 346:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 347:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SetModuleClock:Invalid Module Pointer", XMC_CCU4_IsValidModule(module));
 348:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SetModuleClock:Invalid Module Clock", XMC_CCU4_SLICE_CHECK_CLOCK(clock));
 349:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 350:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl = module->GCTRL;
 462              	 .loc 2 350 0
 463 000c 7B68     	 ldr r3,[r7,#4]
 464 000e 1B68     	 ldr r3,[r3]
 465 0010 FB60     	 str r3,[r7,#12]
 351:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl &= ~((uint32_t) CCU4_GCTRL_PCIS_Msk);
 466              	 .loc 2 351 0
 467 0012 FB68     	 ldr r3,[r7,#12]
 468 0014 23F03003 	 bic r3,r3,#48
 469 0018 FB60     	 str r3,[r7,#12]
 352:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl |= ((uint32_t) clock) << CCU4_GCTRL_PCIS_Pos;
 470              	 .loc 2 352 0
 471 001a FB78     	 ldrb r3,[r7,#3]
 472 001c 1B01     	 lsls r3,r3,#4
 473 001e FA68     	 ldr r2,[r7,#12]
 474 0020 1343     	 orrs r3,r3,r2
 475 0022 FB60     	 str r3,[r7,#12]
 353:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 354:../Libraries/XMCLib/src/xmc_ccu4.c ****   module->GCTRL = gctrl;
 476              	 .loc 2 354 0
 477 0024 7B68     	 ldr r3,[r7,#4]
 478 0026 FA68     	 ldr r2,[r7,#12]
 479 0028 1A60     	 str r2,[r3]
 355:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 480              	 .loc 2 355 0
 481 002a 1437     	 adds r7,r7,#20
 482              	.LCFI40:
 483              	 .cfi_def_cfa_offset 4
 484 002c BD46     	 mov sp,r7
 485              	.LCFI41:
 486              	 .cfi_def_cfa_register 13
 487              	 
 488 002e 5DF8047B 	 ldr r7,[sp],#4
 489              	.LCFI42:
 490              	 .cfi_restore 7
 491              	 .cfi_def_cfa_offset 0
 492 0032 7047     	 bx lr
 493              	 .cfi_endproc
 494              	.LFE198:
 496              	 .section .text.XMC_CCU4_SetMultiChannelShadowTransferMode,"ax",%progbits
 497              	 .align 2
 498              	 .global XMC_CCU4_SetMultiChannelShadowTransferMode
 499              	 .thumb
 500              	 .thumb_func
 502              	XMC_CCU4_SetMultiChannelShadowTransferMode:
 503              	.LFB199:
 356:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 357:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure the multichannel shadow transfer request via SW and via the CCU4x.MCSS input. *
 358:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SetMultiChannelShadowTransferMode(XMC_CCU4_MODULE_t *const module, const uint32_t sli
 359:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 504              	 .loc 2 359 0
 505              	 .cfi_startproc
 506              	 
 507              	 
 508              	 
 509 0000 80B4     	 push {r7}
 510              	.LCFI43:
 511              	 .cfi_def_cfa_offset 4
 512              	 .cfi_offset 7,-4
 513 0002 85B0     	 sub sp,sp,#20
 514              	.LCFI44:
 515              	 .cfi_def_cfa_offset 24
 516 0004 00AF     	 add r7,sp,#0
 517              	.LCFI45:
 518              	 .cfi_def_cfa_register 7
 519 0006 7860     	 str r0,[r7,#4]
 520 0008 3960     	 str r1,[r7]
 360:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t gctrl;
 361:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 362:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SetMultiChannelShadowTransferMode:Invalid module Pointer", XMC_CCU4_IsValidM
 363:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 364:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl = module->GCTRL;
 521              	 .loc 2 364 0
 522 000a 7B68     	 ldr r3,[r7,#4]
 523 000c 1B68     	 ldr r3,[r3]
 524 000e FB60     	 str r3,[r7,#12]
 365:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl &= ~((uint32_t)slice_mode_msk >> 16U);
 525              	 .loc 2 365 0
 526 0010 3B68     	 ldr r3,[r7]
 527 0012 1B0C     	 lsrs r3,r3,#16
 528 0014 DB43     	 mvns r3,r3
 529 0016 FA68     	 ldr r2,[r7,#12]
 530 0018 1340     	 ands r3,r3,r2
 531 001a FB60     	 str r3,[r7,#12]
 366:../Libraries/XMCLib/src/xmc_ccu4.c ****   gctrl |= ((uint32_t)slice_mode_msk & 0xFFFFU);
 532              	 .loc 2 366 0
 533 001c 3B68     	 ldr r3,[r7]
 534 001e 9BB2     	 uxth r3,r3
 535 0020 FA68     	 ldr r2,[r7,#12]
 536 0022 1343     	 orrs r3,r3,r2
 537 0024 FB60     	 str r3,[r7,#12]
 367:../Libraries/XMCLib/src/xmc_ccu4.c ****   module->GCTRL = gctrl;
 538              	 .loc 2 367 0
 539 0026 7B68     	 ldr r3,[r7,#4]
 540 0028 FA68     	 ldr r2,[r7,#12]
 541 002a 1A60     	 str r2,[r3]
 368:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 542              	 .loc 2 368 0
 543 002c 1437     	 adds r7,r7,#20
 544              	.LCFI46:
 545              	 .cfi_def_cfa_offset 4
 546 002e BD46     	 mov sp,r7
 547              	.LCFI47:
 548              	 .cfi_def_cfa_register 13
 549              	 
 550 0030 5DF8047B 	 ldr r7,[sp],#4
 551              	.LCFI48:
 552              	 .cfi_restore 7
 553              	 .cfi_def_cfa_offset 0
 554 0034 7047     	 bx lr
 555              	 .cfi_endproc
 556              	.LFE199:
 558 0036 00BF     	 .section .text.XMC_CCU4_SLICE_CompareInit,"ax",%progbits
 559              	 .align 2
 560              	 .global XMC_CCU4_SLICE_CompareInit
 561              	 .thumb
 562              	 .thumb_func
 564              	XMC_CCU4_SLICE_CompareInit:
 565              	.LFB200:
 369:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 370:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure CC4 Slice as Timer */
 371:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_CompareInit(XMC_CCU4_SLICE_t *const slice,
 372:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                            const XMC_CCU4_SLICE_COMPARE_CONFIG_t *const compare_init)
 373:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 566              	 .loc 2 373 0
 567              	 .cfi_startproc
 568              	 
 569              	 
 570              	 
 571 0000 80B4     	 push {r7}
 572              	.LCFI49:
 573              	 .cfi_def_cfa_offset 4
 574              	 .cfi_offset 7,-4
 575 0002 83B0     	 sub sp,sp,#12
 576              	.LCFI50:
 577              	 .cfi_def_cfa_offset 16
 578 0004 00AF     	 add r7,sp,#0
 579              	.LCFI51:
 580              	 .cfi_def_cfa_register 7
 581 0006 7860     	 str r0,[r7,#4]
 582 0008 3960     	 str r1,[r7]
 374:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CompareInit:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 375:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CompareInit:Compare Init Pointer is NULL",
 376:../Libraries/XMCLib/src/xmc_ccu4.c ****              (XMC_CCU4_SLICE_COMPARE_CONFIG_t *) NULL != compare_init);
 377:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 378:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program the timer mode */
 379:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = compare_init->tc;
 583              	 .loc 2 379 0
 584 000a 3B68     	 ldr r3,[r7]
 585 000c 1A68     	 ldr r2,[r3]
 586 000e 7B68     	 ldr r3,[r7,#4]
 587 0010 5A61     	 str r2,[r3,#20]
 380:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Enable the timer concatenation */
 381:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = ((uint32_t) compare_init->timer_concatenation << CCU4_CC4_CMC_TCE_Pos);
 588              	 .loc 2 381 0
 589 0012 3B68     	 ldr r3,[r7]
 590 0014 5B79     	 ldrb r3,[r3,#5]
 591 0016 C3F34013 	 ubfx r3,r3,#5,#1
 592 001a DBB2     	 uxtb r3,r3
 593 001c 1A05     	 lsls r2,r3,#20
 594 001e 7B68     	 ldr r3,[r7,#4]
 595 0020 5A60     	 str r2,[r3,#4]
 382:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program initial prescaler divider value */
 383:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->PSC = (uint32_t) compare_init->prescaler_initval;
 596              	 .loc 2 383 0
 597 0022 3B68     	 ldr r3,[r7]
 598 0024 1B79     	 ldrb r3,[r3,#4]
 599 0026 C3F30303 	 ubfx r3,r3,#0,#4
 600 002a DBB2     	 uxtb r3,r3
 601 002c 1A46     	 mov r2,r3
 602 002e 7B68     	 ldr r3,[r7,#4]
 603 0030 5A62     	 str r2,[r3,#36]
 384:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program the dither compare value */
 385:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->DITS = (uint32_t) compare_init->dither_limit;
 604              	 .loc 2 385 0
 605 0032 3B68     	 ldr r3,[r7]
 606 0034 5B79     	 ldrb r3,[r3,#5]
 607 0036 C3F30303 	 ubfx r3,r3,#0,#4
 608 003a DBB2     	 uxtb r3,r3
 609 003c 1A46     	 mov r2,r3
 610 003e 7B68     	 ldr r3,[r7,#4]
 611 0040 1A62     	 str r2,[r3,#32]
 386:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program timer output passive level */
 387:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->PSL = (uint32_t) compare_init->passive_level;
 612              	 .loc 2 387 0
 613 0042 3B68     	 ldr r3,[r7]
 614 0044 5B79     	 ldrb r3,[r3,#5]
 615 0046 C3F30013 	 ubfx r3,r3,#4,#1
 616 004a DBB2     	 uxtb r3,r3
 617 004c 1A46     	 mov r2,r3
 618 004e 7B68     	 ldr r3,[r7,#4]
 619 0050 9A61     	 str r2,[r3,#24]
 388:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program floating prescaler compare value */
 389:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->FPCS = (uint32_t) compare_init->float_limit;
 620              	 .loc 2 389 0
 621 0052 3B68     	 ldr r3,[r7]
 622 0054 1B79     	 ldrb r3,[r3,#4]
 623 0056 C3F30313 	 ubfx r3,r3,#4,#4
 624 005a DBB2     	 uxtb r3,r3
 625 005c 1A46     	 mov r2,r3
 626 005e 7B68     	 ldr r3,[r7,#4]
 627 0060 DA62     	 str r2,[r3,#44]
 390:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 628              	 .loc 2 390 0
 629 0062 0C37     	 adds r7,r7,#12
 630              	.LCFI52:
 631              	 .cfi_def_cfa_offset 4
 632 0064 BD46     	 mov sp,r7
 633              	.LCFI53:
 634              	 .cfi_def_cfa_register 13
 635              	 
 636 0066 5DF8047B 	 ldr r7,[sp],#4
 637              	.LCFI54:
 638              	 .cfi_restore 7
 639              	 .cfi_def_cfa_offset 0
 640 006a 7047     	 bx lr
 641              	 .cfi_endproc
 642              	.LFE200:
 644              	 .section .text.XMC_CCU4_SLICE_CaptureInit,"ax",%progbits
 645              	 .align 2
 646              	 .global XMC_CCU4_SLICE_CaptureInit
 647              	 .thumb
 648              	 .thumb_func
 650              	XMC_CCU4_SLICE_CaptureInit:
 651              	.LFB201:
 391:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 392:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure CC4 Slice for Capture */
 393:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_CaptureInit(XMC_CCU4_SLICE_t *const slice,
 394:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                        const XMC_CCU4_SLICE_CAPTURE_CONFIG_t *const capture_init)
 395:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 652              	 .loc 2 395 0
 653              	 .cfi_startproc
 654              	 
 655              	 
 656              	 
 657 0000 80B4     	 push {r7}
 658              	.LCFI55:
 659              	 .cfi_def_cfa_offset 4
 660              	 .cfi_offset 7,-4
 661 0002 83B0     	 sub sp,sp,#12
 662              	.LCFI56:
 663              	 .cfi_def_cfa_offset 16
 664 0004 00AF     	 add r7,sp,#0
 665              	.LCFI57:
 666              	 .cfi_def_cfa_register 7
 667 0006 7860     	 str r0,[r7,#4]
 668 0008 3960     	 str r1,[r7]
 396:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CaptureInit:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 397:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CaptureInit:Capture Init Pointer is NULL",
 398:../Libraries/XMCLib/src/xmc_ccu4.c ****              (XMC_CCU4_SLICE_CAPTURE_CONFIG_t *) NULL != capture_init);
 399:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 400:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program the capture mode */
 401:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = capture_init->tc;
 669              	 .loc 2 401 0
 670 000a 3B68     	 ldr r3,[r7]
 671 000c 1A68     	 ldr r2,[r3]
 672 000e 7B68     	 ldr r3,[r7,#4]
 673 0010 5A61     	 str r2,[r3,#20]
 402:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Enable the timer concatenation */
 403:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = ((uint32_t)capture_init->timer_concatenation << CCU4_CC4_CMC_TCE_Pos);
 674              	 .loc 2 403 0
 675 0012 3B68     	 ldr r3,[r7]
 676 0014 5B79     	 ldrb r3,[r3,#5]
 677 0016 C3F30003 	 ubfx r3,r3,#0,#1
 678 001a DBB2     	 uxtb r3,r3
 679 001c 1A05     	 lsls r2,r3,#20
 680 001e 7B68     	 ldr r3,[r7,#4]
 681 0020 5A60     	 str r2,[r3,#4]
 404:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program initial prescaler divider value */
 405:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->PSC = (uint32_t) capture_init->prescaler_initval;
 682              	 .loc 2 405 0
 683 0022 3B68     	 ldr r3,[r7]
 684 0024 1B79     	 ldrb r3,[r3,#4]
 685 0026 C3F30303 	 ubfx r3,r3,#0,#4
 686 002a DBB2     	 uxtb r3,r3
 687 002c 1A46     	 mov r2,r3
 688 002e 7B68     	 ldr r3,[r7,#4]
 689 0030 5A62     	 str r2,[r3,#36]
 406:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program initial floating prescaler compare value */
 407:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->FPCS = (uint32_t) capture_init->float_limit;
 690              	 .loc 2 407 0
 691 0032 3B68     	 ldr r3,[r7]
 692 0034 1B79     	 ldrb r3,[r3,#4]
 693 0036 C3F30313 	 ubfx r3,r3,#4,#4
 694 003a DBB2     	 uxtb r3,r3
 695 003c 1A46     	 mov r2,r3
 696 003e 7B68     	 ldr r3,[r7,#4]
 697 0040 DA62     	 str r2,[r3,#44]
 408:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 698              	 .loc 2 408 0
 699 0042 0C37     	 adds r7,r7,#12
 700              	.LCFI58:
 701              	 .cfi_def_cfa_offset 4
 702 0044 BD46     	 mov sp,r7
 703              	.LCFI59:
 704              	 .cfi_def_cfa_register 13
 705              	 
 706 0046 5DF8047B 	 ldr r7,[sp],#4
 707              	.LCFI60:
 708              	 .cfi_restore 7
 709              	 .cfi_def_cfa_offset 0
 710 004a 7047     	 bx lr
 711              	 .cfi_endproc
 712              	.LFE201:
 714              	 .section .text.XMC_CCU4_SLICE_StartConfig,"ax",%progbits
 715              	 .align 2
 716              	 .global XMC_CCU4_SLICE_StartConfig
 717              	 .thumb
 718              	 .thumb_func
 720              	XMC_CCU4_SLICE_StartConfig:
 721              	.LFB202:
 409:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 410:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 411:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure the Start trigger function of a slice */
 412:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_StartConfig(XMC_CCU4_SLICE_t *const slice,
 413:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                        const XMC_CCU4_SLICE_EVENT_t event,
 414:../Libraries/XMCLib/src/xmc_ccu4.c ****                                 const XMC_CCU4_SLICE_START_MODE_t start_mode)
 415:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 722              	 .loc 2 415 0
 723              	 .cfi_startproc
 724              	 
 725              	 
 726              	 
 727 0000 80B4     	 push {r7}
 728              	.LCFI61:
 729              	 .cfi_def_cfa_offset 4
 730              	 .cfi_offset 7,-4
 731 0002 85B0     	 sub sp,sp,#20
 732              	.LCFI62:
 733              	 .cfi_def_cfa_offset 24
 734 0004 00AF     	 add r7,sp,#0
 735              	.LCFI63:
 736              	 .cfi_def_cfa_register 7
 737 0006 7860     	 str r0,[r7,#4]
 738 0008 0B46     	 mov r3,r1
 739 000a FB70     	 strb r3,[r7,#3]
 740 000c 1346     	 mov r3,r2
 741 000e BB70     	 strb r3,[r7,#2]
 416:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 417:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t tc;
 418:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 419:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StartConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 420:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StartConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 421:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StartConfig:Invalid Start Mode", 
 422:../Libraries/XMCLib/src/xmc_ccu4.c ****              ((start_mode == XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR) ||\
 423:../Libraries/XMCLib/src/xmc_ccu4.c **** 		          (start_mode == XMC_CCU4_SLICE_START_MODE_TIMER_START)));
 424:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First, Bind the event with the stop function */
 425:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 742              	 .loc 2 425 0
 743 0010 7B68     	 ldr r3,[r7,#4]
 744 0012 5B68     	 ldr r3,[r3,#4]
 745 0014 BB60     	 str r3,[r7,#8]
 426:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_STRTS_Msk);
 746              	 .loc 2 426 0
 747 0016 BB68     	 ldr r3,[r7,#8]
 748 0018 23F00303 	 bic r3,r3,#3
 749 001c BB60     	 str r3,[r7,#8]
 427:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_STRTS_Pos;
 750              	 .loc 2 427 0
 751 001e FB78     	 ldrb r3,[r7,#3]
 752 0020 BA68     	 ldr r2,[r7,#8]
 753 0022 1343     	 orrs r3,r3,r2
 754 0024 BB60     	 str r3,[r7,#8]
 428:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 429:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 755              	 .loc 2 429 0
 756 0026 7B68     	 ldr r3,[r7,#4]
 757 0028 BA68     	 ldr r2,[r7,#8]
 758 002a 5A60     	 str r2,[r3,#4]
 430:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 431:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc  = slice->TC;
 759              	 .loc 2 431 0
 760 002c 7B68     	 ldr r3,[r7,#4]
 761 002e 5B69     	 ldr r3,[r3,#20]
 762 0030 FB60     	 str r3,[r7,#12]
 432:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, Configure the start mode */
 433:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (start_mode == XMC_CCU4_SLICE_START_MODE_TIMER_START_CLEAR)
 763              	 .loc 2 433 0
 764 0032 BB78     	 ldrb r3,[r7,#2]
 765 0034 012B     	 cmp r3,#1
 766 0036 04D1     	 bne .L31
 434:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 435:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (uint32_t)CCU4_CC4_TC_STRM_Msk;
 767              	 .loc 2 435 0
 768 0038 FB68     	 ldr r3,[r7,#12]
 769 003a 43F48063 	 orr r3,r3,#1024
 770 003e FB60     	 str r3,[r7,#12]
 771 0040 03E0     	 b .L32
 772              	.L31:
 436:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 437:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 438:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 439:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc &= ~((uint32_t)CCU4_CC4_TC_STRM_Msk);
 773              	 .loc 2 439 0
 774 0042 FB68     	 ldr r3,[r7,#12]
 775 0044 23F48063 	 bic r3,r3,#1024
 776 0048 FB60     	 str r3,[r7,#12]
 777              	.L32:
 440:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 441:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 442:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = tc;
 778              	 .loc 2 442 0
 779 004a 7B68     	 ldr r3,[r7,#4]
 780 004c FA68     	 ldr r2,[r7,#12]
 781 004e 5A61     	 str r2,[r3,#20]
 443:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 782              	 .loc 2 443 0
 783 0050 1437     	 adds r7,r7,#20
 784              	.LCFI64:
 785              	 .cfi_def_cfa_offset 4
 786 0052 BD46     	 mov sp,r7
 787              	.LCFI65:
 788              	 .cfi_def_cfa_register 13
 789              	 
 790 0054 5DF8047B 	 ldr r7,[sp],#4
 791              	.LCFI66:
 792              	 .cfi_restore 7
 793              	 .cfi_def_cfa_offset 0
 794 0058 7047     	 bx lr
 795              	 .cfi_endproc
 796              	.LFE202:
 798 005a 00BF     	 .section .text.XMC_CCU4_SLICE_StopConfig,"ax",%progbits
 799              	 .align 2
 800              	 .global XMC_CCU4_SLICE_StopConfig
 801              	 .thumb
 802              	 .thumb_func
 804              	XMC_CCU4_SLICE_StopConfig:
 805              	.LFB203:
 444:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 445:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure the Stop trigger function of a slice */
 446:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_StopConfig(XMC_CCU4_SLICE_t *const slice,
 447:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                       const XMC_CCU4_SLICE_EVENT_t event,
 448:../Libraries/XMCLib/src/xmc_ccu4.c ****                                const XMC_CCU4_SLICE_END_MODE_t end_mode)
 449:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 806              	 .loc 2 449 0
 807              	 .cfi_startproc
 808              	 
 809              	 
 810              	 
 811 0000 80B4     	 push {r7}
 812              	.LCFI67:
 813              	 .cfi_def_cfa_offset 4
 814              	 .cfi_offset 7,-4
 815 0002 85B0     	 sub sp,sp,#20
 816              	.LCFI68:
 817              	 .cfi_def_cfa_offset 24
 818 0004 00AF     	 add r7,sp,#0
 819              	.LCFI69:
 820              	 .cfi_def_cfa_register 7
 821 0006 7860     	 str r0,[r7,#4]
 822 0008 0B46     	 mov r3,r1
 823 000a FB70     	 strb r3,[r7,#3]
 824 000c 1346     	 mov r3,r2
 825 000e BB70     	 strb r3,[r7,#2]
 450:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 451:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t tc;
 452:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 453:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StopConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 454:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StopConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 455:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StopConfig:Invalid Start Mode", XMC_CCU4_CHECK_END_MODE(end_mode));
 456:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 457:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First, Bind the event with the stop function */
 458:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 826              	 .loc 2 458 0
 827 0010 7B68     	 ldr r3,[r7,#4]
 828 0012 5B68     	 ldr r3,[r3,#4]
 829 0014 FB60     	 str r3,[r7,#12]
 459:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_ENDS_Msk);
 830              	 .loc 2 459 0
 831 0016 FB68     	 ldr r3,[r7,#12]
 832 0018 23F00C03 	 bic r3,r3,#12
 833 001c FB60     	 str r3,[r7,#12]
 460:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_ENDS_Pos;
 834              	 .loc 2 460 0
 835 001e FB78     	 ldrb r3,[r7,#3]
 836 0020 9B00     	 lsls r3,r3,#2
 837 0022 FA68     	 ldr r2,[r7,#12]
 838 0024 1343     	 orrs r3,r3,r2
 839 0026 FB60     	 str r3,[r7,#12]
 461:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 462:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 840              	 .loc 2 462 0
 841 0028 7B68     	 ldr r3,[r7,#4]
 842 002a FA68     	 ldr r2,[r7,#12]
 843 002c 5A60     	 str r2,[r3,#4]
 463:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 464:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, Configure the stop mode */
 465:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc = slice->TC;
 844              	 .loc 2 465 0
 845 002e 7B68     	 ldr r3,[r7,#4]
 846 0030 5B69     	 ldr r3,[r3,#20]
 847 0032 BB60     	 str r3,[r7,#8]
 466:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc &= ~((uint32_t) CCU4_CC4_TC_ENDM_Msk);
 848              	 .loc 2 466 0
 849 0034 BB68     	 ldr r3,[r7,#8]
 850 0036 23F44073 	 bic r3,r3,#768
 851 003a BB60     	 str r3,[r7,#8]
 467:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc |= ((uint32_t) end_mode) << CCU4_CC4_TC_ENDM_Pos;
 852              	 .loc 2 467 0
 853 003c BB78     	 ldrb r3,[r7,#2]
 854 003e 1B02     	 lsls r3,r3,#8
 855 0040 BA68     	 ldr r2,[r7,#8]
 856 0042 1343     	 orrs r3,r3,r2
 857 0044 BB60     	 str r3,[r7,#8]
 468:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 469:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = tc;
 858              	 .loc 2 469 0
 859 0046 7B68     	 ldr r3,[r7,#4]
 860 0048 BA68     	 ldr r2,[r7,#8]
 861 004a 5A61     	 str r2,[r3,#20]
 470:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 862              	 .loc 2 470 0
 863 004c 1437     	 adds r7,r7,#20
 864              	.LCFI70:
 865              	 .cfi_def_cfa_offset 4
 866 004e BD46     	 mov sp,r7
 867              	.LCFI71:
 868              	 .cfi_def_cfa_register 13
 869              	 
 870 0050 5DF8047B 	 ldr r7,[sp],#4
 871              	.LCFI72:
 872              	 .cfi_restore 7
 873              	 .cfi_def_cfa_offset 0
 874 0054 7047     	 bx lr
 875              	 .cfi_endproc
 876              	.LFE203:
 878 0056 00BF     	 .section .text.XMC_CCU4_SLICE_LoadConfig,"ax",%progbits
 879              	 .align 2
 880              	 .global XMC_CCU4_SLICE_LoadConfig
 881              	 .thumb
 882              	 .thumb_func
 884              	XMC_CCU4_SLICE_LoadConfig:
 885              	.LFB204:
 471:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 472:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure the Load trigger function of a slice */
 473:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_LoadConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)
 474:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 886              	 .loc 2 474 0
 887              	 .cfi_startproc
 888              	 
 889              	 
 890              	 
 891 0000 80B4     	 push {r7}
 892              	.LCFI73:
 893              	 .cfi_def_cfa_offset 4
 894              	 .cfi_offset 7,-4
 895 0002 85B0     	 sub sp,sp,#20
 896              	.LCFI74:
 897              	 .cfi_def_cfa_offset 24
 898 0004 00AF     	 add r7,sp,#0
 899              	.LCFI75:
 900              	 .cfi_def_cfa_register 7
 901 0006 7860     	 str r0,[r7,#4]
 902 0008 0B46     	 mov r3,r1
 903 000a FB70     	 strb r3,[r7,#3]
 475:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 476:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 477:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_LoadConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 478:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_LoadConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 479:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 480:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the load function */
 481:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 904              	 .loc 2 481 0
 905 000c 7B68     	 ldr r3,[r7,#4]
 906 000e 5B68     	 ldr r3,[r3,#4]
 907 0010 FB60     	 str r3,[r7,#12]
 482:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_LDS_Msk);
 908              	 .loc 2 482 0
 909 0012 FB68     	 ldr r3,[r7,#12]
 910 0014 23F44053 	 bic r3,r3,#12288
 911 0018 FB60     	 str r3,[r7,#12]
 483:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_LDS_Pos;
 912              	 .loc 2 483 0
 913 001a FB78     	 ldrb r3,[r7,#3]
 914 001c 1B03     	 lsls r3,r3,#12
 915 001e FA68     	 ldr r2,[r7,#12]
 916 0020 1343     	 orrs r3,r3,r2
 917 0022 FB60     	 str r3,[r7,#12]
 484:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 485:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 918              	 .loc 2 485 0
 919 0024 7B68     	 ldr r3,[r7,#4]
 920 0026 FA68     	 ldr r2,[r7,#12]
 921 0028 5A60     	 str r2,[r3,#4]
 486:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 922              	 .loc 2 486 0
 923 002a 1437     	 adds r7,r7,#20
 924              	.LCFI76:
 925              	 .cfi_def_cfa_offset 4
 926 002c BD46     	 mov sp,r7
 927              	.LCFI77:
 928              	 .cfi_def_cfa_register 13
 929              	 
 930 002e 5DF8047B 	 ldr r7,[sp],#4
 931              	.LCFI78:
 932              	 .cfi_restore 7
 933              	 .cfi_def_cfa_offset 0
 934 0032 7047     	 bx lr
 935              	 .cfi_endproc
 936              	.LFE204:
 938              	 .section .text.XMC_CCU4_SLICE_ModulationConfig,"ax",%progbits
 939              	 .align 2
 940              	 .global XMC_CCU4_SLICE_ModulationConfig
 941              	 .thumb
 942              	 .thumb_func
 944              	XMC_CCU4_SLICE_ModulationConfig:
 945              	.LFB205:
 487:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 488:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure the slice modulation function */
 489:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_ModulationConfig(XMC_CCU4_SLICE_t *const slice,
 490:../Libraries/XMCLib/src/xmc_ccu4.c ****                                      const XMC_CCU4_SLICE_EVENT_t event,
 491:../Libraries/XMCLib/src/xmc_ccu4.c ****                                      const XMC_CCU4_SLICE_MODULATION_MODE_t mod_mode,
 492:../Libraries/XMCLib/src/xmc_ccu4.c ****                                      const bool synch_with_pwm)
 493:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 946              	 .loc 2 493 0
 947              	 .cfi_startproc
 948              	 
 949              	 
 950              	 
 951 0000 80B4     	 push {r7}
 952              	.LCFI79:
 953              	 .cfi_def_cfa_offset 4
 954              	 .cfi_offset 7,-4
 955 0002 85B0     	 sub sp,sp,#20
 956              	.LCFI80:
 957              	 .cfi_def_cfa_offset 24
 958 0004 00AF     	 add r7,sp,#0
 959              	.LCFI81:
 960              	 .cfi_def_cfa_register 7
 961 0006 7860     	 str r0,[r7,#4]
 962 0008 0846     	 mov r0,r1
 963 000a 1146     	 mov r1,r2
 964 000c 1A46     	 mov r2,r3
 965 000e 0346     	 mov r3,r0
 966 0010 FB70     	 strb r3,[r7,#3]
 967 0012 0B46     	 mov r3,r1
 968 0014 BB70     	 strb r3,[r7,#2]
 969 0016 1346     	 mov r3,r2
 970 0018 7B70     	 strb r3,[r7,#1]
 494:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 495:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t tc;
 496:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 497:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ModulationConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice))
 498:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ModulationConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(even
 499:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ModulationConfig:Invalid Modulation Mode",
 500:../Libraries/XMCLib/src/xmc_ccu4.c ****              ((mod_mode == XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT) ||\
 501:../Libraries/XMCLib/src/xmc_ccu4.c **** 		          (mod_mode == XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_ST_OUT)));
 502:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 503:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc  = slice->TC;
 971              	 .loc 2 503 0
 972 001a 7B68     	 ldr r3,[r7,#4]
 973 001c 5B69     	 ldr r3,[r3,#20]
 974 001e FB60     	 str r3,[r7,#12]
 504:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 975              	 .loc 2 504 0
 976 0020 7B68     	 ldr r3,[r7,#4]
 977 0022 5B68     	 ldr r3,[r3,#4]
 978 0024 BB60     	 str r3,[r7,#8]
 505:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 506:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First, Bind the event with the modulation function */
 507:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_MOS_Msk);
 979              	 .loc 2 507 0
 980 0026 BB68     	 ldr r3,[r7,#8]
 981 0028 23F44023 	 bic r3,r3,#786432
 982 002c BB60     	 str r3,[r7,#8]
 508:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_MOS_Pos;
 983              	 .loc 2 508 0
 984 002e FB78     	 ldrb r3,[r7,#3]
 985 0030 9B04     	 lsls r3,r3,#18
 986 0032 BA68     	 ldr r2,[r7,#8]
 987 0034 1343     	 orrs r3,r3,r2
 988 0036 BB60     	 str r3,[r7,#8]
 509:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 989              	 .loc 2 509 0
 990 0038 7B68     	 ldr r3,[r7,#4]
 991 003a BA68     	 ldr r2,[r7,#8]
 992 003c 5A60     	 str r2,[r3,#4]
 510:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 511:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, Modulation mode */
 512:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (mod_mode == XMC_CCU4_SLICE_MODULATION_MODE_CLEAR_OUT)
 993              	 .loc 2 512 0
 994 003e BB78     	 ldrb r3,[r7,#2]
 995 0040 012B     	 cmp r3,#1
 996 0042 04D1     	 bne .L36
 513:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 514:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (uint32_t) CCU4_CC4_TC_EMT_Msk;
 997              	 .loc 2 514 0
 998 0044 FB68     	 ldr r3,[r7,#12]
 999 0046 43F08073 	 orr r3,r3,#16777216
 1000 004a FB60     	 str r3,[r7,#12]
 1001 004c 03E0     	 b .L37
 1002              	.L36:
 515:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 516:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 517:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 518:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc &= ~((uint32_t) CCU4_CC4_TC_EMT_Msk);
 1003              	 .loc 2 518 0
 1004 004e FB68     	 ldr r3,[r7,#12]
 1005 0050 23F08073 	 bic r3,r3,#16777216
 1006 0054 FB60     	 str r3,[r7,#12]
 1007              	.L37:
 519:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 520:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 521:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Synchronization of modulation effect with PWM cycle */
 522:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (synch_with_pwm == (bool) true)
 1008              	 .loc 2 522 0
 1009 0056 7B78     	 ldrb r3,[r7,#1]
 1010 0058 002B     	 cmp r3,#0
 1011 005a 04D0     	 beq .L38
 523:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 524:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (uint32_t) CCU4_CC4_TC_EMS_Msk;
 1012              	 .loc 2 524 0
 1013 005c FB68     	 ldr r3,[r7,#12]
 1014 005e 43F40003 	 orr r3,r3,#8388608
 1015 0062 FB60     	 str r3,[r7,#12]
 1016 0064 03E0     	 b .L39
 1017              	.L38:
 525:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 526:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 527:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 528:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc &= ~((uint32_t) CCU4_CC4_TC_EMS_Msk);
 1018              	 .loc 2 528 0
 1019 0066 FB68     	 ldr r3,[r7,#12]
 1020 0068 23F40003 	 bic r3,r3,#8388608
 1021 006c FB60     	 str r3,[r7,#12]
 1022              	.L39:
 529:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 530:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 531:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = tc;
 1023              	 .loc 2 531 0
 1024 006e 7B68     	 ldr r3,[r7,#4]
 1025 0070 FA68     	 ldr r2,[r7,#12]
 1026 0072 5A61     	 str r2,[r3,#20]
 532:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1027              	 .loc 2 532 0
 1028 0074 1437     	 adds r7,r7,#20
 1029              	.LCFI82:
 1030              	 .cfi_def_cfa_offset 4
 1031 0076 BD46     	 mov sp,r7
 1032              	.LCFI83:
 1033              	 .cfi_def_cfa_register 13
 1034              	 
 1035 0078 5DF8047B 	 ldr r7,[sp],#4
 1036              	.LCFI84:
 1037              	 .cfi_restore 7
 1038              	 .cfi_def_cfa_offset 0
 1039 007c 7047     	 bx lr
 1040              	 .cfi_endproc
 1041              	.LFE205:
 1043 007e 00BF     	 .section .text.XMC_CCU4_SLICE_CountConfig,"ax",%progbits
 1044              	 .align 2
 1045              	 .global XMC_CCU4_SLICE_CountConfig
 1046              	 .thumb
 1047              	 .thumb_func
 1049              	XMC_CCU4_SLICE_CountConfig:
 1050              	.LFB206:
 533:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 534:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure the slice count function */
 535:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_CountConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)
 536:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1051              	 .loc 2 536 0
 1052              	 .cfi_startproc
 1053              	 
 1054              	 
 1055              	 
 1056 0000 80B4     	 push {r7}
 1057              	.LCFI85:
 1058              	 .cfi_def_cfa_offset 4
 1059              	 .cfi_offset 7,-4
 1060 0002 85B0     	 sub sp,sp,#20
 1061              	.LCFI86:
 1062              	 .cfi_def_cfa_offset 24
 1063 0004 00AF     	 add r7,sp,#0
 1064              	.LCFI87:
 1065              	 .cfi_def_cfa_register 7
 1066 0006 7860     	 str r0,[r7,#4]
 1067 0008 0B46     	 mov r3,r1
 1068 000a FB70     	 strb r3,[r7,#3]
 537:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 538:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 539:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CountConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 540:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_CountConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 541:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 542:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the count function */
 543:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1069              	 .loc 2 543 0
 1070 000c 7B68     	 ldr r3,[r7,#4]
 1071 000e 5B68     	 ldr r3,[r3,#4]
 1072 0010 FB60     	 str r3,[r7,#12]
 544:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_CNTS_Msk);
 1073              	 .loc 2 544 0
 1074 0012 FB68     	 ldr r3,[r7,#12]
 1075 0014 23F44043 	 bic r3,r3,#49152
 1076 0018 FB60     	 str r3,[r7,#12]
 545:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_CNTS_Pos;
 1077              	 .loc 2 545 0
 1078 001a FB78     	 ldrb r3,[r7,#3]
 1079 001c 9B03     	 lsls r3,r3,#14
 1080 001e FA68     	 ldr r2,[r7,#12]
 1081 0020 1343     	 orrs r3,r3,r2
 1082 0022 FB60     	 str r3,[r7,#12]
 546:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 547:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1083              	 .loc 2 547 0
 1084 0024 7B68     	 ldr r3,[r7,#4]
 1085 0026 FA68     	 ldr r2,[r7,#12]
 1086 0028 5A60     	 str r2,[r3,#4]
 548:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1087              	 .loc 2 548 0
 1088 002a 1437     	 adds r7,r7,#20
 1089              	.LCFI88:
 1090              	 .cfi_def_cfa_offset 4
 1091 002c BD46     	 mov sp,r7
 1092              	.LCFI89:
 1093              	 .cfi_def_cfa_register 13
 1094              	 
 1095 002e 5DF8047B 	 ldr r7,[sp],#4
 1096              	.LCFI90:
 1097              	 .cfi_restore 7
 1098              	 .cfi_def_cfa_offset 0
 1099 0032 7047     	 bx lr
 1100              	 .cfi_endproc
 1101              	.LFE206:
 1103              	 .section .text.XMC_CCU4_SLICE_GateConfig,"ax",%progbits
 1104              	 .align 2
 1105              	 .global XMC_CCU4_SLICE_GateConfig
 1106              	 .thumb
 1107              	 .thumb_func
 1109              	XMC_CCU4_SLICE_GateConfig:
 1110              	.LFB207:
 549:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 550:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure slice gate function */
 551:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_GateConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t event)
 552:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1111              	 .loc 2 552 0
 1112              	 .cfi_startproc
 1113              	 
 1114              	 
 1115              	 
 1116 0000 80B4     	 push {r7}
 1117              	.LCFI91:
 1118              	 .cfi_def_cfa_offset 4
 1119              	 .cfi_offset 7,-4
 1120 0002 85B0     	 sub sp,sp,#20
 1121              	.LCFI92:
 1122              	 .cfi_def_cfa_offset 24
 1123 0004 00AF     	 add r7,sp,#0
 1124              	.LCFI93:
 1125              	 .cfi_def_cfa_register 7
 1126 0006 7860     	 str r0,[r7,#4]
 1127 0008 0B46     	 mov r3,r1
 1128 000a FB70     	 strb r3,[r7,#3]
 553:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 554:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 555:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GateConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 556:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GateConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 557:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 558:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the gate function */
 559:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1129              	 .loc 2 559 0
 1130 000c 7B68     	 ldr r3,[r7,#4]
 1131 000e 5B68     	 ldr r3,[r3,#4]
 1132 0010 FB60     	 str r3,[r7,#12]
 560:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_GATES_Msk);
 1133              	 .loc 2 560 0
 1134 0012 FB68     	 ldr r3,[r7,#12]
 1135 0014 23F44073 	 bic r3,r3,#768
 1136 0018 FB60     	 str r3,[r7,#12]
 561:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_GATES_Pos;
 1137              	 .loc 2 561 0
 1138 001a FB78     	 ldrb r3,[r7,#3]
 1139 001c 1B02     	 lsls r3,r3,#8
 1140 001e FA68     	 ldr r2,[r7,#12]
 1141 0020 1343     	 orrs r3,r3,r2
 1142 0022 FB60     	 str r3,[r7,#12]
 562:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 563:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1143              	 .loc 2 563 0
 1144 0024 7B68     	 ldr r3,[r7,#4]
 1145 0026 FA68     	 ldr r2,[r7,#12]
 1146 0028 5A60     	 str r2,[r3,#4]
 564:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1147              	 .loc 2 564 0
 1148 002a 1437     	 adds r7,r7,#20
 1149              	.LCFI94:
 1150              	 .cfi_def_cfa_offset 4
 1151 002c BD46     	 mov sp,r7
 1152              	.LCFI95:
 1153              	 .cfi_def_cfa_register 13
 1154              	 
 1155 002e 5DF8047B 	 ldr r7,[sp],#4
 1156              	.LCFI96:
 1157              	 .cfi_restore 7
 1158              	 .cfi_def_cfa_offset 0
 1159 0032 7047     	 bx lr
 1160              	 .cfi_endproc
 1161              	.LFE207:
 1163              	 .section .text.XMC_CCU4_SLICE_Capture0Config,"ax",%progbits
 1164              	 .align 2
 1165              	 .global XMC_CCU4_SLICE_Capture0Config
 1166              	 .thumb
 1167              	 .thumb_func
 1169              	XMC_CCU4_SLICE_Capture0Config:
 1170              	.LFB208:
 565:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 566:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure Capture-0 function */
 567:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_Capture0Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
 568:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1171              	 .loc 2 568 0
 1172              	 .cfi_startproc
 1173              	 
 1174              	 
 1175              	 
 1176 0000 80B4     	 push {r7}
 1177              	.LCFI97:
 1178              	 .cfi_def_cfa_offset 4
 1179              	 .cfi_offset 7,-4
 1180 0002 85B0     	 sub sp,sp,#20
 1181              	.LCFI98:
 1182              	 .cfi_def_cfa_offset 24
 1183 0004 00AF     	 add r7,sp,#0
 1184              	.LCFI99:
 1185              	 .cfi_def_cfa_register 7
 1186 0006 7860     	 str r0,[r7,#4]
 1187 0008 0B46     	 mov r3,r1
 1188 000a FB70     	 strb r3,[r7,#3]
 569:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 570:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 571:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_Capture0Config:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 572:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_Capture0Config:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event)
 573:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 574:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the gate function */
 575:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1189              	 .loc 2 575 0
 1190 000c 7B68     	 ldr r3,[r7,#4]
 1191 000e 5B68     	 ldr r3,[r3,#4]
 1192 0010 FB60     	 str r3,[r7,#12]
 576:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_CAP0S_Msk);
 1193              	 .loc 2 576 0
 1194 0012 FB68     	 ldr r3,[r7,#12]
 1195 0014 23F03003 	 bic r3,r3,#48
 1196 0018 FB60     	 str r3,[r7,#12]
 577:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_CAP0S_Pos;
 1197              	 .loc 2 577 0
 1198 001a FB78     	 ldrb r3,[r7,#3]
 1199 001c 1B01     	 lsls r3,r3,#4
 1200 001e FA68     	 ldr r2,[r7,#12]
 1201 0020 1343     	 orrs r3,r3,r2
 1202 0022 FB60     	 str r3,[r7,#12]
 578:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 579:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1203              	 .loc 2 579 0
 1204 0024 7B68     	 ldr r3,[r7,#4]
 1205 0026 FA68     	 ldr r2,[r7,#12]
 1206 0028 5A60     	 str r2,[r3,#4]
 580:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1207              	 .loc 2 580 0
 1208 002a 1437     	 adds r7,r7,#20
 1209              	.LCFI100:
 1210              	 .cfi_def_cfa_offset 4
 1211 002c BD46     	 mov sp,r7
 1212              	.LCFI101:
 1213              	 .cfi_def_cfa_register 13
 1214              	 
 1215 002e 5DF8047B 	 ldr r7,[sp],#4
 1216              	.LCFI102:
 1217              	 .cfi_restore 7
 1218              	 .cfi_def_cfa_offset 0
 1219 0032 7047     	 bx lr
 1220              	 .cfi_endproc
 1221              	.LFE208:
 1223              	 .section .text.XMC_CCU4_SLICE_Capture1Config,"ax",%progbits
 1224              	 .align 2
 1225              	 .global XMC_CCU4_SLICE_Capture1Config
 1226              	 .thumb
 1227              	 .thumb_func
 1229              	XMC_CCU4_SLICE_Capture1Config:
 1230              	.LFB209:
 581:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 582:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure Capture-1 function */
 583:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_Capture1Config(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t even
 584:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1231              	 .loc 2 584 0
 1232              	 .cfi_startproc
 1233              	 
 1234              	 
 1235              	 
 1236 0000 80B4     	 push {r7}
 1237              	.LCFI103:
 1238              	 .cfi_def_cfa_offset 4
 1239              	 .cfi_offset 7,-4
 1240 0002 85B0     	 sub sp,sp,#20
 1241              	.LCFI104:
 1242              	 .cfi_def_cfa_offset 24
 1243 0004 00AF     	 add r7,sp,#0
 1244              	.LCFI105:
 1245              	 .cfi_def_cfa_register 7
 1246 0006 7860     	 str r0,[r7,#4]
 1247 0008 0B46     	 mov r3,r1
 1248 000a FB70     	 strb r3,[r7,#3]
 585:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 586:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 587:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_Capture1Config:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 588:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_Capture1Config:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event)
 589:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 590:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the gate function */
 591:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1249              	 .loc 2 591 0
 1250 000c 7B68     	 ldr r3,[r7,#4]
 1251 000e 5B68     	 ldr r3,[r3,#4]
 1252 0010 FB60     	 str r3,[r7,#12]
 592:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_CAP1S_Msk);
 1253              	 .loc 2 592 0
 1254 0012 FB68     	 ldr r3,[r7,#12]
 1255 0014 23F0C003 	 bic r3,r3,#192
 1256 0018 FB60     	 str r3,[r7,#12]
 593:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_CAP1S_Pos;
 1257              	 .loc 2 593 0
 1258 001a FB78     	 ldrb r3,[r7,#3]
 1259 001c 9B01     	 lsls r3,r3,#6
 1260 001e FA68     	 ldr r2,[r7,#12]
 1261 0020 1343     	 orrs r3,r3,r2
 1262 0022 FB60     	 str r3,[r7,#12]
 594:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 595:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1263              	 .loc 2 595 0
 1264 0024 7B68     	 ldr r3,[r7,#4]
 1265 0026 FA68     	 ldr r2,[r7,#12]
 1266 0028 5A60     	 str r2,[r3,#4]
 596:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1267              	 .loc 2 596 0
 1268 002a 1437     	 adds r7,r7,#20
 1269              	.LCFI106:
 1270              	 .cfi_def_cfa_offset 4
 1271 002c BD46     	 mov sp,r7
 1272              	.LCFI107:
 1273              	 .cfi_def_cfa_register 13
 1274              	 
 1275 002e 5DF8047B 	 ldr r7,[sp],#4
 1276              	.LCFI108:
 1277              	 .cfi_restore 7
 1278              	 .cfi_def_cfa_offset 0
 1279 0032 7047     	 bx lr
 1280              	 .cfi_endproc
 1281              	.LFE209:
 1283              	 .section .text.XMC_CCU4_SLICE_DirectionConfig,"ax",%progbits
 1284              	 .align 2
 1285              	 .global XMC_CCU4_SLICE_DirectionConfig
 1286              	 .thumb
 1287              	 .thumb_func
 1289              	XMC_CCU4_SLICE_DirectionConfig:
 1290              	.LFB210:
 597:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 598:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure direction function */
 599:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_DirectionConfig(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_EVENT_t eve
 600:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1291              	 .loc 2 600 0
 1292              	 .cfi_startproc
 1293              	 
 1294              	 
 1295              	 
 1296 0000 80B4     	 push {r7}
 1297              	.LCFI109:
 1298              	 .cfi_def_cfa_offset 4
 1299              	 .cfi_offset 7,-4
 1300 0002 85B0     	 sub sp,sp,#20
 1301              	.LCFI110:
 1302              	 .cfi_def_cfa_offset 24
 1303 0004 00AF     	 add r7,sp,#0
 1304              	.LCFI111:
 1305              	 .cfi_def_cfa_register 7
 1306 0006 7860     	 str r0,[r7,#4]
 1307 0008 0B46     	 mov r3,r1
 1308 000a FB70     	 strb r3,[r7,#3]
 601:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 602:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 603:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_DirectionConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 604:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_DirectionConfig:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event
 605:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 606:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the direction function */
 607:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1309              	 .loc 2 607 0
 1310 000c 7B68     	 ldr r3,[r7,#4]
 1311 000e 5B68     	 ldr r3,[r3,#4]
 1312 0010 FB60     	 str r3,[r7,#12]
 608:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_UDS_Msk);
 1313              	 .loc 2 608 0
 1314 0012 FB68     	 ldr r3,[r7,#12]
 1315 0014 23F44063 	 bic r3,r3,#3072
 1316 0018 FB60     	 str r3,[r7,#12]
 609:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) event) << CCU4_CC4_CMC_UDS_Pos;
 1317              	 .loc 2 609 0
 1318 001a FB78     	 ldrb r3,[r7,#3]
 1319 001c 9B02     	 lsls r3,r3,#10
 1320 001e FA68     	 ldr r2,[r7,#12]
 1321 0020 1343     	 orrs r3,r3,r2
 1322 0022 FB60     	 str r3,[r7,#12]
 610:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 611:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1323              	 .loc 2 611 0
 1324 0024 7B68     	 ldr r3,[r7,#4]
 1325 0026 FA68     	 ldr r2,[r7,#12]
 1326 0028 5A60     	 str r2,[r3,#4]
 612:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1327              	 .loc 2 612 0
 1328 002a 1437     	 adds r7,r7,#20
 1329              	.LCFI112:
 1330              	 .cfi_def_cfa_offset 4
 1331 002c BD46     	 mov sp,r7
 1332              	.LCFI113:
 1333              	 .cfi_def_cfa_register 13
 1334              	 
 1335 002e 5DF8047B 	 ldr r7,[sp],#4
 1336              	.LCFI114:
 1337              	 .cfi_restore 7
 1338              	 .cfi_def_cfa_offset 0
 1339 0032 7047     	 bx lr
 1340              	 .cfi_endproc
 1341              	.LFE210:
 1343              	 .section .text.XMC_CCU4_SLICE_StatusBitOverrideConfig,"ax",%progbits
 1344              	 .align 2
 1345              	 .global XMC_CCU4_SLICE_StatusBitOverrideConfig
 1346              	 .thumb
 1347              	 .thumb_func
 1349              	XMC_CCU4_SLICE_StatusBitOverrideConfig:
 1350              	.LFB211:
 613:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 614:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure slice status bit override function */
 615:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_StatusBitOverrideConfig(XMC_CCU4_SLICE_t *const slice)
 616:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1351              	 .loc 2 616 0
 1352              	 .cfi_startproc
 1353              	 
 1354              	 
 1355              	 
 1356 0000 80B4     	 push {r7}
 1357              	.LCFI115:
 1358              	 .cfi_def_cfa_offset 4
 1359              	 .cfi_offset 7,-4
 1360 0002 85B0     	 sub sp,sp,#20
 1361              	.LCFI116:
 1362              	 .cfi_def_cfa_offset 24
 1363 0004 00AF     	 add r7,sp,#0
 1364              	.LCFI117:
 1365              	 .cfi_def_cfa_register 7
 1366 0006 7860     	 str r0,[r7,#4]
 617:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 618:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 619:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_StatusBitOverrideConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
 620:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 621:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Bind the event with the override function */
 622:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1367              	 .loc 2 622 0
 1368 0008 7B68     	 ldr r3,[r7,#4]
 1369 000a 5B68     	 ldr r3,[r3,#4]
 1370 000c FB60     	 str r3,[r7,#12]
 623:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Map status bit trigger override to Event 1 & 
 624:../Libraries/XMCLib/src/xmc_ccu4.c ****          status bit value override to Event 2 */
 625:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_OFS_Msk);
 1371              	 .loc 2 625 0
 1372 000e FB68     	 ldr r3,[r7,#12]
 1373 0010 23F48033 	 bic r3,r3,#65536
 1374 0014 FB60     	 str r3,[r7,#12]
 626:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) 1) << CCU4_CC4_CMC_OFS_Pos;
 1375              	 .loc 2 626 0
 1376 0016 FB68     	 ldr r3,[r7,#12]
 1377 0018 43F48033 	 orr r3,r3,#65536
 1378 001c FB60     	 str r3,[r7,#12]
 627:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 628:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1379              	 .loc 2 628 0
 1380 001e 7B68     	 ldr r3,[r7,#4]
 1381 0020 FA68     	 ldr r2,[r7,#12]
 1382 0022 5A60     	 str r2,[r3,#4]
 629:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1383              	 .loc 2 629 0
 1384 0024 1437     	 adds r7,r7,#20
 1385              	.LCFI118:
 1386              	 .cfi_def_cfa_offset 4
 1387 0026 BD46     	 mov sp,r7
 1388              	.LCFI119:
 1389              	 .cfi_def_cfa_register 13
 1390              	 
 1391 0028 5DF8047B 	 ldr r7,[sp],#4
 1392              	.LCFI120:
 1393              	 .cfi_restore 7
 1394              	 .cfi_def_cfa_offset 0
 1395 002c 7047     	 bx lr
 1396              	 .cfi_endproc
 1397              	.LFE211:
 1399 002e 00BF     	 .section .text.XMC_CCU4_SLICE_TrapConfig,"ax",%progbits
 1400              	 .align 2
 1401              	 .global XMC_CCU4_SLICE_TrapConfig
 1402              	 .thumb
 1403              	 .thumb_func
 1405              	XMC_CCU4_SLICE_TrapConfig:
 1406              	.LFB212:
 630:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 631:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure trap function */
 632:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_TrapConfig(XMC_CCU4_SLICE_t *const slice,
 633:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                           const XMC_CCU4_SLICE_TRAP_EXIT_MODE_t exit_mode,
 634:../Libraries/XMCLib/src/xmc_ccu4.c ****                                const bool synch_with_pwm)
 635:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1407              	 .loc 2 635 0
 1408              	 .cfi_startproc
 1409              	 
 1410              	 
 1411              	 
 1412 0000 80B4     	 push {r7}
 1413              	.LCFI121:
 1414              	 .cfi_def_cfa_offset 4
 1415              	 .cfi_offset 7,-4
 1416 0002 85B0     	 sub sp,sp,#20
 1417              	.LCFI122:
 1418              	 .cfi_def_cfa_offset 24
 1419 0004 00AF     	 add r7,sp,#0
 1420              	.LCFI123:
 1421              	 .cfi_def_cfa_register 7
 1422 0006 7860     	 str r0,[r7,#4]
 1423 0008 0B46     	 mov r3,r1
 1424 000a FB70     	 strb r3,[r7,#3]
 1425 000c 1346     	 mov r3,r2
 1426 000e BB70     	 strb r3,[r7,#2]
 636:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cmc;
 637:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t tc;
 638:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 639:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_TrapConfig:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 640:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_TrapConfig:Invalid Exit Mode", ((exit_mode == XMC_CCU4_SLICE_TRAP_EXIT
 641:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                                                         (exit_mode == XMC_CCU4_SLICE_TRAP_EXIT_M
 642:../Libraries/XMCLib/src/xmc_ccu4.c ****     
 643:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First, Map trap function to Event 2 */
 644:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc = slice->CMC;
 1427              	 .loc 2 644 0
 1428 0010 7B68     	 ldr r3,[r7,#4]
 1429 0012 5B68     	 ldr r3,[r3,#4]
 1430 0014 BB60     	 str r3,[r7,#8]
 645:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc &= ~((uint32_t) CCU4_CC4_CMC_TS_Msk);
 1431              	 .loc 2 645 0
 1432 0016 BB68     	 ldr r3,[r7,#8]
 1433 0018 23F40033 	 bic r3,r3,#131072
 1434 001c BB60     	 str r3,[r7,#8]
 646:../Libraries/XMCLib/src/xmc_ccu4.c ****   cmc |= ((uint32_t) 1) << CCU4_CC4_CMC_TS_Pos;
 1435              	 .loc 2 646 0
 1436 001e BB68     	 ldr r3,[r7,#8]
 1437 0020 43F40033 	 orr r3,r3,#131072
 1438 0024 BB60     	 str r3,[r7,#8]
 647:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->CMC = cmc;
 1439              	 .loc 2 647 0
 1440 0026 7B68     	 ldr r3,[r7,#4]
 1441 0028 BA68     	 ldr r2,[r7,#8]
 1442 002a 5A60     	 str r2,[r3,#4]
 648:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 649:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, Configure synchronization option */
 650:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc = slice->TC;
 1443              	 .loc 2 650 0
 1444 002c 7B68     	 ldr r3,[r7,#4]
 1445 002e 5B69     	 ldr r3,[r3,#20]
 1446 0030 FB60     	 str r3,[r7,#12]
 651:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 652:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (synch_with_pwm == (bool) true)
 1447              	 .loc 2 652 0
 1448 0032 BB78     	 ldrb r3,[r7,#2]
 1449 0034 002B     	 cmp r3,#0
 1450 0036 04D0     	 beq .L47
 653:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 654:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (uint32_t) CCU4_CC4_TC_TRPSE_Msk;
 1451              	 .loc 2 654 0
 1452 0038 FB68     	 ldr r3,[r7,#12]
 1453 003a 43F40013 	 orr r3,r3,#2097152
 1454 003e FB60     	 str r3,[r7,#12]
 1455 0040 03E0     	 b .L48
 1456              	.L47:
 655:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 656:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 657:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 658:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc &= ~((uint32_t) CCU4_CC4_TC_TRPSE_Msk);
 1457              	 .loc 2 658 0
 1458 0042 FB68     	 ldr r3,[r7,#12]
 1459 0044 23F40013 	 bic r3,r3,#2097152
 1460 0048 FB60     	 str r3,[r7,#12]
 1461              	.L48:
 659:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 660:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 661:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure exit mode */
 662:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (exit_mode == XMC_CCU4_SLICE_TRAP_EXIT_MODE_SW)
 1462              	 .loc 2 662 0
 1463 004a FB78     	 ldrb r3,[r7,#3]
 1464 004c 012B     	 cmp r3,#1
 1465 004e 04D1     	 bne .L49
 663:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 664:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (uint32_t) CCU4_CC4_TC_TRPSW_Msk;
 1466              	 .loc 2 664 0
 1467 0050 FB68     	 ldr r3,[r7,#12]
 1468 0052 43F48003 	 orr r3,r3,#4194304
 1469 0056 FB60     	 str r3,[r7,#12]
 1470 0058 03E0     	 b .L50
 1471              	.L49:
 665:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 666:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 667:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 668:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc &= ~((uint32_t) CCU4_CC4_TC_TRPSW_Msk);
 1472              	 .loc 2 668 0
 1473 005a FB68     	 ldr r3,[r7,#12]
 1474 005c 23F48003 	 bic r3,r3,#4194304
 1475 0060 FB60     	 str r3,[r7,#12]
 1476              	.L50:
 669:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 670:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 671:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = tc;
 1477              	 .loc 2 671 0
 1478 0062 7B68     	 ldr r3,[r7,#4]
 1479 0064 FA68     	 ldr r2,[r7,#12]
 1480 0066 5A61     	 str r2,[r3,#20]
 672:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1481              	 .loc 2 672 0
 1482 0068 1437     	 adds r7,r7,#20
 1483              	.LCFI124:
 1484              	 .cfi_def_cfa_offset 4
 1485 006a BD46     	 mov sp,r7
 1486              	.LCFI125:
 1487              	 .cfi_def_cfa_register 13
 1488              	 
 1489 006c 5DF8047B 	 ldr r7,[sp],#4
 1490              	.LCFI126:
 1491              	 .cfi_restore 7
 1492              	 .cfi_def_cfa_offset 0
 1493 0070 7047     	 bx lr
 1494              	 .cfi_endproc
 1495              	.LFE212:
 1497 0072 00BF     	 .section .text.XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent,"ax",%progbits
 1498              	 .align 2
 1499              	 .global XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent
 1500              	 .thumb
 1501              	 .thumb_func
 1503              	XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:
 1504              	.LFB213:
 673:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 674:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure a slice Status Bit Override event */
 675:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU4_SLICE_t *const slice,
 676:../Libraries/XMCLib/src/xmc_ccu4.c ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev1_
 677:../Libraries/XMCLib/src/xmc_ccu4.c ****                                                     const XMC_CCU4_SLICE_EVENT_CONFIG_t *const ev2_
 678:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1505              	 .loc 2 678 0
 1506              	 .cfi_startproc
 1507              	 
 1508              	 
 1509              	 
 1510 0000 80B4     	 push {r7}
 1511              	.LCFI127:
 1512              	 .cfi_def_cfa_offset 4
 1513              	 .cfi_offset 7,-4
 1514 0002 87B0     	 sub sp,sp,#28
 1515              	.LCFI128:
 1516              	 .cfi_def_cfa_offset 32
 1517 0004 00AF     	 add r7,sp,#0
 1518              	.LCFI129:
 1519              	 .cfi_def_cfa_register 7
 1520 0006 F860     	 str r0,[r7,#12]
 1521 0008 B960     	 str r1,[r7,#8]
 1522 000a 7A60     	 str r2,[r7,#4]
 679:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t ins;
 680:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 681:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Slice Pointer", XMC_CCU4_IsVal
 682:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 683:../Libraries/XMCLib/src/xmc_ccu4.c **** 		     XMC_CCU4_SLICE_IsInputvalid(ev1_config->mapped_input));
 684:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity",
 685:../Libraries/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EDGE_SENSITIVITY(ev1_config->edge));
 686:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity",
 687:../Libraries/XMCLib/src/xmc_ccu4.c ****              ((ev1_config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 688:../Libraries/XMCLib/src/xmc_ccu4.c ****               (ev1_config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 689:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period",
 690:../Libraries/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EVENT_FILTER(ev1_config->duration));
 691:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 692:../Libraries/XMCLib/src/xmc_ccu4.c **** 		     XMC_CCU4_SLICE_IsInputvalid(ev2_config->mapped_input));
 693:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity",
 694:../Libraries/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EDGE_SENSITIVITY(ev2_config->edge));
 695:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity",
 696:../Libraries/XMCLib/src/xmc_ccu4.c ****              ((ev2_config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 697:../Libraries/XMCLib/src/xmc_ccu4.c ****               (ev2_config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 698:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period", 
 699:../Libraries/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EVENT_FILTER(ev2_config->duration));
 700:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU4V3) /* Defined for XMC1400 devices only */
 701:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS2;
 702:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 703:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the edge sensitivity for event 1 */
 704:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU4_CC4_INS2_EV1EM_Pos);
 705:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU4_CC4_INS2_EV1EM_Pos;
 706:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 707:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the edge sensitivity for event 2 */
 708:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU4_CC4_INS2_EV2EM_Pos);
 709:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU4_CC4_INS2_EV2EM_Pos;
 710:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 711:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the level sensitivity for event 1 */
 712:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU4_CC4_INS2_EV1LM_Pos);
 713:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->level) << CCU4_CC4_INS2_EV1LM_Pos;
 714:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 715:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the level sensitivity for event 2 */
 716:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU4_CC4_INS2_EV2LM_Pos);
 717:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->level) << CCU4_CC4_INS2_EV2LM_Pos;
 718:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 719:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the debounce filter for event 1 */
 720:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU4_CC4_INS2_LPF1M_Pos);
 721:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU4_CC4_INS2_LPF1M_Pos;
 722:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 723:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the debounce filter for event 2 */
 724:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU4_CC4_INS2_LPF2M_Pos);
 725:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU4_CC4_INS2_LPF2M_Pos;
 726:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 727:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS2 = ins;
 728:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 729:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS1;
 730:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 731:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, the input for Event1 */
 732:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU4_CC4_INS1_EV1IS_Pos);
 733:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU4_CC4_INS1_EV1IS_Pos;
 734:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 735:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Finally, the input for Event2 */
 736:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU4_CC4_INS1_EV2IS_Pos);
 737:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU4_CC4_INS1_EV2IS_Pos;
 738:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 739:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS1 = ins;
 740:../Libraries/XMCLib/src/xmc_ccu4.c **** #else
 741:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS;
 1523              	 .loc 2 741 0
 1524 000c FB68     	 ldr r3,[r7,#12]
 1525 000e 1B68     	 ldr r3,[r3]
 1526 0010 7B61     	 str r3,[r7,#20]
 742:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 743:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the edge sensitivity for event 1 */
 744:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU4_CC4_INS_EV1EM_Pos);
 1527              	 .loc 2 744 0
 1528 0012 7B69     	 ldr r3,[r7,#20]
 1529 0014 23F44023 	 bic r3,r3,#786432
 1530 0018 7B61     	 str r3,[r7,#20]
 745:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU4_CC4_INS_EV1EM_Pos;
 1531              	 .loc 2 745 0
 1532 001a BB68     	 ldr r3,[r7,#8]
 1533 001c 5B78     	 ldrb r3,[r3,#1]
 1534 001e 9B04     	 lsls r3,r3,#18
 1535 0020 7A69     	 ldr r2,[r7,#20]
 1536 0022 1343     	 orrs r3,r3,r2
 1537 0024 7B61     	 str r3,[r7,#20]
 746:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 747:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the edge sensitivity for event 2 */
 748:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU4_CC4_INS_EV2EM_Pos);
 1538              	 .loc 2 748 0
 1539 0026 7B69     	 ldr r3,[r7,#20]
 1540 0028 23F44013 	 bic r3,r3,#3145728
 1541 002c 7B61     	 str r3,[r7,#20]
 749:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU4_CC4_INS_EV2EM_Pos;
 1542              	 .loc 2 749 0
 1543 002e 7B68     	 ldr r3,[r7,#4]
 1544 0030 5B78     	 ldrb r3,[r3,#1]
 1545 0032 1B05     	 lsls r3,r3,#20
 1546 0034 7A69     	 ldr r2,[r7,#20]
 1547 0036 1343     	 orrs r3,r3,r2
 1548 0038 7B61     	 str r3,[r7,#20]
 750:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 751:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the level sensitivity for event 1 */
 752:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU4_CC4_INS_EV1LM_Pos);
 1549              	 .loc 2 752 0
 1550 003a 7B69     	 ldr r3,[r7,#20]
 1551 003c 23F40003 	 bic r3,r3,#8388608
 1552 0040 7B61     	 str r3,[r7,#20]
 753:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->level) << CCU4_CC4_INS_EV1LM_Pos;
 1553              	 .loc 2 753 0
 1554 0042 BB68     	 ldr r3,[r7,#8]
 1555 0044 9B78     	 ldrb r3,[r3,#2]
 1556 0046 DB05     	 lsls r3,r3,#23
 1557 0048 7A69     	 ldr r2,[r7,#20]
 1558 004a 1343     	 orrs r3,r3,r2
 1559 004c 7B61     	 str r3,[r7,#20]
 754:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 755:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the level sensitivity for event 2 */
 756:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU4_CC4_INS_EV2LM_Pos);
 1560              	 .loc 2 756 0
 1561 004e 7B69     	 ldr r3,[r7,#20]
 1562 0050 23F08073 	 bic r3,r3,#16777216
 1563 0054 7B61     	 str r3,[r7,#20]
 757:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->level) << CCU4_CC4_INS_EV2LM_Pos;
 1564              	 .loc 2 757 0
 1565 0056 7B68     	 ldr r3,[r7,#4]
 1566 0058 9B78     	 ldrb r3,[r3,#2]
 1567 005a 1B06     	 lsls r3,r3,#24
 1568 005c 7A69     	 ldr r2,[r7,#20]
 1569 005e 1343     	 orrs r3,r3,r2
 1570 0060 7B61     	 str r3,[r7,#20]
 758:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 759:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the debounce filter for event 1 */
 760:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU4_CC4_INS_LPF1M_Pos);
 1571              	 .loc 2 760 0
 1572 0062 7B69     	 ldr r3,[r7,#20]
 1573 0064 23F0C053 	 bic r3,r3,#402653184
 1574 0068 7B61     	 str r3,[r7,#20]
 761:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU4_CC4_INS_LPF1M_Pos;
 1575              	 .loc 2 761 0
 1576 006a BB68     	 ldr r3,[r7,#8]
 1577 006c DB78     	 ldrb r3,[r3,#3]
 1578 006e DB06     	 lsls r3,r3,#27
 1579 0070 7A69     	 ldr r2,[r7,#20]
 1580 0072 1343     	 orrs r3,r3,r2
 1581 0074 7B61     	 str r3,[r7,#20]
 762:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 763:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Configure the debounce filter for event 2 */
 764:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU4_CC4_INS_LPF2M_Pos);
 1582              	 .loc 2 764 0
 1583 0076 7B69     	 ldr r3,[r7,#20]
 1584 0078 23F0C043 	 bic r3,r3,#1610612736
 1585 007c 7B61     	 str r3,[r7,#20]
 765:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU4_CC4_INS_LPF2M_Pos;
 1586              	 .loc 2 765 0
 1587 007e 7B68     	 ldr r3,[r7,#4]
 1588 0080 DB78     	 ldrb r3,[r3,#3]
 1589 0082 5B07     	 lsls r3,r3,#29
 1590 0084 7A69     	 ldr r2,[r7,#20]
 1591 0086 1343     	 orrs r3,r3,r2
 1592 0088 7B61     	 str r3,[r7,#20]
 766:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 767:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, the input for Event1 */
 768:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU4_CC4_INS_EV1IS_Pos);
 1593              	 .loc 2 768 0
 1594 008a 7B69     	 ldr r3,[r7,#20]
 1595 008c 23F0F003 	 bic r3,r3,#240
 1596 0090 7B61     	 str r3,[r7,#20]
 769:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU4_CC4_INS_EV1IS_Pos;
 1597              	 .loc 2 769 0
 1598 0092 BB68     	 ldr r3,[r7,#8]
 1599 0094 1B78     	 ldrb r3,[r3]
 1600 0096 1B01     	 lsls r3,r3,#4
 1601 0098 7A69     	 ldr r2,[r7,#20]
 1602 009a 1343     	 orrs r3,r3,r2
 1603 009c 7B61     	 str r3,[r7,#20]
 770:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 771:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Finally, the input for Event2 */
 772:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU4_CC4_INS_EV2IS_Pos);
 1604              	 .loc 2 772 0
 1605 009e 7B69     	 ldr r3,[r7,#20]
 1606 00a0 23F47063 	 bic r3,r3,#3840
 1607 00a4 7B61     	 str r3,[r7,#20]
 773:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU4_CC4_INS_EV2IS_Pos;
 1608              	 .loc 2 773 0
 1609 00a6 7B68     	 ldr r3,[r7,#4]
 1610 00a8 1B78     	 ldrb r3,[r3]
 1611 00aa 1B02     	 lsls r3,r3,#8
 1612 00ac 7A69     	 ldr r2,[r7,#20]
 1613 00ae 1343     	 orrs r3,r3,r2
 1614 00b0 7B61     	 str r3,[r7,#20]
 774:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 775:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS = ins;
 1615              	 .loc 2 775 0
 1616 00b2 FB68     	 ldr r3,[r7,#12]
 1617 00b4 7A69     	 ldr r2,[r7,#20]
 1618 00b6 1A60     	 str r2,[r3]
 776:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 777:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1619              	 .loc 2 777 0
 1620 00b8 1C37     	 adds r7,r7,#28
 1621              	.LCFI130:
 1622              	 .cfi_def_cfa_offset 4
 1623 00ba BD46     	 mov sp,r7
 1624              	.LCFI131:
 1625              	 .cfi_def_cfa_register 13
 1626              	 
 1627 00bc 5DF8047B 	 ldr r7,[sp],#4
 1628              	.LCFI132:
 1629              	 .cfi_restore 7
 1630              	 .cfi_def_cfa_offset 0
 1631 00c0 7047     	 bx lr
 1632              	 .cfi_endproc
 1633              	.LFE213:
 1635 00c2 00BF     	 .section .text.XMC_CCU4_SLICE_ConfigureEvent,"ax",%progbits
 1636              	 .align 2
 1637              	 .global XMC_CCU4_SLICE_ConfigureEvent
 1638              	 .thumb
 1639              	 .thumb_func
 1641              	XMC_CCU4_SLICE_ConfigureEvent:
 1642              	.LFB214:
 778:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 779:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to configure a slice trigger event */
 780:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_ConfigureEvent(XMC_CCU4_SLICE_t *const slice,
 781:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                               const XMC_CCU4_SLICE_EVENT_t event,
 782:../Libraries/XMCLib/src/xmc_ccu4.c ****                                    const XMC_CCU4_SLICE_EVENT_CONFIG_t *const config)
 783:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1643              	 .loc 2 783 0
 1644              	 .cfi_startproc
 1645              	 
 1646              	 
 1647              	 
 1648 0000 80B4     	 push {r7}
 1649              	.LCFI133:
 1650              	 .cfi_def_cfa_offset 4
 1651              	 .cfi_offset 7,-4
 1652 0002 89B0     	 sub sp,sp,#36
 1653              	.LCFI134:
 1654              	 .cfi_def_cfa_offset 40
 1655 0004 00AF     	 add r7,sp,#0
 1656              	.LCFI135:
 1657              	 .cfi_def_cfa_register 7
 1658 0006 F860     	 str r0,[r7,#12]
 1659 0008 0B46     	 mov r3,r1
 1660 000a 7A60     	 str r2,[r7,#4]
 1661 000c FB72     	 strb r3,[r7,#11]
 784:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t ins;
 785:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t  pos;
 786:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t  offset;
 787:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 788:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 789:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event)
 790:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Input", XMC_CCU4_SLICE_IsInputvalid(config->map
 791:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Edge Sensitivity",
 792:../Libraries/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EDGE_SENSITIVITY(config->edge));
 793:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Level Sensitivity",
 794:../Libraries/XMCLib/src/xmc_ccu4.c ****              ((config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 795:../Libraries/XMCLib/src/xmc_ccu4.c ****               (config->level == XMC_CCU4_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 796:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_ConfigureEvent:Invalid Debounce Period", 
 797:../Libraries/XMCLib/src/xmc_ccu4.c ****              XMC_CCU4_SLICE_CHECK_EVENT_FILTER(config->duration));
 798:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Calculate offset with reference to event */
 799:../Libraries/XMCLib/src/xmc_ccu4.c ****   offset = ((uint8_t) event) - 1U;
 1662              	 .loc 2 799 0
 1663 000e FB7A     	 ldrb r3,[r7,#11]
 1664 0010 013B     	 subs r3,r3,#1
 1665 0012 FB77     	 strb r3,[r7,#31]
 800:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 801:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU4V3) /* Defined for XMC1400 devices only */
 802:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS2;
 803:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 804:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First, configure the edge sensitivity */
 805:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS2_EV0EM_Pos) + (uint8_t)(offset << 2U);
 806:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 807:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->edge) << pos;
 808:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 809:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, the level */
 810:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS2_EV0LM_Pos) + (uint8_t)(offset << 2U);
 811:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 812:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->level) << pos;
 813:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 814:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, the debounce filter */
 815:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS2_LPF0M_Pos) + (uint8_t)(offset << 2U);
 816:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 817:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->duration) << pos;
 818:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 819:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS2 = ins;
 820:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 821:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS1;
 822:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 823:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Finally the input */
 824:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS1_EV0IS_Pos) + (uint8_t)(offset << 3U);
 825:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 826:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 827:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 828:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS1 = ins;
 829:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 830:../Libraries/XMCLib/src/xmc_ccu4.c **** #else
 831:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS;
 1666              	 .loc 2 831 0
 1667 0014 FB68     	 ldr r3,[r7,#12]
 1668 0016 1B68     	 ldr r3,[r3]
 1669 0018 BB61     	 str r3,[r7,#24]
 832:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 833:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First, configure the edge sensitivity */
 834:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_EV0EM_Pos) + (uint8_t)(offset << 1U);
 1670              	 .loc 2 834 0
 1671 001a FB7F     	 ldrb r3,[r7,#31]
 1672 001c 5B00     	 lsls r3,r3,#1
 1673 001e DBB2     	 uxtb r3,r3
 1674 0020 1033     	 adds r3,r3,#16
 1675 0022 FB75     	 strb r3,[r7,#23]
 835:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 1676              	 .loc 2 835 0
 1677 0024 FB7D     	 ldrb r3,[r7,#23]
 1678 0026 0322     	 movs r2,#3
 1679 0028 02FA03F3 	 lsl r3,r2,r3
 1680 002c DB43     	 mvns r3,r3
 1681 002e BA69     	 ldr r2,[r7,#24]
 1682 0030 1340     	 ands r3,r3,r2
 1683 0032 BB61     	 str r3,[r7,#24]
 836:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->edge) << pos;
 1684              	 .loc 2 836 0
 1685 0034 7B68     	 ldr r3,[r7,#4]
 1686 0036 5B78     	 ldrb r3,[r3,#1]
 1687 0038 1A46     	 mov r2,r3
 1688 003a FB7D     	 ldrb r3,[r7,#23]
 1689 003c 02FA03F3 	 lsl r3,r2,r3
 1690 0040 BA69     	 ldr r2,[r7,#24]
 1691 0042 1343     	 orrs r3,r3,r2
 1692 0044 BB61     	 str r3,[r7,#24]
 837:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 838:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, the level */
 839:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_EV0LM_Pos) + offset;
 1693              	 .loc 2 839 0
 1694 0046 FB7F     	 ldrb r3,[r7,#31]
 1695 0048 1633     	 adds r3,r3,#22
 1696 004a FB75     	 strb r3,[r7,#23]
 840:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 1697              	 .loc 2 840 0
 1698 004c FB7D     	 ldrb r3,[r7,#23]
 1699 004e 0122     	 movs r2,#1
 1700 0050 02FA03F3 	 lsl r3,r2,r3
 1701 0054 DB43     	 mvns r3,r3
 1702 0056 BA69     	 ldr r2,[r7,#24]
 1703 0058 1340     	 ands r3,r3,r2
 1704 005a BB61     	 str r3,[r7,#24]
 841:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->level) << pos;
 1705              	 .loc 2 841 0
 1706 005c 7B68     	 ldr r3,[r7,#4]
 1707 005e 9B78     	 ldrb r3,[r3,#2]
 1708 0060 1A46     	 mov r2,r3
 1709 0062 FB7D     	 ldrb r3,[r7,#23]
 1710 0064 02FA03F3 	 lsl r3,r2,r3
 1711 0068 BA69     	 ldr r2,[r7,#24]
 1712 006a 1343     	 orrs r3,r3,r2
 1713 006c BB61     	 str r3,[r7,#24]
 842:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 843:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Next, the debounce filter */
 844:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_LPF0M_Pos) + (uint8_t)(offset << 1U);
 1714              	 .loc 2 844 0
 1715 006e FB7F     	 ldrb r3,[r7,#31]
 1716 0070 5B00     	 lsls r3,r3,#1
 1717 0072 DBB2     	 uxtb r3,r3
 1718 0074 1933     	 adds r3,r3,#25
 1719 0076 FB75     	 strb r3,[r7,#23]
 845:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 1720              	 .loc 2 845 0
 1721 0078 FB7D     	 ldrb r3,[r7,#23]
 1722 007a 0322     	 movs r2,#3
 1723 007c 02FA03F3 	 lsl r3,r2,r3
 1724 0080 DB43     	 mvns r3,r3
 1725 0082 BA69     	 ldr r2,[r7,#24]
 1726 0084 1340     	 ands r3,r3,r2
 1727 0086 BB61     	 str r3,[r7,#24]
 846:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->duration) << pos;
 1728              	 .loc 2 846 0
 1729 0088 7B68     	 ldr r3,[r7,#4]
 1730 008a DB78     	 ldrb r3,[r3,#3]
 1731 008c 1A46     	 mov r2,r3
 1732 008e FB7D     	 ldrb r3,[r7,#23]
 1733 0090 02FA03F3 	 lsl r3,r2,r3
 1734 0094 BA69     	 ldr r2,[r7,#24]
 1735 0096 1343     	 orrs r3,r3,r2
 1736 0098 BB61     	 str r3,[r7,#24]
 847:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 848:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Finally the input */
 849:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_EV0IS_Pos) + (uint8_t)(offset << 2U);
 1737              	 .loc 2 849 0
 1738 009a FB7F     	 ldrb r3,[r7,#31]
 1739 009c 9B00     	 lsls r3,r3,#2
 1740 009e FB75     	 strb r3,[r7,#23]
 850:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 1741              	 .loc 2 850 0
 1742 00a0 FB7D     	 ldrb r3,[r7,#23]
 1743 00a2 0F22     	 movs r2,#15
 1744 00a4 02FA03F3 	 lsl r3,r2,r3
 1745 00a8 DB43     	 mvns r3,r3
 1746 00aa BA69     	 ldr r2,[r7,#24]
 1747 00ac 1340     	 ands r3,r3,r2
 1748 00ae BB61     	 str r3,[r7,#24]
 851:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 1749              	 .loc 2 851 0
 1750 00b0 7B68     	 ldr r3,[r7,#4]
 1751 00b2 1B78     	 ldrb r3,[r3]
 1752 00b4 1A46     	 mov r2,r3
 1753 00b6 FB7D     	 ldrb r3,[r7,#23]
 1754 00b8 02FA03F3 	 lsl r3,r2,r3
 1755 00bc BA69     	 ldr r2,[r7,#24]
 1756 00be 1343     	 orrs r3,r3,r2
 1757 00c0 BB61     	 str r3,[r7,#24]
 852:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 853:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS = ins;
 1758              	 .loc 2 853 0
 1759 00c2 FB68     	 ldr r3,[r7,#12]
 1760 00c4 BA69     	 ldr r2,[r7,#24]
 1761 00c6 1A60     	 str r2,[r3]
 854:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 855:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1762              	 .loc 2 855 0
 1763 00c8 2437     	 adds r7,r7,#36
 1764              	.LCFI136:
 1765              	 .cfi_def_cfa_offset 4
 1766 00ca BD46     	 mov sp,r7
 1767              	.LCFI137:
 1768              	 .cfi_def_cfa_register 13
 1769              	 
 1770 00cc 5DF8047B 	 ldr r7,[sp],#4
 1771              	.LCFI138:
 1772              	 .cfi_restore 7
 1773              	 .cfi_def_cfa_offset 0
 1774 00d0 7047     	 bx lr
 1775              	 .cfi_endproc
 1776              	.LFE214:
 1778 00d2 00BF     	 .section .text.XMC_CCU4_SLICE_SetInput,"ax",%progbits
 1779              	 .align 2
 1780              	 .global XMC_CCU4_SLICE_SetInput
 1781              	 .thumb
 1782              	 .thumb_func
 1784              	XMC_CCU4_SLICE_SetInput:
 1785              	.LFB215:
 856:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 857:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to bind an input to a slice trigger event */
 858:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetInput(XMC_CCU4_SLICE_t *const slice,
 859:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                     const XMC_CCU4_SLICE_EVENT_t event,
 860:../Libraries/XMCLib/src/xmc_ccu4.c ****                              const XMC_CCU4_SLICE_INPUT_t input)
 861:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1786              	 .loc 2 861 0
 1787              	 .cfi_startproc
 1788              	 
 1789              	 
 1790              	 
 1791 0000 80B4     	 push {r7}
 1792              	.LCFI139:
 1793              	 .cfi_def_cfa_offset 4
 1794              	 .cfi_offset 7,-4
 1795 0002 85B0     	 sub sp,sp,#20
 1796              	.LCFI140:
 1797              	 .cfi_def_cfa_offset 24
 1798 0004 00AF     	 add r7,sp,#0
 1799              	.LCFI141:
 1800              	 .cfi_def_cfa_register 7
 1801 0006 7860     	 str r0,[r7,#4]
 1802 0008 0B46     	 mov r3,r1
 1803 000a FB70     	 strb r3,[r7,#3]
 1804 000c 1346     	 mov r3,r2
 1805 000e BB70     	 strb r3,[r7,#2]
 862:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t ins;
 863:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t  pos;
 864:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t  offset;
 865:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 866:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInput:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
 867:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInput:Invalid Event ID", XMC_CCU4_SLICE_CHECK_EVENT_ID(event));
 868:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInput:Invalid Input", XMC_CCU4_SLICE_IsInputvalid(input));
 869:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 870:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Calculate offset with reference to event */
 871:../Libraries/XMCLib/src/xmc_ccu4.c ****   offset = ((uint8_t) event) - 1U;
 1806              	 .loc 2 871 0
 1807 0010 FB78     	 ldrb r3,[r7,#3]
 1808 0012 013B     	 subs r3,r3,#1
 1809 0014 FB73     	 strb r3,[r7,#15]
 872:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 873:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU4V3) /* Defined for XMC1400 devices only */
 874:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS1_EV0IS_Pos) + (uint8_t) (offset << 3U);
 875:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 876:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS1;
 877:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 878:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) input) << pos;
 879:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 880:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS1 = ins;
 881:../Libraries/XMCLib/src/xmc_ccu4.c **** #else
 882:../Libraries/XMCLib/src/xmc_ccu4.c ****   pos = ((uint8_t) CCU4_CC4_INS_EV0IS_Pos) + (uint8_t) (offset << 2U);
 1810              	 .loc 2 882 0
 1811 0016 FB7B     	 ldrb r3,[r7,#15]
 1812 0018 9B00     	 lsls r3,r3,#2
 1813 001a BB73     	 strb r3,[r7,#14]
 883:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 884:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins = slice->INS;
 1814              	 .loc 2 884 0
 1815 001c 7B68     	 ldr r3,[r7,#4]
 1816 001e 1B68     	 ldr r3,[r3]
 1817 0020 BB60     	 str r3,[r7,#8]
 885:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins &= ~(((uint32_t) XMC_CCU4_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 1818              	 .loc 2 885 0
 1819 0022 BB7B     	 ldrb r3,[r7,#14]
 1820 0024 0F22     	 movs r2,#15
 1821 0026 02FA03F3 	 lsl r3,r2,r3
 1822 002a DB43     	 mvns r3,r3
 1823 002c BA68     	 ldr r2,[r7,#8]
 1824 002e 1340     	 ands r3,r3,r2
 1825 0030 BB60     	 str r3,[r7,#8]
 886:../Libraries/XMCLib/src/xmc_ccu4.c ****   ins |= ((uint32_t) input) << pos;
 1826              	 .loc 2 886 0
 1827 0032 BA78     	 ldrb r2,[r7,#2]
 1828 0034 BB7B     	 ldrb r3,[r7,#14]
 1829 0036 02FA03F3 	 lsl r3,r2,r3
 1830 003a BA68     	 ldr r2,[r7,#8]
 1831 003c 1343     	 orrs r3,r3,r2
 1832 003e BB60     	 str r3,[r7,#8]
 887:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 888:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->INS = ins;
 1833              	 .loc 2 888 0
 1834 0040 7B68     	 ldr r3,[r7,#4]
 1835 0042 BA68     	 ldr r2,[r7,#8]
 1836 0044 1A60     	 str r2,[r3]
 889:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
 890:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1837              	 .loc 2 890 0
 1838 0046 1437     	 adds r7,r7,#20
 1839              	.LCFI142:
 1840              	 .cfi_def_cfa_offset 4
 1841 0048 BD46     	 mov sp,r7
 1842              	.LCFI143:
 1843              	 .cfi_def_cfa_register 13
 1844              	 
 1845 004a 5DF8047B 	 ldr r7,[sp],#4
 1846              	.LCFI144:
 1847              	 .cfi_restore 7
 1848              	 .cfi_def_cfa_offset 0
 1849 004e 7047     	 bx lr
 1850              	 .cfi_endproc
 1851              	.LFE215:
 1853              	 .section .text.XMC_CCU4_SLICE_SetTimerRepeatMode,"ax",%progbits
 1854              	 .align 2
 1855              	 .global XMC_CCU4_SLICE_SetTimerRepeatMode
 1856              	 .thumb
 1857              	 .thumb_func
 1859              	XMC_CCU4_SLICE_SetTimerRepeatMode:
 1860              	.LFB216:
 891:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 892:../Libraries/XMCLib/src/xmc_ccu4.c **** /* API to program timer repeat mode - Single shot vs repeat */
 893:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetTimerRepeatMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_RE
 894:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1861              	 .loc 2 894 0
 1862              	 .cfi_startproc
 1863              	 
 1864              	 
 1865              	 
 1866 0000 80B4     	 push {r7}
 1867              	.LCFI145:
 1868              	 .cfi_def_cfa_offset 4
 1869              	 .cfi_offset 7,-4
 1870 0002 83B0     	 sub sp,sp,#12
 1871              	.LCFI146:
 1872              	 .cfi_def_cfa_offset 16
 1873 0004 00AF     	 add r7,sp,#0
 1874              	.LCFI147:
 1875              	 .cfi_def_cfa_register 7
 1876 0006 7860     	 str r0,[r7,#4]
 1877 0008 0B46     	 mov r3,r1
 1878 000a FB70     	 strb r3,[r7,#3]
 895:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice
 896:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerRepeatMode:Invalid Timer Repeat Mode",
 897:../Libraries/XMCLib/src/xmc_ccu4.c ****              ((mode == XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT) ||\
 898:../Libraries/XMCLib/src/xmc_ccu4.c **** 		      (mode == XMC_CCU4_SLICE_TIMER_REPEAT_MODE_SINGLE)));
 899:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 900:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (XMC_CCU4_SLICE_TIMER_REPEAT_MODE_REPEAT == mode)
 1879              	 .loc 2 900 0
 1880 000c FB78     	 ldrb r3,[r7,#3]
 1881 000e 002B     	 cmp r3,#0
 1882 0010 06D1     	 bne .L55
 901:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 902:../Libraries/XMCLib/src/xmc_ccu4.c ****     slice->TC &= ~((uint32_t) CCU4_CC4_TC_TSSM_Msk);
 1883              	 .loc 2 902 0
 1884 0012 7B68     	 ldr r3,[r7,#4]
 1885 0014 5B69     	 ldr r3,[r3,#20]
 1886 0016 23F00202 	 bic r2,r3,#2
 1887 001a 7B68     	 ldr r3,[r7,#4]
 1888 001c 5A61     	 str r2,[r3,#20]
 1889 001e 05E0     	 b .L54
 1890              	.L55:
 903:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 904:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 905:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 906:../Libraries/XMCLib/src/xmc_ccu4.c ****     slice->TC |= (uint32_t) CCU4_CC4_TC_TSSM_Msk;
 1891              	 .loc 2 906 0
 1892 0020 7B68     	 ldr r3,[r7,#4]
 1893 0022 5B69     	 ldr r3,[r3,#20]
 1894 0024 43F00202 	 orr r2,r3,#2
 1895 0028 7B68     	 ldr r3,[r7,#4]
 1896 002a 5A61     	 str r2,[r3,#20]
 1897              	.L54:
 907:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 908:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1898              	 .loc 2 908 0
 1899 002c 0C37     	 adds r7,r7,#12
 1900              	.LCFI148:
 1901              	 .cfi_def_cfa_offset 4
 1902 002e BD46     	 mov sp,r7
 1903              	.LCFI149:
 1904              	 .cfi_def_cfa_register 13
 1905              	 
 1906 0030 5DF8047B 	 ldr r7,[sp],#4
 1907              	.LCFI150:
 1908              	 .cfi_restore 7
 1909              	 .cfi_def_cfa_offset 0
 1910 0034 7047     	 bx lr
 1911              	 .cfi_endproc
 1912              	.LFE216:
 1914 0036 00BF     	 .section .text.XMC_CCU4_SLICE_SetTimerCountingMode,"ax",%progbits
 1915              	 .align 2
 1916              	 .global XMC_CCU4_SLICE_SetTimerCountingMode
 1917              	 .thumb
 1918              	 .thumb_func
 1920              	XMC_CCU4_SLICE_SetTimerCountingMode:
 1921              	.LFB217:
 909:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 910:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Programs timer counting mode */
 911:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetTimerCountingMode(XMC_CCU4_SLICE_t *const slice, const XMC_CCU4_SLICE_TIMER_
 912:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1922              	 .loc 2 912 0
 1923              	 .cfi_startproc
 1924              	 
 1925              	 
 1926              	 
 1927 0000 80B4     	 push {r7}
 1928              	.LCFI151:
 1929              	 .cfi_def_cfa_offset 4
 1930              	 .cfi_offset 7,-4
 1931 0002 83B0     	 sub sp,sp,#12
 1932              	.LCFI152:
 1933              	 .cfi_def_cfa_offset 16
 1934 0004 00AF     	 add r7,sp,#0
 1935              	.LCFI153:
 1936              	 .cfi_def_cfa_register 7
 1937 0006 7860     	 str r0,[r7,#4]
 1938 0008 0B46     	 mov r3,r1
 1939 000a FB70     	 strb r3,[r7,#3]
 913:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCountingMode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(sli
 914:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetTimerCountingMode:Invalid Timer Count Mode", ((mode == XMC_CCU4_SLI
 915:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                                                                          (mode == XMC_CCU4_SLICE
 916:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 917:../Libraries/XMCLib/src/xmc_ccu4.c ****   if (XMC_CCU4_SLICE_TIMER_COUNT_MODE_EA == mode)
 1940              	 .loc 2 917 0
 1941 000c FB78     	 ldrb r3,[r7,#3]
 1942 000e 002B     	 cmp r3,#0
 1943 0010 06D1     	 bne .L58
 918:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 919:../Libraries/XMCLib/src/xmc_ccu4.c ****     slice->TC &= ~((uint32_t) CCU4_CC4_TC_TCM_Msk);
 1944              	 .loc 2 919 0
 1945 0012 7B68     	 ldr r3,[r7,#4]
 1946 0014 5B69     	 ldr r3,[r3,#20]
 1947 0016 23F00102 	 bic r2,r3,#1
 1948 001a 7B68     	 ldr r3,[r7,#4]
 1949 001c 5A61     	 str r2,[r3,#20]
 1950 001e 05E0     	 b .L57
 1951              	.L58:
 920:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 921:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 922:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 923:../Libraries/XMCLib/src/xmc_ccu4.c ****     slice->TC |= (uint32_t) CCU4_CC4_TC_TCM_Msk;
 1952              	 .loc 2 923 0
 1953 0020 7B68     	 ldr r3,[r7,#4]
 1954 0022 5B69     	 ldr r3,[r3,#20]
 1955 0024 43F00102 	 orr r2,r3,#1
 1956 0028 7B68     	 ldr r3,[r7,#4]
 1957 002a 5A61     	 str r2,[r3,#20]
 1958              	.L57:
 924:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 925:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 1959              	 .loc 2 925 0
 1960 002c 0C37     	 adds r7,r7,#12
 1961              	.LCFI154:
 1962              	 .cfi_def_cfa_offset 4
 1963 002e BD46     	 mov sp,r7
 1964              	.LCFI155:
 1965              	 .cfi_def_cfa_register 13
 1966              	 
 1967 0030 5DF8047B 	 ldr r7,[sp],#4
 1968              	.LCFI156:
 1969              	 .cfi_restore 7
 1970              	 .cfi_def_cfa_offset 0
 1971 0034 7047     	 bx lr
 1972              	 .cfi_endproc
 1973              	.LFE217:
 1975 0036 00BF     	 .section .text.XMC_CCU4_SLICE_GetCaptureRegisterValue,"ax",%progbits
 1976              	 .align 2
 1977              	 .global XMC_CCU4_SLICE_GetCaptureRegisterValue
 1978              	 .thumb
 1979              	 .thumb_func
 1981              	XMC_CCU4_SLICE_GetCaptureRegisterValue:
 1982              	.LFB218:
 926:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 927:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Retrieves desired capture register value */
 928:../Libraries/XMCLib/src/xmc_ccu4.c **** uint32_t XMC_CCU4_SLICE_GetCaptureRegisterValue(const XMC_CCU4_SLICE_t *const slice, const uint8_t 
 929:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 1983              	 .loc 2 929 0
 1984              	 .cfi_startproc
 1985              	 
 1986              	 
 1987              	 
 1988 0000 80B4     	 push {r7}
 1989              	.LCFI157:
 1990              	 .cfi_def_cfa_offset 4
 1991              	 .cfi_offset 7,-4
 1992 0002 83B0     	 sub sp,sp,#12
 1993              	.LCFI158:
 1994              	 .cfi_def_cfa_offset 16
 1995 0004 00AF     	 add r7,sp,#0
 1996              	.LCFI159:
 1997              	 .cfi_def_cfa_register 7
 1998 0006 7860     	 str r0,[r7,#4]
 1999 0008 0B46     	 mov r3,r1
 2000 000a FB70     	 strb r3,[r7,#3]
 930:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCaptureRegisterValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(
 931:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCaptureRegisterValue:Invalid register number", (reg_num < 4U));
 932:../Libraries/XMCLib/src/xmc_ccu4.c ****   return(slice->CV[reg_num]);
 2001              	 .loc 2 932 0
 2002 000c FB78     	 ldrb r3,[r7,#3]
 2003 000e 7A68     	 ldr r2,[r7,#4]
 2004 0010 1C33     	 adds r3,r3,#28
 2005 0012 9B00     	 lsls r3,r3,#2
 2006 0014 1344     	 add r3,r3,r2
 2007 0016 5B68     	 ldr r3,[r3,#4]
 933:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2008              	 .loc 2 933 0
 2009 0018 1846     	 mov r0,r3
 2010 001a 0C37     	 adds r7,r7,#12
 2011              	.LCFI160:
 2012              	 .cfi_def_cfa_offset 4
 2013 001c BD46     	 mov sp,r7
 2014              	.LCFI161:
 2015              	 .cfi_def_cfa_register 13
 2016              	 
 2017 001e 5DF8047B 	 ldr r7,[sp],#4
 2018              	.LCFI162:
 2019              	 .cfi_restore 7
 2020              	 .cfi_def_cfa_offset 0
 2021 0022 7047     	 bx lr
 2022              	 .cfi_endproc
 2023              	.LFE218:
 2025              	 .section .text.XMC_CCU4_SLICE_GetLastCapturedTimerValue,"ax",%progbits
 2026              	 .align 2
 2027              	 .global XMC_CCU4_SLICE_GetLastCapturedTimerValue
 2028              	 .thumb
 2029              	 .thumb_func
 2031              	XMC_CCU4_SLICE_GetLastCapturedTimerValue:
 2032              	.LFB219:
 934:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 935:../Libraries/XMCLib/src/xmc_ccu4.c **** /* @brief Retrieves the latest captured timer value */
 936:../Libraries/XMCLib/src/xmc_ccu4.c **** XMC_CCU4_STATUS_t XMC_CCU4_SLICE_GetLastCapturedTimerValue(const XMC_CCU4_SLICE_t *const slice,
 937:../Libraries/XMCLib/src/xmc_ccu4.c ****                                                            const XMC_CCU4_SLICE_CAP_REG_SET_t set,
 938:../Libraries/XMCLib/src/xmc_ccu4.c ****                                                            uint32_t *val_ptr)
 939:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2033              	 .loc 2 939 0
 2034              	 .cfi_startproc
 2035              	 
 2036              	 
 2037              	 
 2038 0000 80B4     	 push {r7}
 2039              	.LCFI163:
 2040              	 .cfi_def_cfa_offset 4
 2041              	 .cfi_offset 7,-4
 2042 0002 87B0     	 sub sp,sp,#28
 2043              	.LCFI164:
 2044              	 .cfi_def_cfa_offset 32
 2045 0004 00AF     	 add r7,sp,#0
 2046              	.LCFI165:
 2047              	 .cfi_def_cfa_register 7
 2048 0006 F860     	 str r0,[r7,#12]
 2049 0008 0B46     	 mov r3,r1
 2050 000a 7A60     	 str r2,[r7,#4]
 2051 000c FB72     	 strb r3,[r7,#11]
 940:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_STATUS_t retval;
 941:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t i;
 942:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t start;
 943:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint8_t end;
 944:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 945:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetLastCapturedTimerValue:Invalid Slice Pointer", XMC_CCU4_IsValidSlic
 946:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetLastCapturedTimerValue:Invalid Register Set", ((set == XMC_CCU4_SLI
 947:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                                                                           (set == XMC_CCU4_SLICE
 948:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 949:../Libraries/XMCLib/src/xmc_ccu4.c ****   retval = XMC_CCU4_STATUS_ERROR;
 2052              	 .loc 2 949 0
 2053 000e 0123     	 movs r3,#1
 2054 0010 FB75     	 strb r3,[r7,#23]
 950:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 951:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First check if extended capture mode is enabled */
 952:../Libraries/XMCLib/src/xmc_ccu4.c ****   if ((slice->TC) & CCU4_CC4_TC_ECM_Msk)
 2055              	 .loc 2 952 0
 2056 0012 FB68     	 ldr r3,[r7,#12]
 2057 0014 5B69     	 ldr r3,[r3,#20]
 2058 0016 03F01003 	 and r3,r3,#16
 2059 001a 002B     	 cmp r3,#0
 2060 001c 04D0     	 beq .L63
 953:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 954:../Libraries/XMCLib/src/xmc_ccu4.c ****     /* Extended capture mode has been enabled. So start with the lowest capture register and work y
 955:../Libraries/XMCLib/src/xmc_ccu4.c ****     start = 0U;
 2061              	 .loc 2 955 0
 2062 001e 0023     	 movs r3,#0
 2063 0020 7B75     	 strb r3,[r7,#21]
 956:../Libraries/XMCLib/src/xmc_ccu4.c ****     end = XMC_CCU4_NUM_SLICES_PER_MODULE;
 2064              	 .loc 2 956 0
 2065 0022 0423     	 movs r3,#4
 2066 0024 3B75     	 strb r3,[r7,#20]
 2067 0026 0BE0     	 b .L64
 2068              	.L63:
 957:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 958:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
 959:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 960:../Libraries/XMCLib/src/xmc_ccu4.c ****     /* Extended capture mode is not enabled */
 961:../Libraries/XMCLib/src/xmc_ccu4.c ****     if (set == XMC_CCU4_SLICE_CAP_REG_SET_HIGH)
 2069              	 .loc 2 961 0
 2070 0028 FB7A     	 ldrb r3,[r7,#11]
 2071 002a 012B     	 cmp r3,#1
 2072 002c 04D1     	 bne .L65
 962:../Libraries/XMCLib/src/xmc_ccu4.c ****     {
 963:../Libraries/XMCLib/src/xmc_ccu4.c ****       start = ((uint8_t) XMC_CCU4_NUM_SLICES_PER_MODULE) >> 1U;
 2073              	 .loc 2 963 0
 2074 002e 0223     	 movs r3,#2
 2075 0030 7B75     	 strb r3,[r7,#21]
 964:../Libraries/XMCLib/src/xmc_ccu4.c ****       end   = (uint8_t) XMC_CCU4_NUM_SLICES_PER_MODULE;
 2076              	 .loc 2 964 0
 2077 0032 0423     	 movs r3,#4
 2078 0034 3B75     	 strb r3,[r7,#20]
 2079 0036 03E0     	 b .L64
 2080              	.L65:
 965:../Libraries/XMCLib/src/xmc_ccu4.c ****     }
 966:../Libraries/XMCLib/src/xmc_ccu4.c ****     else
 967:../Libraries/XMCLib/src/xmc_ccu4.c ****     {
 968:../Libraries/XMCLib/src/xmc_ccu4.c ****       start = 0U;
 2081              	 .loc 2 968 0
 2082 0038 0023     	 movs r3,#0
 2083 003a 7B75     	 strb r3,[r7,#21]
 969:../Libraries/XMCLib/src/xmc_ccu4.c ****       end = ((uint8_t) XMC_CCU4_NUM_SLICES_PER_MODULE) >> 1U;
 2084              	 .loc 2 969 0
 2085 003c 0223     	 movs r3,#2
 2086 003e 3B75     	 strb r3,[r7,#20]
 2087              	.L64:
 970:../Libraries/XMCLib/src/xmc_ccu4.c ****     }
 971:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 972:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 973:../Libraries/XMCLib/src/xmc_ccu4.c ****   for(i=start; i < end; i++)
 2088              	 .loc 2 973 0
 2089 0040 7B7D     	 ldrb r3,[r7,#21]
 2090 0042 BB75     	 strb r3,[r7,#22]
 2091 0044 17E0     	 b .L66
 2092              	.L69:
 974:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 975:../Libraries/XMCLib/src/xmc_ccu4.c ****     if ( (slice->CV[i]) & CCU4_CC4_CV_FFL_Msk )
 2093              	 .loc 2 975 0
 2094 0046 BB7D     	 ldrb r3,[r7,#22]
 2095 0048 FA68     	 ldr r2,[r7,#12]
 2096 004a 1C33     	 adds r3,r3,#28
 2097 004c 9B00     	 lsls r3,r3,#2
 2098 004e 1344     	 add r3,r3,r2
 2099 0050 5B68     	 ldr r3,[r3,#4]
 2100 0052 03F48013 	 and r3,r3,#1048576
 2101 0056 002B     	 cmp r3,#0
 2102 0058 0AD0     	 beq .L67
 976:../Libraries/XMCLib/src/xmc_ccu4.c ****     {
 977:../Libraries/XMCLib/src/xmc_ccu4.c ****       *val_ptr = slice->CV[i];
 2103              	 .loc 2 977 0
 2104 005a BB7D     	 ldrb r3,[r7,#22]
 2105 005c FA68     	 ldr r2,[r7,#12]
 2106 005e 1C33     	 adds r3,r3,#28
 2107 0060 9B00     	 lsls r3,r3,#2
 2108 0062 1344     	 add r3,r3,r2
 2109 0064 5A68     	 ldr r2,[r3,#4]
 2110 0066 7B68     	 ldr r3,[r7,#4]
 2111 0068 1A60     	 str r2,[r3]
 978:../Libraries/XMCLib/src/xmc_ccu4.c ****       retval = XMC_CCU4_STATUS_OK;
 2112              	 .loc 2 978 0
 2113 006a 0023     	 movs r3,#0
 2114 006c FB75     	 strb r3,[r7,#23]
 979:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 2115              	 .loc 2 979 0
 2116 006e 06E0     	 b .L68
 2117              	.L67:
 973:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 2118              	 .loc 2 973 0 discriminator 2
 2119 0070 BB7D     	 ldrb r3,[r7,#22]
 2120 0072 0133     	 adds r3,r3,#1
 2121 0074 BB75     	 strb r3,[r7,#22]
 2122              	.L66:
 973:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
 2123              	 .loc 2 973 0 is_stmt 0 discriminator 1
 2124 0076 BA7D     	 ldrb r2,[r7,#22]
 2125 0078 3B7D     	 ldrb r3,[r7,#20]
 2126 007a 9A42     	 cmp r2,r3
 2127 007c E3D3     	 bcc .L69
 2128              	.L68:
 980:../Libraries/XMCLib/src/xmc_ccu4.c ****     }
 981:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
 982:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 983:../Libraries/XMCLib/src/xmc_ccu4.c ****   return retval;
 2129              	 .loc 2 983 0 is_stmt 1
 2130 007e FB7D     	 ldrb r3,[r7,#23]
 984:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2131              	 .loc 2 984 0
 2132 0080 1846     	 mov r0,r3
 2133 0082 1C37     	 adds r7,r7,#28
 2134              	.LCFI166:
 2135              	 .cfi_def_cfa_offset 4
 2136 0084 BD46     	 mov sp,r7
 2137              	.LCFI167:
 2138              	 .cfi_def_cfa_register 13
 2139              	 
 2140 0086 5DF8047B 	 ldr r7,[sp],#4
 2141              	.LCFI168:
 2142              	 .cfi_restore 7
 2143              	 .cfi_def_cfa_offset 0
 2144 008a 7047     	 bx lr
 2145              	 .cfi_endproc
 2146              	.LFE219:
 2148              	 .section .text.XMC_CCU4_GetCapturedValueFromFifo,"ax",%progbits
 2149              	 .align 2
 2150              	 .global XMC_CCU4_GetCapturedValueFromFifo
 2151              	 .thumb
 2152              	 .thumb_func
 2154              	XMC_CCU4_GetCapturedValueFromFifo:
 2155              	.LFB220:
 985:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 986:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Retrieves timer capture value from a FIFO made of capture registers */
 987:../Libraries/XMCLib/src/xmc_ccu4.c **** #if defined(CCU4V1) /* Defined for XMC4500, XMC400, XMC4200, XMC4100 devices only */
 988:../Libraries/XMCLib/src/xmc_ccu4.c **** int32_t XMC_CCU4_GetCapturedValueFromFifo(const XMC_CCU4_MODULE_t *const module, const uint8_t slic
 989:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2156              	 .loc 2 989 0
 2157              	 .cfi_startproc
 2158              	 
 2159              	 
 2160              	 
 2161 0000 80B4     	 push {r7}
 2162              	.LCFI169:
 2163              	 .cfi_def_cfa_offset 4
 2164              	 .cfi_offset 7,-4
 2165 0002 85B0     	 sub sp,sp,#20
 2166              	.LCFI170:
 2167              	 .cfi_def_cfa_offset 24
 2168 0004 00AF     	 add r7,sp,#0
 2169              	.LCFI171:
 2170              	 .cfi_def_cfa_register 7
 2171 0006 7860     	 str r0,[r7,#4]
 2172 0008 0B46     	 mov r3,r1
 2173 000a FB70     	 strb r3,[r7,#3]
 990:../Libraries/XMCLib/src/xmc_ccu4.c ****   int32_t   cap;
 991:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t  extracted_slice;
 992:../Libraries/XMCLib/src/xmc_ccu4.c ****   
 993:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU4_IsValidModule(modu
 994:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 995:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* First read the global fifo register */
 996:../Libraries/XMCLib/src/xmc_ccu4.c ****   cap = (int32_t) module->ECRD;
 2174              	 .loc 2 996 0
 2175 000c 7B68     	 ldr r3,[r7,#4]
 2176 000e 1B6D     	 ldr r3,[r3,#80]
 2177 0010 FB60     	 str r3,[r7,#12]
 997:../Libraries/XMCLib/src/xmc_ccu4.c **** 
 998:../Libraries/XMCLib/src/xmc_ccu4.c ****   extracted_slice = (((uint32_t) cap) & ((uint32_t) CCU4_ECRD_SPTR_Msk)) >> CCU4_ECRD_SPTR_Pos;
 2178              	 .loc 2 998 0
 2179 0012 FB68     	 ldr r3,[r7,#12]
 2180 0014 03F44013 	 and r3,r3,#3145728
 2181 0018 1B0D     	 lsrs r3,r3,#20
 2182 001a BB60     	 str r3,[r7,#8]
 999:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1000:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Return captured result only if it were applicable to this slice */
1001:../Libraries/XMCLib/src/xmc_ccu4.c ****   if(extracted_slice != ((uint32_t)slice_number))
 2183              	 .loc 2 1001 0
 2184 001c FA78     	 ldrb r2,[r7,#3]
 2185 001e BB68     	 ldr r3,[r7,#8]
 2186 0020 9A42     	 cmp r2,r3
 2187 0022 02D0     	 beq .L72
1002:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
1003:../Libraries/XMCLib/src/xmc_ccu4.c ****     cap = -1;
 2188              	 .loc 2 1003 0
 2189 0024 4FF0FF33 	 mov r3,#-1
 2190 0028 FB60     	 str r3,[r7,#12]
 2191              	.L72:
1004:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
1005:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1006:../Libraries/XMCLib/src/xmc_ccu4.c ****   return (cap);
 2192              	 .loc 2 1006 0
 2193 002a FB68     	 ldr r3,[r7,#12]
1007:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2194              	 .loc 2 1007 0
 2195 002c 1846     	 mov r0,r3
 2196 002e 1437     	 adds r7,r7,#20
 2197              	.LCFI172:
 2198              	 .cfi_def_cfa_offset 4
 2199 0030 BD46     	 mov sp,r7
 2200              	.LCFI173:
 2201              	 .cfi_def_cfa_register 13
 2202              	 
 2203 0032 5DF8047B 	 ldr r7,[sp],#4
 2204              	.LCFI174:
 2205              	 .cfi_restore 7
 2206              	 .cfi_def_cfa_offset 0
 2207 0036 7047     	 bx lr
 2208              	 .cfi_endproc
 2209              	.LFE220:
 2211              	 .section .text.XMC_CCU4_SLICE_EnableDithering,"ax",%progbits
 2212              	 .align 2
 2213              	 .global XMC_CCU4_SLICE_EnableDithering
 2214              	 .thumb
 2215              	 .thumb_func
 2217              	XMC_CCU4_SLICE_EnableDithering:
 2218              	.LFB221:
1008:../Libraries/XMCLib/src/xmc_ccu4.c **** #else
1009:../Libraries/XMCLib/src/xmc_ccu4.c **** uint32_t XMC_CCU4_SLICE_GetCapturedValueFromFifo(const XMC_CCU4_SLICE_t *const slice,
1010:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                                         const XMC_CCU4_SLICE_CAP_REG_SET_t set)
1011:../Libraries/XMCLib/src/xmc_ccu4.c **** {
1012:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t cap;
1013:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1014:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU4_IsValidSlice
1015:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_GetCapturedValueFromFifo:Invalid Register Set", 
1016:../Libraries/XMCLib/src/xmc_ccu4.c ****       ((set == XMC_CCU4_SLICE_CAP_REG_SET_LOW) ||\
1017:../Libraries/XMCLib/src/xmc_ccu4.c **** 		   (set == XMC_CCU4_SLICE_CAP_REG_SET_HIGH)));
1018:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1019:../Libraries/XMCLib/src/xmc_ccu4.c ****   if(XMC_CCU4_SLICE_CAP_REG_SET_LOW == set)
1020:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
1021:../Libraries/XMCLib/src/xmc_ccu4.c ****     cap = slice->ECRD0;
1022:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
1023:../Libraries/XMCLib/src/xmc_ccu4.c ****   else
1024:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
1025:../Libraries/XMCLib/src/xmc_ccu4.c ****     cap = slice->ECRD1;
1026:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
1027:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1028:../Libraries/XMCLib/src/xmc_ccu4.c ****   return cap;
1029:../Libraries/XMCLib/src/xmc_ccu4.c **** }
1030:../Libraries/XMCLib/src/xmc_ccu4.c **** #endif
1031:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1032:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Enables PWM dithering feature */
1033:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_EnableDithering(XMC_CCU4_SLICE_t *const slice,
1034:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                                const bool period_dither,
1035:../Libraries/XMCLib/src/xmc_ccu4.c ****                                     const bool duty_dither,
1036:../Libraries/XMCLib/src/xmc_ccu4.c ****                                     const uint8_t spread)
1037:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2219              	 .loc 2 1037 0
 2220              	 .cfi_startproc
 2221              	 
 2222              	 
 2223 0000 80B5     	 push {r7,lr}
 2224              	.LCFI175:
 2225              	 .cfi_def_cfa_offset 8
 2226              	 .cfi_offset 7,-8
 2227              	 .cfi_offset 14,-4
 2228 0002 84B0     	 sub sp,sp,#16
 2229              	.LCFI176:
 2230              	 .cfi_def_cfa_offset 24
 2231 0004 00AF     	 add r7,sp,#0
 2232              	.LCFI177:
 2233              	 .cfi_def_cfa_register 7
 2234 0006 7860     	 str r0,[r7,#4]
 2235 0008 0846     	 mov r0,r1
 2236 000a 1146     	 mov r1,r2
 2237 000c 1A46     	 mov r2,r3
 2238 000e 0346     	 mov r3,r0
 2239 0010 FB70     	 strb r3,[r7,#3]
 2240 0012 0B46     	 mov r3,r1
 2241 0014 BB70     	 strb r3,[r7,#2]
 2242 0016 1346     	 mov r3,r2
 2243 0018 7B70     	 strb r3,[r7,#1]
1038:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t tc;
1039:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1040:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_EnableDithering:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1041:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1042:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc = slice->TC;
 2244              	 .loc 2 1042 0
 2245 001a 7B68     	 ldr r3,[r7,#4]
 2246 001c 5B69     	 ldr r3,[r3,#20]
 2247 001e FB60     	 str r3,[r7,#12]
1043:../Libraries/XMCLib/src/xmc_ccu4.c ****   tc &= ~((uint32_t) CCU4_CC4_TC_DITHE_Msk);
 2248              	 .loc 2 1043 0
 2249 0020 FB68     	 ldr r3,[r7,#12]
 2250 0022 23F4C043 	 bic r3,r3,#24576
 2251 0026 FB60     	 str r3,[r7,#12]
1044:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1045:../Libraries/XMCLib/src/xmc_ccu4.c ****   if ((bool) true == period_dither)
 2252              	 .loc 2 1045 0
 2253 0028 FB78     	 ldrb r3,[r7,#3]
 2254 002a 002B     	 cmp r3,#0
 2255 002c 03D0     	 beq .L75
1046:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
1047:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (((uint32_t) XMC_CCU4_SLICE_DITHER_PERIOD_MASK) << CCU4_CC4_TC_DITHE_Pos);
 2256              	 .loc 2 1047 0
 2257 002e FB68     	 ldr r3,[r7,#12]
 2258 0030 43F40053 	 orr r3,r3,#8192
 2259 0034 FB60     	 str r3,[r7,#12]
 2260              	.L75:
1048:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
1049:../Libraries/XMCLib/src/xmc_ccu4.c ****   if ((bool) true == duty_dither)
 2261              	 .loc 2 1049 0
 2262 0036 BB78     	 ldrb r3,[r7,#2]
 2263 0038 002B     	 cmp r3,#0
 2264 003a 03D0     	 beq .L76
1050:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
1051:../Libraries/XMCLib/src/xmc_ccu4.c ****     tc |= (((uint32_t) XMC_CCU4_SLICE_DITHER_DUTYCYCLE_MASK) << CCU4_CC4_TC_DITHE_Pos);
 2265              	 .loc 2 1051 0
 2266 003c FB68     	 ldr r3,[r7,#12]
 2267 003e 43F48043 	 orr r3,r3,#16384
 2268 0042 FB60     	 str r3,[r7,#12]
 2269              	.L76:
1052:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
1053:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1054:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->TC = tc;
 2270              	 .loc 2 1054 0
 2271 0044 7B68     	 ldr r3,[r7,#4]
 2272 0046 FA68     	 ldr r2,[r7,#12]
 2273 0048 5A61     	 str r2,[r3,#20]
1055:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1056:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_CCU4_SLICE_SetDitherCompareValue((XMC_CCU4_SLICE_t *)slice, (uint8_t)spread);
 2274              	 .loc 2 1056 0
 2275 004a 7B78     	 ldrb r3,[r7,#1]
 2276 004c 7868     	 ldr r0,[r7,#4]
 2277 004e 1946     	 mov r1,r3
 2278 0050 FFF7FEFF 	 bl XMC_CCU4_SLICE_SetDitherCompareValue
1057:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2279              	 .loc 2 1057 0
 2280 0054 1037     	 adds r7,r7,#16
 2281              	.LCFI178:
 2282              	 .cfi_def_cfa_offset 8
 2283 0056 BD46     	 mov sp,r7
 2284              	.LCFI179:
 2285              	 .cfi_def_cfa_register 13
 2286              	 
 2287 0058 80BD     	 pop {r7,pc}
 2288              	 .cfi_endproc
 2289              	.LFE221:
 2291 005a 00BF     	 .section .text.XMC_CCU4_SLICE_SetPrescaler,"ax",%progbits
 2292              	 .align 2
 2293              	 .global XMC_CCU4_SLICE_SetPrescaler
 2294              	 .thumb
 2295              	 .thumb_func
 2297              	XMC_CCU4_SLICE_SetPrescaler:
 2298              	.LFB222:
1058:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1059:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Programs Pre-scalar divider  */
1060:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetPrescaler(XMC_CCU4_SLICE_t *const slice, const uint8_t div_val)
1061:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2299              	 .loc 2 1061 0
 2300              	 .cfi_startproc
 2301              	 
 2302              	 
 2303              	 
 2304 0000 80B4     	 push {r7}
 2305              	.LCFI180:
 2306              	 .cfi_def_cfa_offset 4
 2307              	 .cfi_offset 7,-4
 2308 0002 85B0     	 sub sp,sp,#20
 2309              	.LCFI181:
 2310              	 .cfi_def_cfa_offset 24
 2311 0004 00AF     	 add r7,sp,#0
 2312              	.LCFI182:
 2313              	 .cfi_def_cfa_register 7
 2314 0006 7860     	 str r0,[r7,#4]
 2315 0008 0B46     	 mov r3,r1
 2316 000a FB70     	 strb r3,[r7,#3]
1062:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t fpc;
1063:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1064:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetPrescaler:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1065:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1066:../Libraries/XMCLib/src/xmc_ccu4.c ****   fpc = slice->FPC;
 2317              	 .loc 2 1066 0
 2318 000c 7B68     	 ldr r3,[r7,#4]
 2319 000e 9B6A     	 ldr r3,[r3,#40]
 2320 0010 FB60     	 str r3,[r7,#12]
1067:../Libraries/XMCLib/src/xmc_ccu4.c ****   fpc &= ~((uint32_t) CCU4_CC4_FPC_PVAL_Msk);
 2321              	 .loc 2 1067 0
 2322 0012 FB68     	 ldr r3,[r7,#12]
 2323 0014 23F47063 	 bic r3,r3,#3840
 2324 0018 FB60     	 str r3,[r7,#12]
1068:../Libraries/XMCLib/src/xmc_ccu4.c ****   fpc |= ((uint32_t) div_val) << CCU4_CC4_FPC_PVAL_Pos;
 2325              	 .loc 2 1068 0
 2326 001a FB78     	 ldrb r3,[r7,#3]
 2327 001c 1B02     	 lsls r3,r3,#8
 2328 001e FA68     	 ldr r2,[r7,#12]
 2329 0020 1343     	 orrs r3,r3,r2
 2330 0022 FB60     	 str r3,[r7,#12]
1069:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->FPC = fpc;
 2331              	 .loc 2 1069 0
 2332 0024 7B68     	 ldr r3,[r7,#4]
 2333 0026 FA68     	 ldr r2,[r7,#12]
 2334 0028 9A62     	 str r2,[r3,#40]
1070:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* 
1071:../Libraries/XMCLib/src/xmc_ccu4.c ****    * In any case, update the initial value of the divider which is to be loaded once the prescaler 
1072:../Libraries/XMCLib/src/xmc_ccu4.c ****    * compare value.
1073:../Libraries/XMCLib/src/xmc_ccu4.c ****    */
1074:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->PSC = (uint32_t) div_val;
 2335              	 .loc 2 1074 0
 2336 002a FA78     	 ldrb r2,[r7,#3]
 2337 002c 7B68     	 ldr r3,[r7,#4]
 2338 002e 5A62     	 str r2,[r3,#36]
1075:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2339              	 .loc 2 1075 0
 2340 0030 1437     	 adds r7,r7,#20
 2341              	.LCFI183:
 2342              	 .cfi_def_cfa_offset 4
 2343 0032 BD46     	 mov sp,r7
 2344              	.LCFI184:
 2345              	 .cfi_def_cfa_register 13
 2346              	 
 2347 0034 5DF8047B 	 ldr r7,[sp],#4
 2348              	.LCFI185:
 2349              	 .cfi_restore 7
 2350              	 .cfi_def_cfa_offset 0
 2351 0038 7047     	 bx lr
 2352              	 .cfi_endproc
 2353              	.LFE222:
 2355 003a 00BF     	 .section .text.XMC_CCU4_SLICE_SetInterruptNode,"ax",%progbits
 2356              	 .align 2
 2357              	 .global XMC_CCU4_SLICE_SetInterruptNode
 2358              	 .thumb
 2359              	 .thumb_func
 2361              	XMC_CCU4_SLICE_SetInterruptNode:
 2362              	.LFB223:
1076:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1077:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Binds a capcom event to an NVIC node  */
1078:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetInterruptNode(XMC_CCU4_SLICE_t *const slice,
1079:../Libraries/XMCLib/src/xmc_ccu4.c ****                                      const XMC_CCU4_SLICE_IRQ_ID_t event,
1080:../Libraries/XMCLib/src/xmc_ccu4.c ****                                      const XMC_CCU4_SLICE_SR_ID_t sr)
1081:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2363              	 .loc 2 1081 0
 2364              	 .cfi_startproc
 2365              	 
 2366              	 
 2367              	 
 2368 0000 80B4     	 push {r7}
 2369              	.LCFI186:
 2370              	 .cfi_def_cfa_offset 4
 2371              	 .cfi_offset 7,-4
 2372 0002 87B0     	 sub sp,sp,#28
 2373              	.LCFI187:
 2374              	 .cfi_def_cfa_offset 32
 2375 0004 00AF     	 add r7,sp,#0
 2376              	.LCFI188:
 2377              	 .cfi_def_cfa_register 7
 2378 0006 7860     	 str r0,[r7,#4]
 2379 0008 0B46     	 mov r3,r1
 2380 000a FB70     	 strb r3,[r7,#3]
 2381 000c 1346     	 mov r3,r2
 2382 000e BB70     	 strb r3,[r7,#2]
1082:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t srs;
1083:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t pos;
1084:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t mask;
1085:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1086:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInterruptNode:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice))
1087:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInterruptNode:Invalid SR ID ", XMC_CCU4_SLICE_CHECK_SR_ID(sr));
1088:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetInterruptNode:Invalid event", XMC_CCU4_SLICE_CHECK_INTERRUPT(event)
1089:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1090:../Libraries/XMCLib/src/xmc_ccu4.c ****   srs = slice->SRS;
 2383              	 .loc 2 1090 0
 2384 0010 7B68     	 ldr r3,[r7,#4]
 2385 0012 D3F8A830 	 ldr r3,[r3,#168]
 2386 0016 FB60     	 str r3,[r7,#12]
1091:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1092:../Libraries/XMCLib/src/xmc_ccu4.c ****   switch(event)
 2387              	 .loc 2 1092 0
 2388 0018 FB78     	 ldrb r3,[r7,#3]
 2389 001a 092B     	 cmp r3,#9
 2390 001c 2CD8     	 bhi .L79
 2391 001e 01A2     	 adr r2,.L81
 2392 0020 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2393              	 .p2align 2
 2394              	.L81:
 2395 0024 4D000000 	 .word .L80+1
 2396 0028 4D000000 	 .word .L80+1
 2397 002c 57000000 	 .word .L82+1
 2398 0030 57000000 	 .word .L82+1
 2399 0034 79000000 	 .word .L79+1
 2400 0038 79000000 	 .word .L79+1
 2401 003c 79000000 	 .word .L79+1
 2402 0040 79000000 	 .word .L79+1
 2403 0044 61000000 	 .word .L83+1
 2404 0048 6D000000 	 .word .L84+1
 2405              	 .p2align 1
 2406              	.L80:
1093:../Libraries/XMCLib/src/xmc_ccu4.c ****   {
1094:../Libraries/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_PERIOD_MATCH:
1095:../Libraries/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_ONE_MATCH:
1096:../Libraries/XMCLib/src/xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_POSR_Msk);
 2407              	 .loc 2 1096 0
 2408 004c 0323     	 movs r3,#3
 2409 004e 3B61     	 str r3,[r7,#16]
1097:../Libraries/XMCLib/src/xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_POSR_Pos;
 2410              	 .loc 2 1097 0
 2411 0050 0023     	 movs r3,#0
 2412 0052 7B61     	 str r3,[r7,#20]
1098:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 2413              	 .loc 2 1098 0
 2414 0054 16E0     	 b .L85
 2415              	.L82:
1099:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1100:../Libraries/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_UP:
1101:../Libraries/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_COMPARE_MATCH_DOWN:
1102:../Libraries/XMCLib/src/xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_CMSR_Msk);
 2416              	 .loc 2 1102 0
 2417 0056 0C23     	 movs r3,#12
 2418 0058 3B61     	 str r3,[r7,#16]
1103:../Libraries/XMCLib/src/xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_CMSR_Pos;
 2419              	 .loc 2 1103 0
 2420 005a 0223     	 movs r3,#2
 2421 005c 7B61     	 str r3,[r7,#20]
1104:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 2422              	 .loc 2 1104 0
 2423 005e 11E0     	 b .L85
 2424              	.L83:
1105:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1106:../Libraries/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_EVENT0:
1107:../Libraries/XMCLib/src/xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_E0SR_Msk);
 2425              	 .loc 2 1107 0
 2426 0060 4FF44073 	 mov r3,#768
 2427 0064 3B61     	 str r3,[r7,#16]
1108:../Libraries/XMCLib/src/xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_E0SR_Pos;
 2428              	 .loc 2 1108 0
 2429 0066 0823     	 movs r3,#8
 2430 0068 7B61     	 str r3,[r7,#20]
1109:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 2431              	 .loc 2 1109 0
 2432 006a 0BE0     	 b .L85
 2433              	.L84:
1110:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1111:../Libraries/XMCLib/src/xmc_ccu4.c ****     case XMC_CCU4_SLICE_IRQ_ID_EVENT1:
1112:../Libraries/XMCLib/src/xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_E1SR_Msk);
 2434              	 .loc 2 1112 0
 2435 006c 4FF44063 	 mov r3,#3072
 2436 0070 3B61     	 str r3,[r7,#16]
1113:../Libraries/XMCLib/src/xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_E1SR_Pos;
 2437              	 .loc 2 1113 0
 2438 0072 0A23     	 movs r3,#10
 2439 0074 7B61     	 str r3,[r7,#20]
1114:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 2440              	 .loc 2 1114 0
 2441 0076 05E0     	 b .L85
 2442              	.L79:
1115:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1116:../Libraries/XMCLib/src/xmc_ccu4.c ****     default:
1117:../Libraries/XMCLib/src/xmc_ccu4.c ****       mask = ((uint32_t) CCU4_CC4_SRS_E2SR_Msk);
 2443              	 .loc 2 1117 0
 2444 0078 4FF44053 	 mov r3,#12288
 2445 007c 3B61     	 str r3,[r7,#16]
1118:../Libraries/XMCLib/src/xmc_ccu4.c ****       pos  = CCU4_CC4_SRS_E2SR_Pos;
 2446              	 .loc 2 1118 0
 2447 007e 0C23     	 movs r3,#12
 2448 0080 7B61     	 str r3,[r7,#20]
1119:../Libraries/XMCLib/src/xmc_ccu4.c ****       break;
 2449              	 .loc 2 1119 0
 2450 0082 00BF     	 nop
 2451              	.L85:
1120:../Libraries/XMCLib/src/xmc_ccu4.c ****   }
1121:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1122:../Libraries/XMCLib/src/xmc_ccu4.c ****   srs &= ~mask; 
 2452              	 .loc 2 1122 0
 2453 0084 3B69     	 ldr r3,[r7,#16]
 2454 0086 DB43     	 mvns r3,r3
 2455 0088 FA68     	 ldr r2,[r7,#12]
 2456 008a 1340     	 ands r3,r3,r2
 2457 008c FB60     	 str r3,[r7,#12]
1123:../Libraries/XMCLib/src/xmc_ccu4.c ****   srs |= (uint32_t)sr << pos;
 2458              	 .loc 2 1123 0
 2459 008e BA78     	 ldrb r2,[r7,#2]
 2460 0090 7B69     	 ldr r3,[r7,#20]
 2461 0092 02FA03F3 	 lsl r3,r2,r3
 2462 0096 FA68     	 ldr r2,[r7,#12]
 2463 0098 1343     	 orrs r3,r3,r2
 2464 009a FB60     	 str r3,[r7,#12]
1124:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->SRS = srs;
 2465              	 .loc 2 1124 0
 2466 009c 7B68     	 ldr r3,[r7,#4]
 2467 009e FA68     	 ldr r2,[r7,#12]
 2468 00a0 C3F8A820 	 str r2,[r3,#168]
1125:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2469              	 .loc 2 1125 0
 2470 00a4 1C37     	 adds r7,r7,#28
 2471              	.LCFI189:
 2472              	 .cfi_def_cfa_offset 4
 2473 00a6 BD46     	 mov sp,r7
 2474              	.LCFI190:
 2475              	 .cfi_def_cfa_register 13
 2476              	 
 2477 00a8 5DF8047B 	 ldr r7,[sp],#4
 2478              	.LCFI191:
 2479              	 .cfi_restore 7
 2480              	 .cfi_def_cfa_offset 0
 2481 00ac 7047     	 bx lr
 2482              	 .cfi_endproc
 2483              	.LFE223:
 2485 00ae 00BF     	 .section .text.XMC_CCU4_SLICE_SetPassiveLevel,"ax",%progbits
 2486              	 .align 2
 2487              	 .global XMC_CCU4_SLICE_SetPassiveLevel
 2488              	 .thumb
 2489              	 .thumb_func
 2491              	XMC_CCU4_SLICE_SetPassiveLevel:
 2492              	.LFB224:
1126:../Libraries/XMCLib/src/xmc_ccu4.c **** 
1127:../Libraries/XMCLib/src/xmc_ccu4.c **** /* Asserts passive level for the slice output */
1128:../Libraries/XMCLib/src/xmc_ccu4.c **** void XMC_CCU4_SLICE_SetPassiveLevel(XMC_CCU4_SLICE_t *const slice,
1129:../Libraries/XMCLib/src/xmc_ccu4.c ****                                     const XMC_CCU4_SLICE_OUTPUT_PASSIVE_LEVEL_t level)
1130:../Libraries/XMCLib/src/xmc_ccu4.c **** {
 2493              	 .loc 2 1130 0
 2494              	 .cfi_startproc
 2495              	 
 2496              	 
 2497              	 
 2498 0000 80B4     	 push {r7}
 2499              	.LCFI192:
 2500              	 .cfi_def_cfa_offset 4
 2501              	 .cfi_offset 7,-4
 2502 0002 85B0     	 sub sp,sp,#20
 2503              	.LCFI193:
 2504              	 .cfi_def_cfa_offset 24
 2505 0004 00AF     	 add r7,sp,#0
 2506              	.LCFI194:
 2507              	 .cfi_def_cfa_register 7
 2508 0006 7860     	 str r0,[r7,#4]
 2509 0008 0B46     	 mov r3,r1
 2510 000a FB70     	 strb r3,[r7,#3]
1131:../Libraries/XMCLib/src/xmc_ccu4.c ****   uint32_t psl; 
1132:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1133:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetPassiveLevel:Invalid Slice Pointer", XMC_CCU4_IsValidSlice(slice));
1134:../Libraries/XMCLib/src/xmc_ccu4.c ****   XMC_ASSERT("XMC_CCU4_SLICE_SetPassiveLevel:Invalid Passive level", ((level == XMC_CCU4_SLICE_OUTP
1135:../Libraries/XMCLib/src/xmc_ccu4.c **** 		                                                                  (level == XMC_CCU4_SLICE_OUTPUT
1136:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1137:../Libraries/XMCLib/src/xmc_ccu4.c ****   psl = slice->PSL;
 2511              	 .loc 2 1137 0
 2512 000c 7B68     	 ldr r3,[r7,#4]
 2513 000e 9B69     	 ldr r3,[r3,#24]
 2514 0010 FB60     	 str r3,[r7,#12]
1138:../Libraries/XMCLib/src/xmc_ccu4.c ****   psl &= ~((uint32_t) CCU4_CC4_PSL_PSL_Msk);
 2515              	 .loc 2 1138 0
 2516 0012 FB68     	 ldr r3,[r7,#12]
 2517 0014 23F00103 	 bic r3,r3,#1
 2518 0018 FB60     	 str r3,[r7,#12]
1139:../Libraries/XMCLib/src/xmc_ccu4.c ****   psl |= (uint32_t) level;
 2519              	 .loc 2 1139 0
 2520 001a FB78     	 ldrb r3,[r7,#3]
 2521 001c FA68     	 ldr r2,[r7,#12]
 2522 001e 1343     	 orrs r3,r3,r2
 2523 0020 FB60     	 str r3,[r7,#12]
1140:../Libraries/XMCLib/src/xmc_ccu4.c ****   
1141:../Libraries/XMCLib/src/xmc_ccu4.c ****   /* Program CC4 slice output passive level */
1142:../Libraries/XMCLib/src/xmc_ccu4.c ****   slice->PSL = psl;
 2524              	 .loc 2 1142 0
 2525 0022 7B68     	 ldr r3,[r7,#4]
 2526 0024 FA68     	 ldr r2,[r7,#12]
 2527 0026 9A61     	 str r2,[r3,#24]
1143:../Libraries/XMCLib/src/xmc_ccu4.c **** }
 2528              	 .loc 2 1143 0
 2529 0028 1437     	 adds r7,r7,#20
 2530              	.LCFI195:
 2531              	 .cfi_def_cfa_offset 4
 2532 002a BD46     	 mov sp,r7
 2533              	.LCFI196:
 2534              	 .cfi_def_cfa_register 13
 2535              	 
 2536 002c 5DF8047B 	 ldr r7,[sp],#4
 2537              	.LCFI197:
 2538              	 .cfi_restore 7
 2539              	 .cfi_def_cfa_offset 0
 2540 0030 7047     	 bx lr
 2541              	 .cfi_endproc
 2542              	.LFE224:
 2544 0032 00BF     	 .text
 2545              	.Letext0:
 2546              	 .file 3 "d:\\dave-4.1.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2547              	 .file 4 "d:\\dave-4.1.2\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2548              	 .file 5 "D:\\Naukowe\\BLDC_workspace\\PWM_from_ex/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 2549              	 .file 6 "D:\\Naukowe\\BLDC_workspace\\PWM_from_ex\\Libraries\\XMCLib\\inc/xmc4_scu.h"
 2550              	 .file 7 "D:\\Naukowe\\BLDC_workspace\\PWM_from_ex/Libraries/CMSIS/Include/core_cm4.h"
 2551              	 .file 8 "D:\\Naukowe\\BLDC_workspace\\PWM_from_ex/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ccu4.c
    {standard input}:20     .text.XMC_CCU4_StartPrescaler:00000000 $t
    {standard input}:24     .text.XMC_CCU4_StartPrescaler:00000000 XMC_CCU4_StartPrescaler
    {standard input}:66     .text.XMC_CCU4_SLICE_SetDitherCompareValue:00000000 $t
    {standard input}:70     .text.XMC_CCU4_SLICE_SetDitherCompareValue:00000000 XMC_CCU4_SLICE_SetDitherCompareValue
    {standard input}:111    .text.XMC_CCU4_lAssertReset:00000000 $t
    {standard input}:115    .text.XMC_CCU4_lAssertReset:00000000 XMC_CCU4_lAssertReset
    {standard input}:194    .text.XMC_CCU4_lAssertReset:00000054 $d
    {standard input}:203    .text.XMC_CCU4_lDeassertReset:00000000 $t
    {standard input}:207    .text.XMC_CCU4_lDeassertReset:00000000 XMC_CCU4_lDeassertReset
    {standard input}:285    .text.XMC_CCU4_lDeassertReset:00000054 $d
    {standard input}:294    .text.XMC_CCU4_EnableModule:00000000 $t
    {standard input}:299    .text.XMC_CCU4_EnableModule:00000000 XMC_CCU4_EnableModule
    {standard input}:336    .text.XMC_CCU4_DisableModule:00000000 $t
    {standard input}:341    .text.XMC_CCU4_DisableModule:00000000 XMC_CCU4_DisableModule
    {standard input}:375    .text.XMC_CCU4_Init:00000000 $t
    {standard input}:380    .text.XMC_CCU4_Init:00000000 XMC_CCU4_Init
    {standard input}:437    .text.XMC_CCU4_SetModuleClock:00000000 $t
    {standard input}:442    .text.XMC_CCU4_SetModuleClock:00000000 XMC_CCU4_SetModuleClock
    {standard input}:497    .text.XMC_CCU4_SetMultiChannelShadowTransferMode:00000000 $t
    {standard input}:502    .text.XMC_CCU4_SetMultiChannelShadowTransferMode:00000000 XMC_CCU4_SetMultiChannelShadowTransferMode
    {standard input}:559    .text.XMC_CCU4_SLICE_CompareInit:00000000 $t
    {standard input}:564    .text.XMC_CCU4_SLICE_CompareInit:00000000 XMC_CCU4_SLICE_CompareInit
    {standard input}:645    .text.XMC_CCU4_SLICE_CaptureInit:00000000 $t
    {standard input}:650    .text.XMC_CCU4_SLICE_CaptureInit:00000000 XMC_CCU4_SLICE_CaptureInit
    {standard input}:715    .text.XMC_CCU4_SLICE_StartConfig:00000000 $t
    {standard input}:720    .text.XMC_CCU4_SLICE_StartConfig:00000000 XMC_CCU4_SLICE_StartConfig
    {standard input}:799    .text.XMC_CCU4_SLICE_StopConfig:00000000 $t
    {standard input}:804    .text.XMC_CCU4_SLICE_StopConfig:00000000 XMC_CCU4_SLICE_StopConfig
    {standard input}:879    .text.XMC_CCU4_SLICE_LoadConfig:00000000 $t
    {standard input}:884    .text.XMC_CCU4_SLICE_LoadConfig:00000000 XMC_CCU4_SLICE_LoadConfig
    {standard input}:939    .text.XMC_CCU4_SLICE_ModulationConfig:00000000 $t
    {standard input}:944    .text.XMC_CCU4_SLICE_ModulationConfig:00000000 XMC_CCU4_SLICE_ModulationConfig
    {standard input}:1044   .text.XMC_CCU4_SLICE_CountConfig:00000000 $t
    {standard input}:1049   .text.XMC_CCU4_SLICE_CountConfig:00000000 XMC_CCU4_SLICE_CountConfig
    {standard input}:1104   .text.XMC_CCU4_SLICE_GateConfig:00000000 $t
    {standard input}:1109   .text.XMC_CCU4_SLICE_GateConfig:00000000 XMC_CCU4_SLICE_GateConfig
    {standard input}:1164   .text.XMC_CCU4_SLICE_Capture0Config:00000000 $t
    {standard input}:1169   .text.XMC_CCU4_SLICE_Capture0Config:00000000 XMC_CCU4_SLICE_Capture0Config
    {standard input}:1224   .text.XMC_CCU4_SLICE_Capture1Config:00000000 $t
    {standard input}:1229   .text.XMC_CCU4_SLICE_Capture1Config:00000000 XMC_CCU4_SLICE_Capture1Config
    {standard input}:1284   .text.XMC_CCU4_SLICE_DirectionConfig:00000000 $t
    {standard input}:1289   .text.XMC_CCU4_SLICE_DirectionConfig:00000000 XMC_CCU4_SLICE_DirectionConfig
    {standard input}:1344   .text.XMC_CCU4_SLICE_StatusBitOverrideConfig:00000000 $t
    {standard input}:1349   .text.XMC_CCU4_SLICE_StatusBitOverrideConfig:00000000 XMC_CCU4_SLICE_StatusBitOverrideConfig
    {standard input}:1400   .text.XMC_CCU4_SLICE_TrapConfig:00000000 $t
    {standard input}:1405   .text.XMC_CCU4_SLICE_TrapConfig:00000000 XMC_CCU4_SLICE_TrapConfig
    {standard input}:1498   .text.XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:00000000 $t
    {standard input}:1503   .text.XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent:00000000 XMC_CCU4_SLICE_ConfigureStatusBitOverrideEvent
    {standard input}:1636   .text.XMC_CCU4_SLICE_ConfigureEvent:00000000 $t
    {standard input}:1641   .text.XMC_CCU4_SLICE_ConfigureEvent:00000000 XMC_CCU4_SLICE_ConfigureEvent
    {standard input}:1779   .text.XMC_CCU4_SLICE_SetInput:00000000 $t
    {standard input}:1784   .text.XMC_CCU4_SLICE_SetInput:00000000 XMC_CCU4_SLICE_SetInput
    {standard input}:1854   .text.XMC_CCU4_SLICE_SetTimerRepeatMode:00000000 $t
    {standard input}:1859   .text.XMC_CCU4_SLICE_SetTimerRepeatMode:00000000 XMC_CCU4_SLICE_SetTimerRepeatMode
    {standard input}:1915   .text.XMC_CCU4_SLICE_SetTimerCountingMode:00000000 $t
    {standard input}:1920   .text.XMC_CCU4_SLICE_SetTimerCountingMode:00000000 XMC_CCU4_SLICE_SetTimerCountingMode
    {standard input}:1976   .text.XMC_CCU4_SLICE_GetCaptureRegisterValue:00000000 $t
    {standard input}:1981   .text.XMC_CCU4_SLICE_GetCaptureRegisterValue:00000000 XMC_CCU4_SLICE_GetCaptureRegisterValue
    {standard input}:2026   .text.XMC_CCU4_SLICE_GetLastCapturedTimerValue:00000000 $t
    {standard input}:2031   .text.XMC_CCU4_SLICE_GetLastCapturedTimerValue:00000000 XMC_CCU4_SLICE_GetLastCapturedTimerValue
    {standard input}:2149   .text.XMC_CCU4_GetCapturedValueFromFifo:00000000 $t
    {standard input}:2154   .text.XMC_CCU4_GetCapturedValueFromFifo:00000000 XMC_CCU4_GetCapturedValueFromFifo
    {standard input}:2212   .text.XMC_CCU4_SLICE_EnableDithering:00000000 $t
    {standard input}:2217   .text.XMC_CCU4_SLICE_EnableDithering:00000000 XMC_CCU4_SLICE_EnableDithering
    {standard input}:2292   .text.XMC_CCU4_SLICE_SetPrescaler:00000000 $t
    {standard input}:2297   .text.XMC_CCU4_SLICE_SetPrescaler:00000000 XMC_CCU4_SLICE_SetPrescaler
    {standard input}:2356   .text.XMC_CCU4_SLICE_SetInterruptNode:00000000 $t
    {standard input}:2361   .text.XMC_CCU4_SLICE_SetInterruptNode:00000000 XMC_CCU4_SLICE_SetInterruptNode
    {standard input}:2395   .text.XMC_CCU4_SLICE_SetInterruptNode:00000024 $d
    {standard input}:2405   .text.XMC_CCU4_SLICE_SetInterruptNode:0000004c $t
    {standard input}:2486   .text.XMC_CCU4_SLICE_SetPassiveLevel:00000000 $t
    {standard input}:2491   .text.XMC_CCU4_SLICE_SetPassiveLevel:00000000 XMC_CCU4_SLICE_SetPassiveLevel
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_CLOCK_EnableClock
